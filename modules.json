{
  "GitKlientSettings": {
    "RCName": "GitKlientSettings",
    "Name": "GitKlientSettings",
    "Groups": {
      "Preferences": {
        "Options": {
          "calendarType": {
            "Name": "calendarType",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "calendarTypeIndex": {
            "Name": "calendarTypeIndex",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "colorForeground": {
            "Name": "colorForeground",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"yellow\"",
            "IsDefaultCode": false,
            "Label": "color of the foreground",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "diffAddedColor": {
            "Name": "diffAddedColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"green\"",
            "IsDefaultCode": false,
            "Label": "Added color",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "diffModifiedColor": {
            "Name": "diffModifiedColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"blue\"",
            "IsDefaultCode": false,
            "Label": "Modified color",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "diffRemovedColor": {
            "Name": "diffRemovedColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"red\"",
            "IsDefaultCode": false,
            "Label": "Removed color",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "gitBinPath": {
            "Name": "gitBinPath",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "age of the project",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "openLastRepo": {
            "Name": "openLastRepo",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Open last repo at startup",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "registerDiffTool": {
            "Name": "registerDiffTool",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "registerMergeTool": {
            "Name": "registerMergeTool",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Preferences",
        "Name": "Preferences"
      }
    }
  },
  "akregator": {
    "RCName": "akregatorrc",
    "Name": "akregator",
    "Groups": {
      "Advanced": {
        "Options": {
          "Archive Backend": {
            "Name": "",
            "Key": "Archive Backend",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"metakit\"",
            "IsDefaultCode": false,
            "Label": "Archive Backend",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Delay Mark Read": {
            "Name": "UseMarkReadDelay",
            "Key": "Delay Mark Read",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Mark Read Delay": {
            "Name": "MarkReadDelay",
            "Key": "Mark Read Delay",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Reset Quick Filter On Node Change": {
            "Name": "",
            "Key": "Reset Quick Filter On Node Change",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Advanced",
        "Name": "Advanced"
      },
      "Appearance": {
        "Options": {
          "ColorNewArticles": {
            "Name": "",
            "Key": "ColorNewArticles",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"#FF0000\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ColorUnreadArticles": {
            "Name": "",
            "Key": "ColorUnreadArticles",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"#0000FF\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Fixed Font": {
            "Name": "",
            "Key": "Fixed Font",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GrantleeDirectory": {
            "Name": "",
            "Key": "GrantleeDirectory",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"5.2\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Sans Serif Font": {
            "Name": "",
            "Key": "Sans Serif Font",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Serif Font": {
            "Name": "",
            "Key": "Serif Font",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Standard Font": {
            "Name": "",
            "Key": "Standard Font",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "UseCustomColors": {
            "Name": "",
            "Key": "UseCustomColors",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Appearance",
        "Name": "Appearance"
      },
      "Archive": {
        "Options": {
          "ArchiveMode": {
            "Name": "",
            "Key": "ArchiveMode",
            "HasKey": true,
            "TypeValue": "(either str (enum [ \n              \"keepAllArticles\"\n              \"limitArticleNumber\"\n              \"limitArticleAge\"\n              \"disableArchiving\"\n            ]))",
            "DefaultValue": "\"keepAllArticles\"",
            "IsDefaultCode": false,
            "Label": "Archive Mode",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "keepAllArticles",
                "Label": "Keep All Articles"
              },
              {
                "Name": "limitArticleNumber",
                "Label": "Limit Number of Articles"
              },
              {
                "Name": "limitArticleAge",
                "Label": "Delete Expired Articles"
              },
              {
                "Name": "disableArchiving",
                "Label": "Disable Archiving"
              }
            ]
          },
          "Do Not Expire Important Articles": {
            "Name": "",
            "Key": "Do Not Expire Important Articles",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Do Not Expire Important Articles",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Max Article Age": {
            "Name": "",
            "Key": "Max Article Age",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "60",
            "IsDefaultCode": false,
            "Label": "Expiry Age",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Max Article Number": {
            "Name": "",
            "Key": "Max Article Number",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "1000",
            "IsDefaultCode": false,
            "Label": "Article Limit",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Archive",
        "Name": "Archive"
      },
      "Browser": {
        "Options": {
          "Always Show Tab Bar": {
            "Name": "",
            "Key": "Always Show Tab Bar",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Always show the tab bar",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Close Button On Tabs": {
            "Name": "",
            "Key": "Close Button On Tabs",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Show close buttons on tabs",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "EnableJavascript": {
            "Name": "",
            "Key": "EnableJavascript",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Enable Javascript",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "External Browser Custom Command": {
            "Name": "",
            "Key": "External Browser Custom Command",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"firefox %u\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "External Browser Use Custom Command": {
            "Name": "",
            "Key": "External Browser Use Custom Command",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Use this command:",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "External Browser Use Kde Default": {
            "Name": "",
            "Key": "External Browser Use Kde Default",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Use default KDE web browser",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LMB Behaviour": {
            "Name": "",
            "Key": "LMB Behaviour",
            "HasKey": true,
            "TypeValue": "(either str (enum [ \n              \"OpenInInternalBrowser\"\n              \"OpenInBackground\"\n              \"OpenInExternalBrowser\"\n            ]))",
            "DefaultValue": "\"OpenInInternalBrowser\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "OpenInInternalBrowser",
                "Label": ""
              },
              {
                "Name": "OpenInBackground",
                "Label": ""
              },
              {
                "Name": "OpenInExternalBrowser",
                "Label": ""
              }
            ]
          },
          "MMB Behaviour": {
            "Name": "",
            "Key": "MMB Behaviour",
            "HasKey": true,
            "TypeValue": "(either str (enum [ \n              \"OpenInInternalBrowser\"\n              \"OpenInBackground\"\n              \"OpenInExternalBrowser\"\n            ]))",
            "DefaultValue": "\"OpenInExternalBrowser\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "OpenInInternalBrowser",
                "Label": ""
              },
              {
                "Name": "OpenInBackground",
                "Label": ""
              },
              {
                "Name": "OpenInExternalBrowser",
                "Label": ""
              }
            ]
          },
          "New Window In Tab": {
            "Name": "",
            "Key": "New Window In Tab",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Open links in new tab instead of in new window",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Browser",
        "Name": "Browser"
      },
      "Columns": {
        "Options": {
          "Articlelist Header States": {
            "Name": "",
            "Key": "Articlelist Header States",
            "HasKey": true,
            "TypeValue": "(either str (listOf int))",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "IntList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Articlelist Sort Column": {
            "Name": "",
            "Key": "Articlelist Sort Column",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Articlelist Sort Order": {
            "Name": "",
            "Key": "Articlelist Sort Order",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Feedlist Header States": {
            "Name": "",
            "Key": "Feedlist Header States",
            "HasKey": true,
            "TypeValue": "(either str (listOf int))",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "IntList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Columns",
        "Name": "Columns"
      },
      "General": {
        "Options": {
          "Auto Fetch Interval": {
            "Name": "",
            "Key": "Auto Fetch Interval",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "30",
            "IsDefaultCode": false,
            "Label": "Interval for autofetching",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Disable Introduction": {
            "Name": "",
            "Key": "Disable Introduction",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Disable Save As Notification": {
            "Name": "",
            "Key": "Disable Save As Notification",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Fetch On Startup": {
            "Name": "",
            "Key": "Fetch On Startup",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Fetch on startup",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Mark All Feeds Read On Startup": {
            "Name": "",
            "Key": "Mark All Feeds Read On Startup",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Mark all feeds as read on startup",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Show Tray Icon": {
            "Name": "",
            "Key": "Show Tray Icon",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Show tray icon",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Show Unread In Taskbar": {
            "Name": "",
            "Key": "Show Unread In Taskbar",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Show Unread In Taskbar",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Use Interval Fetch": {
            "Name": "",
            "Key": "Use Interval Fetch",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Use interval fetching",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Use Notifications": {
            "Name": "",
            "Key": "Use Notifications",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Use notifications",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "General",
        "Name": "General"
      },
      "HTML Settings": {
        "Options": {
          "AccessKeyEnabled": {
            "Name": "",
            "Key": "AccessKeyEnabled",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Fonts": {
            "Name": "",
            "Key": "Fonts",
            "HasKey": true,
            "TypeValue": "(either str (listOf str))",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "StringList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "MediumFontSize": {
            "Name": "",
            "Key": "MediumFontSize",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "12",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "MinimumFontSize": {
            "Name": "",
            "Key": "MinimumFontSize",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "8",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "HTML Settings",
        "Name": "HTML Settings"
      },
      "Network": {
        "Options": {
          "Concurrent Fetches": {
            "Name": "",
            "Key": "Concurrent Fetches",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "6",
            "IsDefaultCode": false,
            "Label": "Concurrent Fetches",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Custom UserAgent": {
            "Name": "",
            "Key": "Custom UserAgent",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Use HTML Cache": {
            "Name": "",
            "Key": "Use HTML Cache",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Use HTML Cache",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Network",
        "Name": "Network"
      },
      "Security": {
        "Options": {
          "CheckPhishingUrl": {
            "Name": "CheckPhishingUrl",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LoadExternalReferences": {
            "Name": "LoadExternalReferences",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Security",
        "Name": "Security"
      },
      "View": {
        "Options": {
          "Auto Expand Folders": {
            "Name": "",
            "Key": "Auto Expand Folders",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Auto-Expand folders with unread articles",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Hide Read Feeds": {
            "Name": "",
            "Key": "Hide Read Feeds",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Hide feeds with no unread articles",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Lock Feeds In Place": {
            "Name": "",
            "Key": "Lock Feeds In Place",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Prevent feeds from being moved in the list",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Show Quick Filter": {
            "Name": "",
            "Key": "Show Quick Filter",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Show Quick Filter",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowMenuBar": {
            "Name": "",
            "Key": "ShowMenuBar",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Splitter 1 Sizes": {
            "Name": "",
            "Key": "Splitter 1 Sizes",
            "HasKey": true,
            "TypeValue": "(either str (listOf int))",
            "DefaultValue": "\"225,650\"",
            "IsDefaultCode": false,
            "Label": "Sizes for first splitter",
            "Type": "IntList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Splitter 2 Sizes": {
            "Name": "",
            "Key": "Splitter 2 Sizes",
            "HasKey": true,
            "TypeValue": "(either str (listOf int))",
            "DefaultValue": "\"50,350\"",
            "IsDefaultCode": false,
            "Label": "Sizes for second splitter",
            "Type": "IntList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Status Filter": {
            "Name": "",
            "Key": "Status Filter",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "Status Filter",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Text Filter": {
            "Name": "",
            "Key": "Text Filter",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "Text Filter",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "View Mode": {
            "Name": "",
            "Key": "View Mode",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "View Mode",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "View",
        "Name": "View"
      }
    }
  },
  "ark": {
    "RCName": "arkrc",
    "Name": "ark",
    "Groups": {
      "Extraction": {
        "Options": {
          "closeAfterExtraction": {
            "Name": "closeAfterExtraction",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Close Ark after extraction.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "extractToSubfolder": {
            "Name": "extractToSubfolder",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Extract to a subfolder if the archive has more than one top-level entry.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "openDestinationFolderAfterExtraction": {
            "Name": "openDestinationFolderAfterExtraction",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Open destination folder after extraction.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "preservePaths": {
            "Name": "preservePaths",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Preserve paths when extracting.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Extraction",
        "Name": "Extraction"
      },
      "General": {
        "Options": {
          "defaultOpenAction": {
            "Name": "defaultOpenAction",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (enum [ \n              \"Preview\"\n              \"Open\"\n            ]))",
            "DefaultValue": "\"Preview\"",
            "IsDefaultCode": false,
            "Label": "Default action when opening archive entries.",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "Preview",
                "Label": ""
              },
              {
                "Name": "Open",
                "Label": ""
              }
            ]
          },
          "showEncryptionWarning": {
            "Name": "showEncryptionWarning",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Whether to show a warning when creating zip archives with AES encryption.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "General",
        "Name": "General"
      },
      "MainWindow": {
        "Options": {
          "showInfoPanel": {
            "Name": "showInfoPanel",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Whether to show the information panel.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "splitterSizes": {
            "Name": "splitterSizes",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (listOf int))",
            "DefaultValue": "\"200,100\"",
            "IsDefaultCode": false,
            "Label": "How the main window is divided.",
            "Type": "IntList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "MainWindow",
        "Name": "MainWindow"
      },
      "Plugins": {
        "Options": {
          "disabledPlugins": {
            "Name": "disabledPlugins",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (listOf str))",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "StringList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Plugins",
        "Name": "Plugins"
      },
      "Preview": {
        "Options": {
          "limitPreviewFileSize": {
            "Name": "limitPreviewFileSize",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Whether to limit the preview according to file size.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "previewFileSizeLimit": {
            "Name": "previewFileSizeLimit",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "200",
            "IsDefaultCode": false,
            "Label": "Preview file size limit in megabytes.",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Preview",
        "Name": "Preview"
      }
    }
  },
  "baloo": {
    "RCName": "baloofilerc",
    "Name": "baloo",
    "Groups": {
      "Basic Settings": {
        "Options": {
          "Indexing-Enabled": {
            "Name": "indexingEnabled",
            "Key": "Indexing-Enabled",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Indexing-Enabled",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Basic Settings",
        "Name": "Basic Settings"
      },
      "General": {
        "Options": {
          "dbVersion": {
            "Name": "dbVersion",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "db version",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "exclude filters": {
            "Name": "excludedFilters",
            "Key": "exclude filters",
            "HasKey": true,
            "TypeValue": "(either str (listOf str))",
            "DefaultValue": "\"Baloo::defaultExcludeFilterList()\"",
            "IsDefaultCode": true,
            "Label": "exclude filters",
            "Type": "StringList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "exclude filters version": {
            "Name": "excludedFiltersVersion",
            "Key": "exclude filters version",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "exclude filters version",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "exclude folders": {
            "Name": "excludedFolders",
            "Key": "exclude folders",
            "HasKey": true,
            "TypeValue": "(either str (listOf str))",
            "DefaultValue": "\"QStringList()\"",
            "IsDefaultCode": true,
            "Label": "exclude folders",
            "Type": "PathList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "exclude mimetypes": {
            "Name": "excludedMimetypes",
            "Key": "exclude mimetypes",
            "HasKey": true,
            "TypeValue": "(either str (listOf str))",
            "DefaultValue": "\"Baloo::defaultExcludeMimetypes()\"",
            "IsDefaultCode": true,
            "Label": "exclude mimetypes",
            "Type": "StringList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "folders": {
            "Name": "folders",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (listOf str))",
            "DefaultValue": "\"QStringList() \u003c\u003c QDir::homePath()\"",
            "IsDefaultCode": true,
            "Label": "folders",
            "Type": "PathList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "index hidden folders": {
            "Name": "indexHiddenFolders",
            "Key": "index hidden folders",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "index hidden folders",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "only basic indexing": {
            "Name": "onlyBasicIndexing",
            "Key": "only basic indexing",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "only basic indexing",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "General",
        "Name": "General"
      }
    }
  },
  "breeze": {
    "RCName": "breezerc",
    "Name": "breeze",
    "Groups": {
      "Common": {
        "Options": {
          "OutlineCloseButton": {
            "Name": "OutlineCloseButton",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShadowColor": {
            "Name": "ShadowColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"0, 0, 0\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShadowSize": {
            "Name": "ShadowSize",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (enum [ \n              \"ShadowNone\"\n              \"ShadowSmall\"\n              \"ShadowMedium\"\n              \"ShadowLarge\"\n              \"ShadowVeryLarge\"\n            ]))",
            "DefaultValue": "\"ShadowLarge\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "ShadowNone",
                "Label": ""
              },
              {
                "Name": "ShadowSmall",
                "Label": ""
              },
              {
                "Name": "ShadowMedium",
                "Label": ""
              },
              {
                "Name": "ShadowLarge",
                "Label": ""
              },
              {
                "Name": "ShadowVeryLarge",
                "Label": ""
              }
            ]
          },
          "ShadowStrength": {
            "Name": "ShadowStrength",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "255",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "25",
            "HasMin": true,
            "Max": "255",
            "HasMax": true,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Common",
        "Name": "Common"
      },
      "Windeco": {
        "Options": {
          "BorderSize": {
            "Name": "BorderSize",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (enum [ \n              \"BorderNone\"\n              \"BorderNoSides\"\n              \"BorderTiny\"\n              \"BorderNormal\"\n              \"BorderLarge\"\n              \"BorderVeryLarge\"\n              \"BorderHuge\"\n              \"BorderVeryHuge\"\n              \"BorderOversized\"\n            ]))",
            "DefaultValue": "\"BorderNone\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "BorderNone",
                "Label": ""
              },
              {
                "Name": "BorderNoSides",
                "Label": ""
              },
              {
                "Name": "BorderTiny",
                "Label": ""
              },
              {
                "Name": "BorderNormal",
                "Label": ""
              },
              {
                "Name": "BorderLarge",
                "Label": ""
              },
              {
                "Name": "BorderVeryLarge",
                "Label": ""
              },
              {
                "Name": "BorderHuge",
                "Label": ""
              },
              {
                "Name": "BorderVeryHuge",
                "Label": ""
              },
              {
                "Name": "BorderOversized",
                "Label": ""
              }
            ]
          },
          "ButtonSize": {
            "Name": "ButtonSize",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (enum [ \n              \"ButtonTiny\"\n              \"ButtonSmall\"\n              \"ButtonDefault\"\n              \"ButtonLarge\"\n              \"ButtonVeryLarge\"\n            ]))",
            "DefaultValue": "\"ButtonDefault\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "ButtonTiny",
                "Label": ""
              },
              {
                "Name": "ButtonSmall",
                "Label": ""
              },
              {
                "Name": "ButtonDefault",
                "Label": ""
              },
              {
                "Name": "ButtonLarge",
                "Label": ""
              },
              {
                "Name": "ButtonVeryLarge",
                "Label": ""
              }
            ]
          },
          "DrawBackgroundGradient": {
            "Name": "DrawBackgroundGradient",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DrawBorderOnMaximizedWindows": {
            "Name": "DrawBorderOnMaximizedWindows",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Enabled": {
            "Name": "Enabled",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ExceptionPattern": {
            "Name": "ExceptionPattern",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ExceptionType": {
            "Name": "ExceptionType",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (enum [ \n              \"ExceptionWindowClassName\"\n              \"ExceptionWindowTitle\"\n            ]))",
            "DefaultValue": "\"ExceptionWindowClassName\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "ExceptionWindowClassName",
                "Label": ""
              },
              {
                "Name": "ExceptionWindowTitle",
                "Label": ""
              }
            ]
          },
          "HideTitleBar": {
            "Name": "HideTitleBar",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Mask": {
            "Name": "Mask",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TitleAlignment": {
            "Name": "TitleAlignment",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (enum [ \n              \"AlignLeft\"\n              \"AlignCenter\"\n              \"AlignCenterFullWidth\"\n              \"AlignRight\"\n            ]))",
            "DefaultValue": "\"AlignCenterFullWidth\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "AlignLeft",
                "Label": ""
              },
              {
                "Name": "AlignCenter",
                "Label": ""
              },
              {
                "Name": "AlignCenterFullWidth",
                "Label": ""
              },
              {
                "Name": "AlignRight",
                "Label": ""
              }
            ]
          }
        },
        "Description": "Windeco",
        "Name": "Windeco"
      }
    }
  },
  "bytetableviewsettings": {
    "RCName": "bytetableviewsettingsrc",
    "Name": "bytetableviewsettings",
    "Groups": {
      "ByteTableView": {
        "Options": {
          "ColumnsWidth": {
            "Name": "ColumnsWidth",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (listOf int))",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "IntList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FixedFont": {
            "Name": "FixedFont",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Font": {
            "Name": "Font",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Style": {
            "Name": "Style",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "ByteTableView",
        "Name": "ByteTableView"
      }
    }
  },
  "config": {
    "RCName": "configrc",
    "Name": "config",
    "Groups": {
      "General": {
        "Options": {
          "ShouldShow": {
            "Name": "ShouldShow",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Whether to show the welcome app on next boot, because the user has not either skipped or completed the initial setup process.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "General",
        "Name": "General"
      }
    }
  },
  "dolphin": {
    "RCName": "dolphinrc",
    "Name": "dolphin",
    "Groups": {
      "CompactMode": {
        "Options": {
          "IconSize": {
            "Name": "IconSize",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"KIconLoader::SizeSmall\"",
            "IsDefaultCode": true,
            "Label": "Icon size",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "MaximumTextWidthIndex": {
            "Name": "MaximumTextWidthIndex",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "Maximum text width index (0 means unlimited)",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "PreviewSize": {
            "Name": "PreviewSize",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"KIconLoader::SizeLarge\"",
            "IsDefaultCode": true,
            "Label": "Preview size",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "UseSystemFont": {
            "Name": "UseSystemFont",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Use system font",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ViewFont": {
            "Name": "ViewFont",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"QFont()\"",
            "IsDefaultCode": true,
            "Label": "",
            "Type": "Font",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "CompactMode",
        "Name": "CompactMode"
      },
      "ContextMenu": {
        "Options": {
          "ShowAddToPlaces": {
            "Name": "ShowAddToPlaces",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Show 'Add to Places' in context menu.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowCopyLocation": {
            "Name": "ShowCopyLocation",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Show 'Copy Location' in context menu.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowCopyMoveMenu": {
            "Name": "ShowCopyMoveMenu",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Show 'Copy To' and 'Move To' commands in context menu",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowDuplicateHere": {
            "Name": "ShowDuplicateHere",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Show 'Duplicate Here' in context menu.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowOpenInNewTab": {
            "Name": "ShowOpenInNewTab",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Show 'Open in New Tab' and 'Open in New Tabs' in context menu.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowOpenInNewWindow": {
            "Name": "ShowOpenInNewWindow",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Show 'Open in New Window' in context menu.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowOpenTerminal": {
            "Name": "ShowOpenTerminal",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Show 'Open Terminal' in context menu.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowSortBy": {
            "Name": "ShowSortBy",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Show 'Sort By' in context menu.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowViewMode": {
            "Name": "ShowViewMode",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Show 'View Mode' in context menu.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "ContextMenu",
        "Name": "ContextMenu"
      },
      "DetailsMode": {
        "Options": {
          "ColumnPositions": {
            "Name": "ColumnPositions",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (listOf int))",
            "DefaultValue": "\"0,1,2,3,4,5,6,7,8\"",
            "IsDefaultCode": false,
            "Label": "Position of columns",
            "Type": "IntList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DirectorySizeCount": {
            "Name": "DirectorySizeCount",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Whether or not content count is used as directory size",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ExpandableFolders": {
            "Name": "ExpandableFolders",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Expandable folders",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HighlightEntireRow": {
            "Name": "HighlightEntireRow",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Highlight entire row",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "IconSize": {
            "Name": "IconSize",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"KIconLoader::SizeSmall\"",
            "IsDefaultCode": true,
            "Label": "Icon size",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "PreviewSize": {
            "Name": "PreviewSize",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"KIconLoader::SizeLarge\"",
            "IsDefaultCode": true,
            "Label": "Preview size",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "RecursiveDirectorySizeLimit": {
            "Name": "RecursiveDirectorySizeLimit",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "10",
            "IsDefaultCode": false,
            "Label": "Recursive directory size limit",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SidePadding": {
            "Name": "SidePadding",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "20",
            "IsDefaultCode": false,
            "Label": "Side Padding",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "UseShortRelativeDates": {
            "Name": "UseShortRelativeDates",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "if true we use short relative dates, if not short dates",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "UseSystemFont": {
            "Name": "UseSystemFont",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Use system font",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ViewFont": {
            "Name": "ViewFont",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"QFont()\"",
            "IsDefaultCode": true,
            "Label": "",
            "Type": "Font",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "DetailsMode",
        "Name": "DetailsMode"
      },
      "Dolphin": {
        "Options": {
          "AdditionalInfo": {
            "Name": "AdditionalInfo",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (listOf str))",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "Additional Information",
            "Type": "StringList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GroupedSorting": {
            "Name": "GroupedSorting",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Grouped Sorting",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HeaderColumnWidths": {
            "Name": "HeaderColumnWidths",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (listOf int))",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "Header column widths",
            "Type": "IntList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "PreviewsShown": {
            "Name": "PreviewsShown",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Previews shown",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SortFoldersFirst": {
            "Name": "SortFoldersFirst",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Show folders first when sorting files and folders",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SortHiddenLast": {
            "Name": "SortHiddenLast",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Show hidden files and folders last",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SortOrder": {
            "Name": "SortOrder",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"Qt::AscendingOrder\"",
            "IsDefaultCode": true,
            "Label": "Order in which to sort files",
            "Type": "Int",
            "Min": "Qt::AscendingOrder",
            "HasMin": true,
            "Max": "Qt::DescendingOrder",
            "HasMax": true,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SortRole": {
            "Name": "SortRole",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"text\"",
            "IsDefaultCode": false,
            "Label": "Sort files by",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Timestamp": {
            "Name": "Timestamp",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "Properties last changed",
            "Type": "DateTime",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Version": {
            "Name": "Version",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "-1",
            "IsDefaultCode": false,
            "Label": "Version",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ViewMode": {
            "Name": "ViewMode",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"DolphinView::IconsView\"",
            "IsDefaultCode": false,
            "Label": "View Mode",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "VisibleRoles": {
            "Name": "VisibleRoles",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (listOf str))",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "Visible roles",
            "Type": "StringList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Dolphin",
        "Name": "Dolphin"
      },
      "General": {
        "Options": {
          "AutoExpandFolders": {
            "Name": "AutoExpandFolders",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Use auto-expanding folders for all view types",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "BrowseThroughArchives": {
            "Name": "BrowseThroughArchives",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Browse through archives",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "CloseActiveSplitView": {
            "Name": "CloseActiveSplitView",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Close active pane when toggling off split view",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ConfirmClosingMultipleTabs": {
            "Name": "ConfirmClosingMultipleTabs",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Ask for confirmation when closing windows with multiple tabs.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ConfirmClosingTerminalRunningProgram": {
            "Name": "ConfirmClosingTerminalRunningProgram",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Ask for confirmation when closing windows with a program that is still running in the Terminal panel.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "EditableUrl": {
            "Name": "EditableUrl",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Should the URL be editable for the user",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "EnlargeSmallPreviews": {
            "Name": "EnlargeSmallPreviews",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Enlarge Small Previews",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FilterBar": {
            "Name": "FilterBar",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Should the filter bar be shown",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GlobalViewProps": {
            "Name": "GlobalViewProps",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Should the view properties be used for all folders",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HomeUrl": {
            "Name": "HomeUrl",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"QUrl::fromLocalFile(QDir::homePath()).toDisplayString(QUrl::PreferLocalFile)\"",
            "IsDefaultCode": true,
            "Label": "Home URL",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LockPanels": {
            "Name": "LockPanels",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Lock the layout of the panels",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ModifiedStartupSettings": {
            "Name": "ModifiedStartupSettings",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Have the startup settings been modified (internal setting not shown in the UI)",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "OpenExternallyCalledFolderInNewTab": {
            "Name": "OpenExternallyCalledFolderInNewTab",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Should an externally called folder open in a new tab in an existing Dolphin instance",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "OpenNewTabAfterLastTab": {
            "Name": "OpenNewTabAfterLastTab",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "New tab will be open after last one",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "RememberOpenedTabs": {
            "Name": "RememberOpenedTabs",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Remember open folders and tabs",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "RenameInline": {
            "Name": "RenameInline",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Rename inline",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowFullPath": {
            "Name": "ShowFullPath",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Should the full path be shown inside the location bar",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowFullPathInTitlebar": {
            "Name": "ShowFullPathInTitlebar",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Should the full path be shown in the title bar",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowPasteBarAfterCopying": {
            "Name": "ShowPasteBarAfterCopying",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Show a bar for easy pasting after a cut or copy was done using the selection mode bottom bar.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowSelectionToggle": {
            "Name": "ShowSelectionToggle",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Show selection toggle",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowSpaceInfo": {
            "Name": "ShowSpaceInfo",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Show the space information in the statusbar",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowStatusBar": {
            "Name": "ShowStatusBar",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Show the statusbar",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowToolTips": {
            "Name": "ShowToolTips",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Show tooltips",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowZoomSlider": {
            "Name": "ShowZoomSlider",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Show zoom slider in the statusbar",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SortingChoice": {
            "Name": "SortingChoice",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (enum [ \n              \"NaturalSorting\"\n              \"CaseInsensitiveSorting\"\n              \"CaseSensitiveSorting\"\n            ]))",
            "DefaultValue": "\"0\"",
            "IsDefaultCode": false,
            "Label": "Choose Natural, Case Sensitive, or Case Insensitive order of sorting the items",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "NaturalSorting",
                "Label": ""
              },
              {
                "Name": "CaseInsensitiveSorting",
                "Label": ""
              },
              {
                "Name": "CaseSensitiveSorting",
                "Label": ""
              }
            ]
          },
          "SplitView": {
            "Name": "SplitView",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Split the view into two panes",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "UrlCompletionMode": {
            "Name": "UrlCompletionMode",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (enum [ \n            ]))",
            "DefaultValue": "\"KCompletion::CompletionPopupAuto\"",
            "IsDefaultCode": false,
            "Label": "Text completion mode of the URL Navigator",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "UseTabForSwitchingSplitView": {
            "Name": "UseTabForSwitchingSplitView",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Use tab for switching between right and left split",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Version": {
            "Name": "Version",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "Internal config version of Dolphin, mainly Used to determine whether an updated version of Dolphin is running, so as to migrate config entries that were removed/renamed ...etc",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ViewPropsTimestamp": {
            "Name": "ViewPropsTimestamp",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "Timestamp since when the view properties are valid",
            "Type": "DateTime",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "General",
        "Name": "General"
      },
      "IconsMode": {
        "Options": {
          "IconSize": {
            "Name": "IconSize",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"KIconLoader::SizeMedium\"",
            "IsDefaultCode": true,
            "Label": "Icon size",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "MaximumTextLines": {
            "Name": "MaximumTextLines",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "3",
            "IsDefaultCode": false,
            "Label": "Maximum textlines (0 means unlimited)",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "PreviewSize": {
            "Name": "PreviewSize",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"KIconLoader::SizeHuge\"",
            "IsDefaultCode": true,
            "Label": "Preview size",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TextWidthIndex": {
            "Name": "TextWidthIndex",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "1",
            "IsDefaultCode": false,
            "Label": "Text width index",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "UseSystemFont": {
            "Name": "UseSystemFont",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Use system font",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ViewFont": {
            "Name": "ViewFont",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"QFont()\"",
            "IsDefaultCode": true,
            "Label": "",
            "Type": "Font",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "IconsMode",
        "Name": "IconsMode"
      },
      "PlacesPanel": {
        "Options": {
          "IconSize": {
            "Name": "IconSize",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"KIconLoader::SizeSmallMedium\"",
            "IsDefaultCode": true,
            "Label": "Size of icons in the Places Panel (-1 means \"automatic\")",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "PlacesPanel",
        "Name": "PlacesPanel"
      },
      "Settings": {
        "Options": {
          "HiddenFilesShown": {
            "Name": "HiddenFilesShown",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Hidden files shown",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Settings",
        "Name": "Settings"
      }
    }
  },
  "fieldingconfig": {
    "RCName": "fieldingconfigrc",
    "Name": "fieldingconfig",
    "Groups": {
      "General": {
        "Options": {
          "Method": {
            "Name": "Method",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (enum [ \n              \"Get\"\n              \"Post\"\n              \"Put\"\n              \"Patch\"\n              \"Delete\"\n            ]))",
            "DefaultValue": "\"Get\"",
            "IsDefaultCode": false,
            "Label": "The last HTTP method used.",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "Get",
                "Label": ""
              },
              {
                "Name": "Post",
                "Label": ""
              },
              {
                "Name": "Put",
                "Label": ""
              },
              {
                "Name": "Patch",
                "Label": ""
              },
              {
                "Name": "Delete",
                "Label": ""
              }
            ]
          }
        },
        "Description": "General",
        "Name": "General"
      }
    }
  },
  "haruna": {
    "RCName": "haruna/haruna.conf",
    "Name": "haruna",
    "Groups": {
      "General": {
        "Options": {
          "ColorScheme": {
            "Name": "ColorScheme",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FileDialogLastLocation": {
            "Name": "FileDialogLastLocation",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"videoFolder\"",
            "IsDefaultCode": true,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "\n        QString videoFolder = QStandardPaths::writableLocation(QStandardPaths::MoviesLocation);\n      ",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FileDialogLocation": {
            "Name": "FileDialogLocation",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GuiStyle": {
            "Name": "GuiStyle",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"Default\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LastPlayedFile": {
            "Name": "LastPlayedFile",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LastPlaylist": {
            "Name": "LastPlaylist",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LastUrl": {
            "Name": "LastUrl",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "MaxRecentFiles": {
            "Name": "MaxRecentFiles",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "10",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "OsdFontSize": {
            "Name": "OsdFontSize",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "25",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "RememberWindowGeometry": {
            "Name": "RememberWindowGeometry",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SeekBigStep": {
            "Name": "SeekBigStep",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "30",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SeekMediumStep": {
            "Name": "SeekMediumStep",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "15",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SeekSmallStep": {
            "Name": "SeekSmallStep",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "5",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowChapterMarkers": {
            "Name": "ShowChapterMarkers",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowHeader": {
            "Name": "ShowHeader",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowMenuBar": {
            "Name": "ShowMenuBar",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "UseBreezeIconTheme": {
            "Name": "UseBreezeIconTheme",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Volume": {
            "Name": "Volume",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "80",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "VolumeStep": {
            "Name": "VolumeStep",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "5",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "General",
        "Name": "General"
      },
      "Subtitles": {
        "Options": {
          "AllowOnBlackBorders": {
            "Name": "AllowOnBlackBorders",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "BorderColor": {
            "Name": "BorderColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#FF000000\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "BorderSize": {
            "Name": "BorderSize",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "3",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FontColor": {
            "Name": "FontColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#FFFFFFFF\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FontFamily": {
            "Name": "FontFamily",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"Sans Serif\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FontSize": {
            "Name": "FontSize",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "IsBold": {
            "Name": "IsBold",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "IsItalic": {
            "Name": "IsItalic",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "PreferredLanguage": {
            "Name": "PreferredLanguage",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "PreferredTrack": {
            "Name": "PreferredTrack",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShadowColor": {
            "Name": "ShadowColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#80F0F0F0\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShadowOffset": {
            "Name": "ShadowOffset",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SubtitlesFolders": {
            "Name": "SubtitlesFolders",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (listOf str))",
            "DefaultValue": "\"subs\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "StringList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Subtitles",
        "Name": "Subtitles"
      }
    }
  },
  "infoviewsettings": {
    "RCName": "infoviewsettingsrc",
    "Name": "infoviewsettings",
    "Groups": {
      "InfoView": {
        "Options": {
          "ColumnsWidth": {
            "Name": "ColumnsWidth",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (listOf int))",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "IntList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FixedFont": {
            "Name": "FixedFont",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Font": {
            "Name": "Font",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Style": {
            "Name": "Style",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "InfoView",
        "Name": "InfoView"
      }
    }
  },
  "kalendar": {
    "RCName": "kalendarrc",
    "Name": "kalendar",
    "Groups": {
      "Editor": {
        "Options": {
          "lastUsedEventCollection": {
            "Name": "lastUsedEventCollection",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "-1",
            "IsDefaultCode": false,
            "Label": "The last used event collection used when creating a event.",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "lastUsedTodoCollection": {
            "Name": "lastUsedTodoCollection",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "-1",
            "IsDefaultCode": false,
            "Label": "The last used todo collection used when creating a todo.",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Editor",
        "Name": "Editor"
      },
      "General": {
        "Options": {
          "enableMailIntegration": {
            "Name": "enableMailIntegration",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Enable mail integration",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "enableMaps": {
            "Name": "enableMaps",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Enable maps. NOTE: may cause crashing on some systems.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "forceCollapsedMainDrawer": {
            "Name": "forceCollapsedMainDrawer",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Always have mainDrawer.collapsed.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "incidenceInfoDrawerDrawerWidth": {
            "Name": "incidenceInfoDrawerDrawerWidth",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "-1",
            "IsDefaultCode": false,
            "Label": "Width of the incidence drawer",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "lastOpenedView": {
            "Name": "lastOpenedView",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (enum [ \n              \"MonthView\"\n              \"ScheduleView\"\n              \"TodoView\"\n              \"WeekView\"\n              \"ThreeDayView\"\n              \"DayView\"\n              \"ContactView\"\n              \"MailView\"\n            ]))",
            "DefaultValue": "\"-1\"",
            "IsDefaultCode": false,
            "Label": "Remember the last opened view.",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "MonthView",
                "Label": ""
              },
              {
                "Name": "ScheduleView",
                "Label": ""
              },
              {
                "Name": "TodoView",
                "Label": ""
              },
              {
                "Name": "WeekView",
                "Label": ""
              },
              {
                "Name": "ThreeDayView",
                "Label": ""
              },
              {
                "Name": "DayView",
                "Label": ""
              },
              {
                "Name": "ContactView",
                "Label": ""
              },
              {
                "Name": "MailView",
                "Label": ""
              }
            ]
          },
          "locationMarker": {
            "Name": "locationMarker",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (enum [ \n              \"Circle\"\n              \"Pin\"\n            ]))",
            "DefaultValue": "\"Pin\"",
            "IsDefaultCode": false,
            "Label": "Type of marker for showing a place's location.",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "Circle",
                "Label": "Left"
              },
              {
                "Name": "Pin",
                "Label": "Center"
              }
            ]
          },
          "showMenubar": {
            "Name": "showMenubar",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Show the Menubar.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "General",
        "Name": "General"
      },
      "GeneralView": {
        "Options": {
          "showSubtodosInCalendarViews": {
            "Name": "showSubtodosInCalendarViews",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Show subtasks in the calendar views (e.g. month, schedule, etc. views).",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "showTodosInCalendarViews": {
            "Name": "showTodosInCalendarViews",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Show Tasks in the calendar views (e.g. month, schedule, etc. views).",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "useIncidenceInfoPopup": {
            "Name": "useIncidenceInfoPopup",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Use a popup to view incidence information instead of a drawer.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "GeneralView",
        "Name": "GeneralView"
      },
      "MainDrawer": {
        "Options": {
          "collectionsSectionExpanded": {
            "Name": "collectionsSectionExpanded",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Whether the \"Calendar\" or \"Contacts\" section of the mainDrawer is expanded.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "tagsSectionExpanded": {
            "Name": "tagsSectionExpanded",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Whether the \"Tags\" section of the mainDrawer is expanded.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "MainDrawer",
        "Name": "MainDrawer"
      },
      "MonthView": {
        "Options": {
          "monthGridBorderWidth": {
            "Name": "monthGridBorderWidth",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "1",
            "IsDefaultCode": false,
            "Label": "Set the width of the month grid's borders in pixels.",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "monthGridMode": {
            "Name": "monthGridMode",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (enum [ \n              \"SwipeableMonthGrid\"\n              \"BasicMonthGrid\"\n            ]))",
            "DefaultValue": "\"SwipeableMonthGrid\"",
            "IsDefaultCode": false,
            "Label": "Type of day grid view to be used internally in the month view\"",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "SwipeableMonthGrid",
                "Label": "Swipeable month grid"
              },
              {
                "Name": "BasicMonthGrid",
                "Label": "Basic month grid"
              }
            ]
          },
          "showWeekNumbers": {
            "Name": "showWeekNumbers",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Show week numbers to the side of the month grid.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "weekdayLabelAlignment": {
            "Name": "weekdayLabelAlignment",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (enum [ \n              \"Left\"\n              \"Center\"\n              \"Right\"\n            ]))",
            "DefaultValue": "\"Right\"",
            "IsDefaultCode": false,
            "Label": "Alignment of week day header in month view.",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "Left",
                "Label": "Left"
              },
              {
                "Name": "Center",
                "Label": "Center"
              },
              {
                "Name": "Right",
                "Label": "Right"
              }
            ]
          },
          "weekdayLabelLength": {
            "Name": "weekdayLabelLength",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (enum [ \n              \"Full\"\n              \"Abbreviated\"\n              \"Letter\"\n            ]))",
            "DefaultValue": "\"Full\"",
            "IsDefaultCode": false,
            "Label": "Format of weekday name.",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "Full",
                "Label": "Full"
              },
              {
                "Name": "Abbreviated",
                "Label": "Abbreviated"
              },
              {
                "Name": "Letter",
                "Label": "Letter"
              }
            ]
          }
        },
        "Description": "MonthView",
        "Name": "MonthView"
      },
      "ScheduleView": {
        "Options": {
          "monthListMode": {
            "Name": "monthListMode",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (enum [ \n              \"SwipeableMonthList\"\n              \"BasicMonthList\"\n            ]))",
            "DefaultValue": "\"SwipeableMonthList\"",
            "IsDefaultCode": false,
            "Label": "Type of day list view to be used internally in the schedule view\"",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "SwipeableMonthList",
                "Label": "Swipeable internal month list view"
              },
              {
                "Name": "BasicMonthList",
                "Label": "Basic internal month list view"
              }
            ]
          },
          "showWeekHeaders": {
            "Name": "showWeekHeaders",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Show week headers in schedule view.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "ScheduleView",
        "Name": "ScheduleView"
      },
      "TaskView": {
        "Options": {
          "ascendingOrder": {
            "Name": "ascendingOrder",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Sort order",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "pastEventsTransparencyLevel": {
            "Name": "pastEventsTransparencyLevel",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "0.0",
            "IsDefaultCode": false,
            "Label": "Dimmer",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "showCompletedSubtodos": {
            "Name": "showCompletedSubtodos",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Show all completed subtasks even if the parent task is incomplete",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "sort": {
            "Name": "sort",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (enum [ \n              \"DueTime\"\n              \"Alphabetically\"\n              \"Priority\"\n            ]))",
            "DefaultValue": "\"DueTime\"",
            "IsDefaultCode": false,
            "Label": "Sorting of the taskview.",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "DueTime",
                "Label": "Sort by due time"
              },
              {
                "Name": "Alphabetically",
                "Label": "Sort alphabetically"
              },
              {
                "Name": "Priority",
                "Label": "Sort by priority"
              }
            ]
          }
        },
        "Description": "TaskView",
        "Name": "TaskView"
      },
      "WeekView": {
        "Options": {
          "hourlyViewMode": {
            "Name": "hourlyViewMode",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (enum [ \n              \"SwipeableInternalHourlyView\"\n              \"BasicInternalHourlyView\"\n            ]))",
            "DefaultValue": "\"SwipeableMonthGrid\"",
            "IsDefaultCode": false,
            "Label": "Type of day grid view to be used internally in the month view\"",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "SwipeableInternalHourlyView",
                "Label": "Swipeable internal week view"
              },
              {
                "Name": "BasicInternalHourlyView",
                "Label": "Basic internal week view"
              }
            ]
          },
          "weekViewAllDayHeaderHeight": {
            "Name": "weekViewAllDayHeaderHeight",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "-1",
            "IsDefaultCode": false,
            "Label": "Set the height of the all-day header at the top of the week view.\"",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "WeekView",
        "Name": "WeekView"
      }
    }
  },
  "kalendarcontact": {
    "RCName": "kalendarcontactrc",
    "Name": "kalendarcontact",
    "Groups": {
      "Editor": {
        "Options": {
          "lastUsedAddressBookCollection": {
            "Name": "lastUsedAddressBookCollection",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "-1",
            "IsDefaultCode": false,
            "Label": "The last used event collection used when creating a contact.",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Editor",
        "Name": "Editor"
      }
    }
  },
  "kalzium": {
    "RCName": "kalziumrc",
    "Name": "kalzium",
    "Groups": {
      "Calculator": {
        "Options": {
          "addAlias": {
            "Name": "addAlias",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "This setting tells the molecular calculator whether the add Alias tab should be shown",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "alias": {
            "Name": "alias",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "This setting tells the molecular mass calculator whether extra details such as aliases should be shown",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ideal": {
            "Name": "ideal",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "This setting says whether the user wants the gas to be ideal by default",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "mass": {
            "Name": "mass",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "This setting tells the nuclear calculator whether the amounts are always in terms of mass",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "soluteMass": {
            "Name": "soluteMass",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "This setting tells the concentration calculator that amount of solute is always in mass",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "solventVolume": {
            "Name": "solventVolume",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "This setting tells the concentration calculator that amount of solvent is always in volume",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Calculator",
        "Name": "Calculator"
      },
      "Colors": {
        "Options": {
          "MaxColor": {
            "Name": "MaxColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#FF0000\"",
            "IsDefaultCode": false,
            "Label": "Selects the color of the maximal value from the gradient",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "MinColor": {
            "Name": "MinColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#FFFFFF\"",
            "IsDefaultCode": false,
            "Label": "Selects the color of the minimal value from the gradient",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "alkalie": {
            "Name": "alkalie",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#FFEB55\"",
            "IsDefaultCode": false,
            "Label": "Selects the color of the alkali metals",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "alkaline": {
            "Name": "alkaline",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#00A7B3\"",
            "IsDefaultCode": false,
            "Label": "Selects the color of the alkaline earth metals",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "block_d": {
            "Name": "block_d",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#FFEB55\"",
            "IsDefaultCode": false,
            "Label": "Selects the color of the elements in block d",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "block_f": {
            "Name": "block_f",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#E85752\"",
            "IsDefaultCode": false,
            "Label": "Selects the color of the elements in block f",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "block_p": {
            "Name": "block_p",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#77B753\"",
            "IsDefaultCode": false,
            "Label": "Selects the color of the elements in block p",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "block_s": {
            "Name": "block_s",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#B14F9A\"",
            "IsDefaultCode": false,
            "Label": "Selects the color of the elements in block s",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "color_artificial": {
            "Name": "color_artificial",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#FFA94E\"",
            "IsDefaultCode": false,
            "Label": "Selects the color of artificial elements",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "color_liquid": {
            "Name": "color_liquid",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#2C72C8\"",
            "IsDefaultCode": false,
            "Label": "Selects the color of liquid elements",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "color_radioactive": {
            "Name": "color_radioactive",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#FFFFFF\"",
            "IsDefaultCode": false,
            "Label": "Selects the color of radioactive elements",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "color_solid": {
            "Name": "color_solid",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#E85753\"",
            "IsDefaultCode": false,
            "Label": "Selects the color of solid elements",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "color_vapor": {
            "Name": "color_vapor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#77B754\"",
            "IsDefaultCode": false,
            "Label": "Selects the color of vaporous elements",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "colorgradientbox": {
            "Name": "colorgradientbox",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "Selects the default gradient color",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "group_1": {
            "Name": "group_1",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#B14F9A\"",
            "IsDefaultCode": false,
            "Label": "Selects the color of the elements in group 1",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "group_2": {
            "Name": "group_2",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#2C72C7\"",
            "IsDefaultCode": false,
            "Label": "Selects the color of the elements in group 2",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "group_3": {
            "Name": "group_3",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#00B377\"",
            "IsDefaultCode": false,
            "Label": "Selects the color of the elements in group 3",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "group_4": {
            "Name": "group_4",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#E85752\"",
            "IsDefaultCode": false,
            "Label": "Selects the color of the elements in group 4",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "group_5": {
            "Name": "group_5",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#FFEB55\"",
            "IsDefaultCode": false,
            "Label": "Selects the color of the elements in group 5",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "group_6": {
            "Name": "group_6",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#644A9B\"",
            "IsDefaultCode": false,
            "Label": "Selects the color of the elements in group 6",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "group_7": {
            "Name": "group_7",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#E85290\"",
            "IsDefaultCode": false,
            "Label": "Selects the color of the elements in group 7",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "group_8": {
            "Name": "group_8",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#00A7B3\"",
            "IsDefaultCode": false,
            "Label": "Selects the color of the elements in group 8",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "halogene": {
            "Name": "halogene",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#77B753\"",
            "IsDefaultCode": false,
            "Label": "Selects the color of the halogen elements",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "metalloid": {
            "Name": "metalloid",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#E8D888\"",
            "IsDefaultCode": false,
            "Label": "Selects the color of the metalloid elements",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "noble_gas": {
            "Name": "noble_gas",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#E85290\"",
            "IsDefaultCode": false,
            "Label": "Selects the color of the noble gases",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "nonmetal": {
            "Name": "nonmetal",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#F29B68\"",
            "IsDefaultCode": false,
            "Label": "Selects the color of the non-metal elements",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "noscheme": {
            "Name": "noscheme",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#2C72C7\"",
            "IsDefaultCode": false,
            "Label": "Selects the color if no scheme is selected",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "other_metal": {
            "Name": "other_metal",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#8F6B32\"",
            "IsDefaultCode": false,
            "Label": "Selects the color of the metals which do not fit into the other categories",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "rare": {
            "Name": "rare",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#644A9B\"",
            "IsDefaultCode": false,
            "Label": "Selects the color of the rare-earth elements",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "transition": {
            "Name": "transition",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#00B377\"",
            "IsDefaultCode": false,
            "Label": "Selects the color of the transition elements",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Colors",
        "Name": "Colors"
      },
      "Isotope Table": {
        "Options": {
          "isotopeTableMode": {
            "Name": "isotopeTableMode",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (enum [ \n              \"isotopeTableMode_0\"\n              \"isotopeTableMode_1\"\n              \"isotopeTableMode_2\"\n              \"isotopeTableMode_3\"\n            ]))",
            "DefaultValue": "\"isotopeTableMode_0\"",
            "IsDefaultCode": false,
            "Label": "Display-Mode of the Isotope Table",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "isotopeTableMode_0",
                "Label": ""
              },
              {
                "Name": "isotopeTableMode_1",
                "Label": ""
              },
              {
                "Name": "isotopeTableMode_2",
                "Label": ""
              },
              {
                "Name": "isotopeTableMode_3",
                "Label": ""
              }
            ]
          }
        },
        "Description": "Isotope Table",
        "Name": "Isotope Table"
      },
      "Logarithmic Gradients": {
        "Options": {
          "LogarithmicBoilingPointGradient": {
            "Name": "LogarithmicBoilingPointGradient",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Whether to use a logarithmic gradient for the Kalzium Boiling Point Gradient feature",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LogarithmicCovalentRadiusGradient": {
            "Name": "LogarithmicCovalentRadiusGradient",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Whether to use a logarithmic gradient for the Kalzium Covalent Radius Gradient feature",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LogarithmicDiscoverydateGradient": {
            "Name": "LogarithmicDiscoverydateGradient",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Whether to use a logarithmic gradient for the Kalzium Discovery Date Gradient feature",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LogarithmicElectronaffinityGradient": {
            "Name": "LogarithmicElectronaffinityGradient",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Whether to use a logarithmic gradient for the Kalzium Electron Affinity Gradient feature",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LogarithmicElectronegativityGradient": {
            "Name": "LogarithmicElectronegativityGradient",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Whether to use a logarithmic gradient for the Kalzium Electronegativity Gradient feature",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LogarithmicIonizationGradient": {
            "Name": "LogarithmicIonizationGradient",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Whether to use a logarithmic gradient for the Kalzium Ionization Gradient feature",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LogarithmicMassGradient": {
            "Name": "LogarithmicMassGradient",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Whether to use a logarithmic gradient for the Kalzium Mass Gradient feature",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LogarithmicMeltingPointGradient": {
            "Name": "LogarithmicMeltingPointGradient",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Whether to use a logarithmic gradient for the Kalzium Melting Point Gradient feature",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LogarithmicVanDerWaalsRadiusGradient": {
            "Name": "LogarithmicVanDerWaalsRadiusGradient",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Whether to use a logarithmic gradient for the Kalzium van der Waals Radius Gradient feature",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Logarithmic Gradients",
        "Name": "Logarithmic Gradients"
      },
      "Periodic Table": {
        "Options": {
          "colorschemebox": {
            "Name": "colorschemebox",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "1",
            "IsDefaultCode": false,
            "Label": "Selects the default color scheme",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "gradient": {
            "Name": "gradient",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "1",
            "IsDefaultCode": false,
            "Label": "Selects the default gradient",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "numeration": {
            "Name": "numeration",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "1",
            "IsDefaultCode": false,
            "Label": "Selects the default numeration (IUPAC)",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "pselook": {
            "Name": "pselook",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "Whether the atomic mass will be displayed in the PSE-Table",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "schemaPSE": {
            "Name": "schemaPSE",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "Selects the PSE",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "showlegend": {
            "Name": "showlegend",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Show or hide the legend",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "table": {
            "Name": "table",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "Selects the table view (default is classical)",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Periodic Table",
        "Name": "Periodic Table"
      },
      "Sidebar": {
        "Options": {
          "showsidebar": {
            "Name": "showsidebar",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Show or hide the sidebar",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Sidebar",
        "Name": "Sidebar"
      },
      "Spectrum": {
        "Options": {
          "spectrumType": {
            "Name": "spectrumType",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "This value defines which Spectrum type is used. Emission or absorption spectrum",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "spectrumWavelengthUnit": {
            "Name": "spectrumWavelengthUnit",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "2015",
            "IsDefaultCode": false,
            "Label": "This value defines which unit is used for the wavelength",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Spectrum",
        "Name": "Spectrum"
      },
      "Units": {
        "Options": {
          "combobox_energies": {
            "Name": "combobox_energies",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "This value defines whether eV or kJ/mol should be used within Kalzium",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "combobox_length": {
            "Name": "combobox_length",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "This value defines which length scale should be used within Kalzium",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "combobox_temperature": {
            "Name": "combobox_temperature",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "This value defines which temperature scale should be used within Kalzium",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "energiesUnit": {
            "Name": "energiesUnit",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "7022",
            "IsDefaultCode": false,
            "Label": "This value defines whether eV or kJ/mol should be used within Kalzium",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "lengthUnit": {
            "Name": "lengthUnit",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "2016",
            "IsDefaultCode": false,
            "Label": "This value defines which length scale should be used within Kalzium",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "schemaSelected": {
            "Name": "schemaSelected",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "True if schema was last selected",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "temperatureUnit": {
            "Name": "temperatureUnit",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "6000",
            "IsDefaultCode": false,
            "Label": "This value defines which temperature scale should be used within Kalzium",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Units",
        "Name": "Units"
      }
    }
  },
  "kded_device_automounter": {
    "RCName": "kded_device_automounterrc",
    "Name": "kded_device_automounter",
    "Groups": {
      "General": {
        "Options": {
          "AutomountEnabled": {
            "Name": "AutomountEnabled",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AutomountOnLogin": {
            "Name": "AutomountOnLogin",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AutomountOnPlugin": {
            "Name": "AutomountOnPlugin",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AutomountUnknownDevices": {
            "Name": "AutomountUnknownDevices",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "General",
        "Name": "General"
      }
    }
  },
  "kdeglobals": {
    "RCName": "kdeglobals",
    "Name": "kdeglobals",
    "Groups": {
      "General": {
        "Options": {
          "AllowKDEAppsToRememberWindowPositions": {
            "Name": "AllowKDEAppsToRememberWindowPositions",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "General",
        "Name": "General"
      }
    }
  },
  "kdevelop": {
    "RCName": "kdeveloprc",
    "Name": "kdevelop",
    "Groups": {
      "Language Support": {
        "Options": {
          "Automatic Invocation": {
            "Name": "automaticInvocation",
            "Key": "Automatic Invocation",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "boldDeclarations": {
            "Name": "boldDeclarations",
            "Key": "boldDeclarations",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "completionDetail": {
            "Name": "completionDetail",
            "Key": "completionDetail",
            "HasKey": true,
            "TypeValue": "(either str (enum [ \n              \"Minimal\"\n              \"MinimalWhenAutomatic\"\n              \"AlwaysFull\"\n            ]))",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "Minimal",
                "Label": ""
              },
              {
                "Name": "MinimalWhenAutomatic",
                "Label": ""
              },
              {
                "Name": "AlwaysFull",
                "Label": ""
              }
            ]
          },
          "globalColorSource": {
            "Name": "globalColorSource",
            "Key": "globalColorSource",
            "HasKey": true,
            "TypeValue": "(either str (enum [ \n              \"AutoGenerated\"\n              \"FromTheme\"\n            ]))",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "AutoGenerated",
                "Label": ""
              },
              {
                "Name": "FromTheme",
                "Label": ""
              }
            ]
          },
          "globalColorization": {
            "Name": "globalColorization",
            "Key": "globalColorization",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "255",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "highlightProblematicLines": {
            "Name": "highlightProblematicLines",
            "Key": "highlightProblematicLines",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "highlightSemanticProblems": {
            "Name": "highlightSemanticProblems",
            "Key": "highlightSemanticProblems",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "localColorization": {
            "Name": "localColorization",
            "Key": "localColorization",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "170",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "minFilesForSimplifiedParsing": {
            "Name": "minFilesForSimplifiedParsing",
            "Key": "minFilesForSimplifiedParsing",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "100000",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "problemInlineNotesLevel": {
            "Name": "problemInlineNotesLevel",
            "Key": "problemInlineNotesLevel",
            "HasKey": true,
            "TypeValue": "(either str (enum [ \n            ]))",
            "DefaultValue": "\"KDevelop::ICompletionSettings::WarningsAndErrorsProblemInlineNotesLevel\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "showMultiLineSelectionInformation": {
            "Name": "showMultiLineSelectionInformation",
            "Key": "showMultiLineSelectionInformation",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "todoMarkerWords": {
            "Name": "todoMarkerWords",
            "Key": "todoMarkerWords",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"TODO FIXME\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Language Support",
        "Name": "Language Support"
      }
    }
  },
  "klipper": {
    "RCName": "klipperrc",
    "Name": "klipper",
    "Groups": {
      "Actions": {
        "Options": {
          "EnableMagicMimeActions": {
            "Name": "EnableMagicMimeActions",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Include MIME actions",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ReplayActionInHistory": {
            "Name": "ReplayActionInHistory",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "For an item chosen from history",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "StripWhiteSpace": {
            "Name": "StripWhiteSpace",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Trim whitespace from selection",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Actions",
        "Name": "Actions"
      },
      "General": {
        "Options": {
          "ActionListChanged": {
            "Name": "ActionList",
            "Key": "ActionListChanged",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "-1",
            "IsDefaultCode": false,
            "Label": "Dummy entry for indicating changes in an action's tree widget",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ActionsInfoMessageShown": {
            "Name": "ActionsInfoMessageShown",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "IgnoreImages": {
            "Name": "IgnoreImages",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Always ignore images",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "IgnoreSelection": {
            "Name": "IgnoreSelection",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Ignore the selection",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "KeepClipboardContents": {
            "Name": "KeepClipboardContents",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Save history across desktop sessions",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "MaxClipItems": {
            "Name": "MaxClipItems",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "20",
            "IsDefaultCode": false,
            "Label": "History size:",
            "Type": "Int",
            "Min": "1",
            "HasMin": true,
            "Max": "2048",
            "HasMax": true,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "NoActionsForWM_CLASS": {
            "Name": "NoActionsForWM_CLASS",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (listOf str))",
            "DefaultValue": "\"Navigator,navigator:browser,konqueror,keditbookmarks,mozilla-bin,Mozilla,Opera main window,opera,gnumeric,Gnumeric,Galeon,kcontrol,ksirc,MozillaFirebird-bin,firefox-bin,Firefox-bin,klipper,Gecko,gecko\"",
            "IsDefaultCode": false,
            "Label": "No actions for WM_CLASS",
            "Type": "StringList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "NoEmptyClipboard": {
            "Name": "PreventEmptyClipboard",
            "Key": "NoEmptyClipboard",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Prevent the clipboard from being cleared",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SelectionTextOnly": {
            "Name": "SelectionTextOnly",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Text selection only",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SyncClipboards": {
            "Name": "SyncClipboards",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Keep the selection and clipboard the same",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Synchronize": {
            "Name": "Synchronize",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "3",
            "IsDefaultCode": false,
            "Label": "Backwards compatibility, don't touch.",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TimeoutForActionPopups": {
            "Name": "TimeoutForActionPopups",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "8",
            "IsDefaultCode": false,
            "Label": "Automatic action menu time:",
            "Type": "Int",
            "Min": "0",
            "HasMin": true,
            "Max": "200",
            "HasMax": true,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "URLGrabberEnabled": {
            "Name": "URLGrabberEnabled",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Immediately on selection",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "UseGUIRegExpEditor": {
            "Name": "UseGUIRegExpEditor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Use graphical regexp editor",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Version": {
            "Name": "Version",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "Klipper version",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "General",
        "Name": "General"
      }
    }
  },
  "konsole": {
    "RCName": "konsolerc",
    "Name": "konsole",
    "Groups": {
      "FileLocation": {
        "Options": {
          "scrollbackUseCacheLocation": {
            "Name": "scrollbackUseCacheLocation",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "For scrollback files, use user's specific folder location",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "scrollbackUseSpecifiedLocation": {
            "Name": "scrollbackUseSpecifiedLocation",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "For scrollback files, use specified folder location",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "scrollbackUseSpecifiedLocationDirectory": {
            "Name": "scrollbackUseSpecifiedLocationDirectory",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "For scrollback files, use this folder",
            "Type": "Url",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "scrollbackUseSystemLocation": {
            "Name": "scrollbackUseSystemLocation",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "For scrollback files, use system-wide folder location",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "FileLocation",
        "Name": "FileLocation"
      },
      "KonsoleWindow": {
        "Options": {
          "AllowMenuAccelerators": {
            "Name": "AllowMenuAccelerators",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Enable menu accelerators",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FocusFollowsMouse": {
            "Name": "FocusFollowsMouse",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Focus terminals when the mouse pointer is moved over them",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "RememberWindowSize": {
            "Name": "RememberWindowSize",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Use current window size on next startup",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "RemoveWindowTitleBarAndFrame": {
            "Name": "RemoveWindowTitleBarAndFrame",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Remove window titlebar and frame",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowWindowTitleOnTitleBar": {
            "Name": "ShowWindowTitleOnTitleBar",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Show window title on the titlebar",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "UseSingleInstance": {
            "Name": "UseSingleInstance",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Run all Konsole windows in a single process",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "KonsoleWindow",
        "Name": "KonsoleWindow"
      },
      "PrintOptions": {
        "Options": {
          "PrinterFriendly": {
            "Name": "PrinterFriendly",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Printer \u0026friendly mode (black text, no background)",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ScaleOutput": {
            "Name": "ScaleOutput",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "\u0026Scale output",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "PrintOptions",
        "Name": "PrintOptions"
      },
      "SearchSettings": {
        "Options": {
          "SearchCaseSensitive": {
            "Name": "SearchCaseSensitive",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Search is case sensitive",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SearchHighlightMatches": {
            "Name": "SearchHighlightMatches",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Highlight all search matches",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SearchRegExpression": {
            "Name": "SearchRegExpression",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Match using regular expressions",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SearchReverseSearch": {
            "Name": "SearchReverseSearch",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Search backwards",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "SearchSettings",
        "Name": "SearchSettings"
      },
      "SplitView": {
        "Options": {
          "SplitDragHandleSize": {
            "Name": "SplitDragHandleSize",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (enum [ \n              \"SplitDragHandleSmall\"\n              \"SplitDragHandleMedium\"\n              \"SplitDragHandleLarge\"\n            ]))",
            "DefaultValue": "\"SplitDragHandleSmall\"",
            "IsDefaultCode": false,
            "Label": "Control the size of the handle between panels",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "SplitDragHandleSmall",
                "Label": ""
              },
              {
                "Name": "SplitDragHandleMedium",
                "Label": ""
              },
              {
                "Name": "SplitDragHandleLarge",
                "Label": ""
              }
            ]
          },
          "SplitViewVisibility": {
            "Name": "SplitViewVisibility",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (enum [ \n              \"AlwaysShowSplitHeader\"\n              \"ShowSplitHeaderWhenNeeded\"\n              \"AlwaysHideSplitHeader\"\n            ]))",
            "DefaultValue": "\"ShowTabBarWhenNeeded\"",
            "IsDefaultCode": false,
            "Label": "Control the visibility of the whole tab bar",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "AlwaysShowSplitHeader",
                "Label": ""
              },
              {
                "Name": "ShowSplitHeaderWhenNeeded",
                "Label": ""
              },
              {
                "Name": "AlwaysHideSplitHeader",
                "Label": ""
              }
            ]
          }
        },
        "Description": "SplitView",
        "Name": "SplitView"
      },
      "TabBar": {
        "Options": {
          "CloseTabButton": {
            "Name": "CloseTabButton",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (enum [ \n              \"OnEachTab\"\n              \"OnTabBar\"\n              \"None\"\n            ]))",
            "DefaultValue": "\"OnEachTab\"",
            "IsDefaultCode": false,
            "Label": "Control where the \"Close tab\" button will be displayed",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "OnEachTab",
                "Label": ""
              },
              {
                "Name": "OnTabBar",
                "Label": ""
              },
              {
                "Name": "None",
                "Label": ""
              }
            ]
          },
          "CloseTabOnMiddleMouseButton": {
            "Name": "CloseTabOnMiddleMouseButton",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Allow middle-clicking on open tabs to close them",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ExpandTabWidth": {
            "Name": "ExpandTabWidth",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Expand the tab widths",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "NewTabBehavior": {
            "Name": "NewTabBehavior",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (enum [ \n              \"PutNewTabAtTheEnd\"\n              \"PutNewTabAfterCurrentTab\"\n            ]))",
            "DefaultValue": "\"PutNewTabAtTheEnd\"",
            "IsDefaultCode": false,
            "Label": "Control where to put the new tab",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "PutNewTabAtTheEnd",
                "Label": ""
              },
              {
                "Name": "PutNewTabAfterCurrentTab",
                "Label": ""
              }
            ]
          },
          "NewTabButton": {
            "Name": "NewTabButton",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Control the visibility of 'New Tab' button on the tab bar",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TabBarPosition": {
            "Name": "TabBarPosition",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (enum [ \n              \"Top\"\n              \"Bottom\"\n            ]))",
            "DefaultValue": "\"Top\"",
            "IsDefaultCode": false,
            "Label": "Control the position of the tab bar",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "Top",
                "Label": ""
              },
              {
                "Name": "Bottom",
                "Label": ""
              }
            ]
          },
          "TabBarStyleSheet": {
            "Name": "TabBarStyleSheet",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"QTabBar::tab { min-width: 2em ; max-width: 25em }\"",
            "IsDefaultCode": false,
            "Label": "Control the visual style of the tab bar",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TabBarUseUserStyleSheet": {
            "Name": "TabBarUseUserStyleSheet",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Use a user-defined .css file for the tab bar",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TabBarUserStyleSheetFile": {
            "Name": "TabBarUserStyleSheetFile",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "The .css file to use for the tab bar style",
            "Type": "Url",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TabBarVisibility": {
            "Name": "TabBarVisibility",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (enum [ \n              \"AlwaysShowTabBar\"\n              \"ShowTabBarWhenNeeded\"\n              \"AlwaysHideTabBar\"\n            ]))",
            "DefaultValue": "\"ShowTabBarWhenNeeded\"",
            "IsDefaultCode": false,
            "Label": "Control the visibility of the whole tab bar",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "AlwaysShowTabBar",
                "Label": ""
              },
              {
                "Name": "ShowTabBarWhenNeeded",
                "Label": ""
              },
              {
                "Name": "AlwaysHideTabBar",
                "Label": ""
              }
            ]
          }
        },
        "Description": "TabBar",
        "Name": "TabBar"
      },
      "ThumbnailsSettings": {
        "Options": {
          "EnableThumbnails": {
            "Name": "EnableThumbnails",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ThumbnailAlt": {
            "Name": "ThumbnailAlt",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Use Alt to display a thumbnail",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ThumbnailCtrl": {
            "Name": "ThumbnailCtrl",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Use Ctrl to display a thumbnail",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ThumbnailShift": {
            "Name": "ThumbnailShift",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Use Shift to display a thumbnail",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ThumbnailSize": {
            "Name": "ThumbnailSize",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "250",
            "IsDefaultCode": false,
            "Label": "Thumbnail Width",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "ThumbnailsSettings",
        "Name": "ThumbnailsSettings"
      }
    }
  },
  "kontact": {
    "RCName": "kontactrc",
    "Name": "kontact",
    "Groups": {
      "View": {
        "Options": {
          "ActivePlugin": {
            "Name": "ActivePlugin",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"kontact_summaryplugin\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ForceStartupPlugin": {
            "Name": "ForceStartupPlugin",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Always start with plugin:",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ForcedStartupPlugin": {
            "Name": "ForcedStartupPlugin",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LastVersionSeen": {
            "Name": "LastVersionSeen",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowMenuBar": {
            "Name": "",
            "Key": "ShowMenuBar",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SideBarOpen": {
            "Name": "SideBarOpen",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Show the component sidebar",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SidePaneIconSize": {
            "Name": "SidePaneIconSize",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "32",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SidePaneShowIcons": {
            "Name": "SidePaneShowIcons",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SidePaneShowText": {
            "Name": "SidePaneShowText",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SidePaneSplitter": {
            "Name": "SidePaneSplitter",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (listOf int))",
            "DefaultValue": "\"1\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "IntList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "View",
        "Name": "View"
      }
    }
  },
  "konversation": {
    "RCName": "konversationrc",
    "Name": "konversation",
    "Groups": {
      "Aliases": {
        "Options": {
          "AliasList": {
            "Name": "",
            "Key": "AliasList",
            "HasKey": true,
            "TypeValue": "(either str (listOf str))",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "StringList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Aliases",
        "Name": "Aliases"
      },
      "Appearance": {
        "Options": {
          "AllowColorCodes": {
            "Name": "",
            "Key": "AllowColorCodes",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AutoUserhost": {
            "Name": "",
            "Key": "AutoUserhost",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "BackgroundImage": {
            "Name": "",
            "Key": "BackgroundImage",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Url",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "BacklogLines": {
            "Name": "",
            "Key": "BacklogLines",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "10",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "CloseButtons": {
            "Name": "",
            "Key": "CloseButtons",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "CustomListFont": {
            "Name": "",
            "Key": "CustomListFont",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "CustomTabFont": {
            "Name": "",
            "Key": "CustomTabFont",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "CustomTextFont": {
            "Name": "",
            "Key": "CustomTextFont",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FocusNewQueries": {
            "Name": "",
            "Key": "FocusNewQueries",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "IrcColorCode$(colorNumber)": {
            "Name": "",
            "Key": "IrcColorCode$(colorNumber)",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"#c0c0c0\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ListFont": {
            "Name": "",
            "Key": "ListFont",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"QFontDatabase::systemFont(QFontDatabase::GeneralFont)\"",
            "IsDefaultCode": true,
            "Label": "",
            "Type": "Font",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Margin": {
            "Name": "",
            "Key": "Margin",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"QApplication::style()-\u003epixelMetric(QStyle::PM_LayoutLeftMargin)\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "NickColor$(nickNumber)": {
            "Name": "",
            "Key": "NickColor$(nickNumber)",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"#000001\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowBacklog": {
            "Name": "",
            "Key": "ShowBacklog",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowDate": {
            "Name": "",
            "Key": "ShowDate",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowDateLine": {
            "Name": "",
            "Key": "ShowDateLine",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowIRCViewScrollBar": {
            "Name": "",
            "Key": "ShowIRCViewScrollBar",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Hide the scrollbar",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowMenuBar": {
            "Name": "",
            "Key": "ShowMenuBar",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowModeButtons": {
            "Name": "",
            "Key": "ShowModeButtons",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowNickList": {
            "Name": "",
            "Key": "ShowNickList",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowNicknameBox": {
            "Name": "",
            "Key": "ShowNicknameBox",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowQuickButtons": {
            "Name": "",
            "Key": "ShowQuickButtons",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowQuickButtonsInContextMenu": {
            "Name": "",
            "Key": "ShowQuickButtonsInContextMenu",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowTabBarCloseButton": {
            "Name": "",
            "Key": "ShowTabBarCloseButton",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowTopic": {
            "Name": "",
            "Key": "ShowTopic",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Spacing": {
            "Name": "",
            "Key": "Spacing",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"QApplication::style()-\u003elayoutSpacing(QSizePolicy::DefaultType, QSizePolicy::DefaultType, Qt::Horizontal)\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TabFont": {
            "Name": "",
            "Key": "TabFont",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"QFontDatabase::systemFont(QFontDatabase::GeneralFont)\"",
            "IsDefaultCode": true,
            "Label": "",
            "Type": "Font",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TextFont": {
            "Name": "",
            "Key": "TextFont",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"QFontDatabase::systemFont(QFontDatabase::GeneralFont)\"",
            "IsDefaultCode": true,
            "Label": "",
            "Type": "Font",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TimestampFormat": {
            "Name": "",
            "Key": "TimestampFormat",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"hh:mm\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Timestamping": {
            "Name": "",
            "Key": "Timestamping",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "UseBoldNicks": {
            "Name": "",
            "Key": "UseBoldNicks",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "UseColoredNicks": {
            "Name": "",
            "Key": "UseColoredNicks",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "UseLiteralModes": {
            "Name": "",
            "Key": "UseLiteralModes",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "UseSpacing": {
            "Name": "",
            "Key": "UseSpacing",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Appearance",
        "Name": "Appearance"
      },
      "DCC Settings": {
        "Options": {
          "AddPartner": {
            "Name": "DccAddPartner",
            "Key": "AddPartner",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AutoGet": {
            "Name": "DccAutoGet",
            "Key": "AutoGet",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AutoResume": {
            "Name": "DccAutoResume",
            "Key": "AutoResume",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "BufferSize": {
            "Name": "DccBufferSize",
            "Key": "BufferSize",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "16384",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ChatAutoAccept": {
            "Name": "DccChatAutoAccept",
            "Key": "ChatAutoAccept",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ChatPortsFirst": {
            "Name": "DccChatPortsFirst",
            "Key": "ChatPortsFirst",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "1026",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ChatPortsLast": {
            "Name": "DccChatPortsLast",
            "Key": "ChatPortsLast",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "7000",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ColumnOrder": {
            "Name": "DccColumnOrders",
            "Key": "ColumnOrder",
            "HasKey": true,
            "TypeValue": "(either str (listOf int))",
            "DefaultValue": "\"0,1,2,3,4,5,6,7,8,9\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "IntList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ColumnSortDescending": {
            "Name": "DccColumnSortDescending",
            "Key": "ColumnSortDescending",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ColumnSorted": {
            "Name": "DccColumnSorted",
            "Key": "ColumnSorted",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "1",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ColumnVisible": {
            "Name": "DccColumnVisibles",
            "Key": "ColumnVisible",
            "HasKey": true,
            "TypeValue": "(either str (listOf int))",
            "DefaultValue": "\"1,1,1,1,1,1,1,1,1,1\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "IntList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ColumnWidths": {
            "Name": "DccColumnWidths",
            "Key": "ColumnWidths",
            "HasKey": true,
            "TypeValue": "(either str (listOf int))",
            "DefaultValue": "\"47,90,103,173,70,87,157,87,96,165\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "IntList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "CreateFolder": {
            "Name": "DccCreateFolder",
            "Key": "CreateFolder",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FastSend": {
            "Name": "DccFastSend",
            "Key": "FastSend",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "IPv4Fallback": {
            "Name": "DccIPv4Fallback",
            "Key": "IPv4Fallback",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "IPv4FallbackIface": {
            "Name": "DccIPv4FallbackIface",
            "Key": "IPv4FallbackIface",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"eth0\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "MethodToGetOwnIp": {
            "Name": "DccMethodToGetOwnIp",
            "Key": "MethodToGetOwnIp",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "1",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "PassiveSend": {
            "Name": "DccPassiveSend",
            "Key": "PassiveSend",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SendPortsFirst": {
            "Name": "DccSendPortsFirst",
            "Key": "SendPortsFirst",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "1026",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SendPortsLast": {
            "Name": "DccSendPortsLast",
            "Key": "SendPortsLast",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "7000",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SendTimeout": {
            "Name": "DccSendTimeout",
            "Key": "SendTimeout",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "180",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SpaceToUnderscore": {
            "Name": "DccSpaceToUnderscore",
            "Key": "SpaceToUnderscore",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SpecificChatPorts": {
            "Name": "DccSpecificChatPorts",
            "Key": "SpecificChatPorts",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SpecificOwnIp": {
            "Name": "DccSpecificOwnIp",
            "Key": "SpecificOwnIp",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"0.0.0.0\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SpecificSendPorts": {
            "Name": "DccSpecificSendPorts",
            "Key": "SpecificSendPorts",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "UPnP": {
            "Name": "DccUPnP",
            "Key": "UPnP",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "DCC Settings",
        "Name": "DCC Settings"
      },
      "External Log Viewer": {
        "Options": {
          "UseExternalLogViewer": {
            "Name": "",
            "Key": "UseExternalLogViewer",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "External Log Viewer",
        "Name": "External Log Viewer"
      },
      "Flags": {
        "Options": {
          "AddHostnameToLog": {
            "Name": "",
            "Key": "AddHostnameToLog",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AutoReconnect": {
            "Name": "",
            "Key": "AutoReconnect",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "BringToFront": {
            "Name": "",
            "Key": "BringToFront",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DisableExpansion": {
            "Name": "",
            "Key": "DisableExpansion",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "EncryptionType": {
            "Name": "",
            "Key": "EncryptionType",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FixedMOTD": {
            "Name": "",
            "Key": "FixedMOTD",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HideUnimportantEvents": {
            "Name": "",
            "Key": "HideUnimportantEvents",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HideUnimportantEventsExcludeActive": {
            "Name": "",
            "Key": "HideUnimportantEventsExcludeActive",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HideUnimportantEventsExcludeActiveThreshold": {
            "Name": "",
            "Key": "HideUnimportantEventsExcludeActiveThreshold",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "1",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "InputFieldsBackgroundColor": {
            "Name": "",
            "Key": "InputFieldsBackgroundColor",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Log": {
            "Name": "",
            "Key": "Log",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LowerLog": {
            "Name": "",
            "Key": "LowerLog",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "MiddleClickClose": {
            "Name": "",
            "Key": "MiddleClickClose",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "PrivateOnly": {
            "Name": "",
            "Key": "PrivateOnly",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ReconnectCount": {
            "Name": "",
            "Key": "ReconnectCount",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ReconnectDelay": {
            "Name": "",
            "Key": "ReconnectDelay",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "10",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowServerList": {
            "Name": "",
            "Key": "ShowServerList",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SkipMOTD": {
            "Name": "",
            "Key": "SkipMOTD",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TabPlacement": {
            "Name": "",
            "Key": "TabPlacement",
            "HasKey": true,
            "TypeValue": "(either str (enum [ \n              \"Top\"\n              \"Bottom\"\n              \"Left\"\n            ]))",
            "DefaultValue": "\"Left\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "Top",
                "Label": ""
              },
              {
                "Name": "Bottom",
                "Label": ""
              },
              {
                "Name": "Left",
                "Label": ""
              }
            ]
          },
          "UseClickableNicks": {
            "Name": "",
            "Key": "UseClickableNicks",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Flags",
        "Name": "Flags"
      },
      "General Options": {
        "Options": {
          "AutoAwayPollInterval": {
            "Name": "",
            "Key": "AutoAwayPollInterval",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "10",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "10",
            "HasMin": true,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AutoWhoContinuousEnabled": {
            "Name": "",
            "Key": "AutoWhoContinuousEnabled",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AutoWhoContinuousInterval": {
            "Name": "",
            "Key": "AutoWhoContinuousInterval",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "90",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AutoWhoNicksLimit": {
            "Name": "",
            "Key": "AutoWhoNicksLimit",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "200",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AutomaticRememberLine": {
            "Name": "",
            "Key": "AutomaticRememberLine",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AutomaticRememberLineOnlyOnTextChange": {
            "Name": "",
            "Key": "AutomaticRememberLineOnlyOnTextChange",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Beep": {
            "Name": "",
            "Key": "Beep",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ChannelDoubleClickAction": {
            "Name": "",
            "Key": "ChannelDoubleClickAction",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"/QUERY %u%n\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "CommandChar": {
            "Name": "",
            "Key": "CommandChar",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"/\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "CustomVersionReply": {
            "Name": "",
            "Key": "CustomVersionReply",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "CustomVersionReplyEnabled": {
            "Name": "",
            "Key": "CustomVersionReplyEnabled",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DisableNotifyWhileAway": {
            "Name": "",
            "Key": "DisableNotifyWhileAway",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HideToTrayOnStartup": {
            "Name": "",
            "Key": "HideToTrayOnStartup",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Start with hidden main window",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LogfileBufferSize": {
            "Name": "",
            "Key": "LogfileBufferSize",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "100",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "MarkerLineInAllViews": {
            "Name": "",
            "Key": "MarkerLineInAllViews",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "MaximumLag": {
            "Name": "MaximumLagTime",
            "Key": "MaximumLag",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "180",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "MultilineEditGeometry": {
            "Name": "MultilineEditSize",
            "Key": "MultilineEditGeometry",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Size",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "NotifyDoubleClickAction": {
            "Name": "",
            "Key": "NotifyDoubleClickAction",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"/QUERY %u%n\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "PreShellCommand": {
            "Name": "",
            "Key": "PreShellCommand",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "RawLog": {
            "Name": "",
            "Key": "RawLog",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "RedirectServerAndAppMsgToStatusPane": {
            "Name": "",
            "Key": "RedirectServerAndAppMsgToStatusPane",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ScrollbackMax": {
            "Name": "",
            "Key": "ScrollbackMax",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "1000",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowBackgroundImage": {
            "Name": "",
            "Key": "ShowBackgroundImage",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowRealNames": {
            "Name": "",
            "Key": "ShowRealNames",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "\u0026Show real names next to nicknames",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowTrayIcon": {
            "Name": "",
            "Key": "ShowTrayIcon",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SpellChecking": {
            "Name": "",
            "Key": "SpellChecking",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TrayNotify": {
            "Name": "",
            "Key": "TrayNotify",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TrayNotifyBlink": {
            "Name": "",
            "Key": "TrayNotifyBlink",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TrayNotifyOnlyOwnNick": {
            "Name": "",
            "Key": "TrayNotifyOnlyOwnNick",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "UseMultiRowInputBox": {
            "Name": "",
            "Key": "UseMultiRowInputBox",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "VersionReply": {
            "Name": "",
            "Key": "VersionReply",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "General Options",
        "Name": "General Options"
      },
      "Highlight List": {
        "Options": {
          "Highlight": {
            "Name": "",
            "Key": "Highlight",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HighlightNick": {
            "Name": "",
            "Key": "HighlightNick",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HighlightNickColor": {
            "Name": "",
            "Key": "HighlightNickColor",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"#FF0000\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HighlightOwnLines": {
            "Name": "",
            "Key": "HighlightOwnLines",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HighlightOwnLinesColor": {
            "Name": "",
            "Key": "HighlightOwnLinesColor",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"#ff0000\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HighlightSoundsEnabled": {
            "Name": "",
            "Key": "HighlightSoundsEnabled",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Highlight List",
        "Name": "Highlight List"
      },
      "LauncherEntry": {
        "Options": {
          "LauncherEntryCountMode": {
            "Name": "LauncherEntryCountMode",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (enum [ \n              \"CountEvents\"\n              \"CountChannelAndQueries\"\n            ]))",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "CountEvents",
                "Label": "All events"
              },
              {
                "Name": "CountChannelAndQueries",
                "Label": "Channels and queries with events"
              }
            ]
          },
          "LauncherEntryCountUseChannelEvents": {
            "Name": "",
            "Key": "LauncherEntryCountUseChannelEvents",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LauncherEntryCountUseHighlights": {
            "Name": "",
            "Key": "LauncherEntryCountUseHighlights",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LauncherEntryCountUseMsgs": {
            "Name": "",
            "Key": "LauncherEntryCountUseMsgs",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LauncherEntryCountUseNick": {
            "Name": "",
            "Key": "LauncherEntryCountUseNick",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LauncherEntryCountUsePrivate": {
            "Name": "",
            "Key": "LauncherEntryCountUsePrivate",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LauncherEntryCountUseSystem": {
            "Name": "",
            "Key": "LauncherEntryCountUseSystem",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "LauncherEntry",
        "Name": "LauncherEntry"
      },
      "Message Text Colors": {
        "Options": {
          "$(colorName)": {
            "Name": "$(colorName)Color",
            "Key": "$(colorName)",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"#0000ff\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Message Text Colors",
        "Name": "Message Text Colors"
      },
      "Nick Completion": {
        "Options": {
          "CaseSensitive": {
            "Name": "NickCompletionCaseSensitive",
            "Key": "CaseSensitive",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Mode": {
            "Name": "NickCompletionMode",
            "Key": "Mode",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "PrefixCharacter": {
            "Name": "",
            "Key": "PrefixCharacter",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SuffixMiddle": {
            "Name": "NickCompleteSuffixMiddle",
            "Key": "SuffixMiddle",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\" \"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SuffixStart": {
            "Name": "NickCompleteSuffixStart",
            "Key": "SuffixStart",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\": \"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Nick Completion",
        "Name": "Nick Completion"
      },
      "Notify List": {
        "Options": {
          "NotifyDelay": {
            "Name": "",
            "Key": "NotifyDelay",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "20",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "OnStartup": {
            "Name": "OpenWatchedNicksAtStartup",
            "Key": "OnStartup",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Open Watched Nicks tab at application startup",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "UseNotify": {
            "Name": "",
            "Key": "UseNotify",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Notify List",
        "Name": "Notify List"
      },
      "OSD": {
        "Options": {
          "Alignment": {
            "Name": "OSDAlignment",
            "Key": "Alignment",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "OSDBackgroundColor": {
            "Name": "",
            "Key": "OSDBackgroundColor",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "OSDCheckDesktopLock": {
            "Name": "",
            "Key": "OSDCheckDesktopLock",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "OSDDrawShadow": {
            "Name": "",
            "Key": "OSDDrawShadow",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "OSDDuration": {
            "Name": "",
            "Key": "OSDDuration",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "3000",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "OSDFont": {
            "Name": "",
            "Key": "OSDFont",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"QFontDatabase::systemFont(QFontDatabase::GeneralFont)\"",
            "IsDefaultCode": true,
            "Label": "",
            "Type": "Font",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "OSDScreen": {
            "Name": "",
            "Key": "OSDScreen",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "OSDTextColor": {
            "Name": "",
            "Key": "OSDTextColor",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"#ffffff\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "OSDUseCustomColors": {
            "Name": "",
            "Key": "OSDUseCustomColors",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "OffsetX": {
            "Name": "OSDOffsetX",
            "Key": "OffsetX",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "30",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "OffsetY": {
            "Name": "OSDOffsetY",
            "Key": "OffsetY",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "50",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowChannel": {
            "Name": "OSDShowChannel",
            "Key": "ShowChannel",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowChannelEvent": {
            "Name": "OSDShowChannelEvent",
            "Key": "ShowChannelEvent",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowOwnNick": {
            "Name": "OSDShowOwnNick",
            "Key": "ShowOwnNick",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowQuery": {
            "Name": "OSDShowQuery",
            "Key": "ShowQuery",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "UseOSD": {
            "Name": "",
            "Key": "UseOSD",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "OSD",
        "Name": "OSD"
      },
      "Path Settings": {
        "Options": {
          "DccPath": {
            "Name": "",
            "Key": "DccPath",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"QUrl::fromLocalFile(QStandardPaths::writableLocation(QStandardPaths::DownloadLocation))\"",
            "IsDefaultCode": true,
            "Label": "",
            "Type": "Url",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LogfilePath": {
            "Name": "",
            "Key": "LogfilePath",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "''QUrl::fromLocalFile(QStandardPaths::writableLocation(QStandardPaths::AppDataLocation)+QLatin1String(\"/logs\"))''",
            "IsDefaultCode": true,
            "Label": "",
            "Type": "Url",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Path Settings",
        "Name": "Path Settings"
      },
      "PreferencesDialog": {
        "Options": {
          "LastActiveModule": {
            "Name": "",
            "Key": "LastActiveModule",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Size": {
            "Name": "PreferencesDialogSize",
            "Key": "Size",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Size",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "PreferencesDialog",
        "Name": "PreferencesDialog"
      },
      "Proxy": {
        "Options": {
          "ProxyAddress": {
            "Name": "",
            "Key": "ProxyAddress",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ProxyEnabled": {
            "Name": "",
            "Key": "ProxyEnabled",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ProxyPassword": {
            "Name": "",
            "Key": "ProxyPassword",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ProxyPort": {
            "Name": "",
            "Key": "ProxyPort",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "8080",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ProxyType": {
            "Name": "",
            "Key": "ProxyType",
            "HasKey": true,
            "TypeValue": "(either str (enum [ \n              \"Socksv5Proxy\"\n              \"HTTPProxy\"\n            ]))",
            "DefaultValue": "\"Socksv5Proxy\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "Socksv5Proxy",
                "Label": ""
              },
              {
                "Name": "HTTPProxy",
                "Label": ""
              }
            ]
          },
          "ProxyUsername": {
            "Name": "",
            "Key": "ProxyUsername",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Proxy",
        "Name": "Proxy"
      },
      "QueueRates": {
        "Options": {
          "EmptyingRate $(QueueIndex)": {
            "Name": "queueRate$(QueueIndex)",
            "Key": "EmptyingRate $(QueueIndex)",
            "HasKey": true,
            "TypeValue": "(either str (listOf int))",
            "DefaultValue": "\"defaultRate[$(QueueIndex)]\"",
            "IsDefaultCode": true,
            "Label": "",
            "Type": "IntList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "\n  const QList\u003cint\u003e defaultRate[3] = {\n    { 15, 60, 0 },\n    { 40, 60, 0 },\n    {  1,  1, 0 },\n  };\n        ",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowQueueTuner": {
            "Name": "",
            "Key": "ShowQueueTuner",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "QueueRates",
        "Name": "QueueRates"
      },
      "ServerListDialog": {
        "Options": {
          "Size": {
            "Name": "ServerListDialogSize",
            "Key": "Size",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Size",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "ServerListDialog",
        "Name": "ServerListDialog"
      },
      "Sort Nicknames": {
        "Options": {
          "SortByActivity": {
            "Name": "",
            "Key": "SortByActivity",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SortByStatus": {
            "Name": "",
            "Key": "SortByStatus",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SortCaseInsensitive": {
            "Name": "",
            "Key": "SortCaseInsensitive",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SortOrder": {
            "Name": "",
            "Key": "SortOrder",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"qpohv-\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Sort Nicknames",
        "Name": "Sort Nicknames"
      },
      "Tab Notifications": {
        "Options": {
          "TabNotificationsEvents": {
            "Name": "",
            "Key": "TabNotificationsEvents",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TabNotificationsEventsColor": {
            "Name": "",
            "Key": "TabNotificationsEventsColor",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"#008000\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TabNotificationsHighlights": {
            "Name": "",
            "Key": "TabNotificationsHighlights",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TabNotificationsHighlightsColor": {
            "Name": "",
            "Key": "TabNotificationsHighlightsColor",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"#FF0000\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TabNotificationsLeds": {
            "Name": "",
            "Key": "TabNotificationsLeds",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TabNotificationsMsgs": {
            "Name": "",
            "Key": "TabNotificationsMsgs",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TabNotificationsMsgsColor": {
            "Name": "",
            "Key": "TabNotificationsMsgsColor",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"#008000\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TabNotificationsNick": {
            "Name": "",
            "Key": "TabNotificationsNick",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TabNotificationsNickColor": {
            "Name": "",
            "Key": "TabNotificationsNickColor",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"#FF0000\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TabNotificationsOverride": {
            "Name": "",
            "Key": "TabNotificationsOverride",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TabNotificationsPrivate": {
            "Name": "",
            "Key": "TabNotificationsPrivate",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TabNotificationsPrivateColor": {
            "Name": "",
            "Key": "TabNotificationsPrivateColor",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"#800000\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TabNotificationsSystem": {
            "Name": "",
            "Key": "TabNotificationsSystem",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TabNotificationsSystemColor": {
            "Name": "",
            "Key": "TabNotificationsSystemColor",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"#C3C300\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TabNotificationsText": {
            "Name": "",
            "Key": "TabNotificationsText",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Tab Notifications",
        "Name": "Tab Notifications"
      },
      "Themes": {
        "Options": {
          "IconTheme": {
            "Name": "",
            "Key": "IconTheme",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"default\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Themes",
        "Name": "Themes"
      },
      "Web Browser Settings": {
        "Options": {
          "UseCustomBrowser": {
            "Name": "",
            "Key": "UseCustomBrowser",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "WebBrowserCmd": {
            "Name": "",
            "Key": "WebBrowserCmd",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"firefox '%u'\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Web Browser Settings",
        "Name": "Web Browser Settings"
      }
    }
  },
  "krunner": {
    "RCName": "krunnerrc",
    "Name": "krunner",
    "Groups": {
      "General": {
        "Options": {
          "ActivateWhenTypingOnDesktop": {
            "Name": "activateWhenTypingOnDesktop",
            "Key": "ActivateWhenTypingOnDesktop",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ActivityAware": {
            "Name": "activityAware",
            "Key": "ActivityAware",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FreeFloating": {
            "Name": "freeFloating",
            "Key": "FreeFloating",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HistoryEnabled": {
            "Name": "historyEnabled",
            "Key": "HistoryEnabled",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "RetainPriorSearch": {
            "Name": "retainPriorSearch",
            "Key": "RetainPriorSearch",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "General",
        "Name": "General"
      }
    }
  },
  "ksmserver": {
    "RCName": "ksmserverrc",
    "Name": "ksmserver",
    "Groups": {
      "General": {
        "Options": {
          "confirmLogout": {
            "Name": "confirmLogout",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Confirm logout",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "excludeApps": {
            "Name": "excludeApps",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "Applications to be excluded from session",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "loginMode": {
            "Name": "loginMode",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (enum [ \n              \"restorePreviousLogout\"\n              \"restoreSavedSession\"\n              \"emptySession\"\n            ]))",
            "DefaultValue": "\"restorePreviousLogout\"",
            "IsDefaultCode": false,
            "Label": "On login",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "restorePreviousLogout",
                "Label": ""
              },
              {
                "Name": "restoreSavedSession",
                "Label": ""
              },
              {
                "Name": "emptySession",
                "Label": ""
              }
            ]
          },
          "shutdownType": {
            "Name": "shutdownType",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "Default leave option",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "General",
        "Name": "General"
      }
    }
  },
  "kspread": {
    "RCName": "kspreadrc",
    "Name": "kspread",
    "Groups": {
      "KSpell kspread": {
        "Options": {
          "KSpell_IgnoreTitleCaseWords": {
            "Name": "",
            "Key": "KSpell_IgnoreTitleCaseWords",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "KSpell_IgnoreUppercaseWords": {
            "Name": "",
            "Key": "KSpell_IgnoreUppercaseWords",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "KSpell_dont_check_title_case": {
            "Name": "",
            "Key": "KSpell_dont_check_title_case",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "KSpell_dont_check_upper_word": {
            "Name": "",
            "Key": "KSpell_dont_check_upper_word",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "KSpell kspread",
        "Name": "KSpell kspread"
      },
      "KSpread Color": {
        "Options": {
          "GridColor": {
            "Name": "",
            "Key": "GridColor",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "PageOutlineColor": {
            "Name": "",
            "Key": "PageOutlineColor",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "KSpread Color",
        "Name": "KSpread Color"
      },
      "KSpread Page Layout": {
        "Options": {
          "Default orientation page": {
            "Name": "",
            "Key": "Default orientation page",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Default size page": {
            "Name": "",
            "Key": "Default size page",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Default unit page": {
            "Name": "",
            "Key": "Default unit page",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "KSpread Page Layout",
        "Name": "KSpread Page Layout"
      },
      "Misc": {
        "Options": {
          "UndoRedo": {
            "Name": "",
            "Key": "UndoRedo",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Misc",
        "Name": "Misc"
      },
      "Parameters": {
        "Options": {
          "AutoSave": {
            "Name": "",
            "Key": "AutoSave",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "BackupFile": {
            "Name": "",
            "Key": "BackupFile",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Column Header": {
            "Name": "",
            "Key": "Column Header",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Completion Mode": {
            "Name": "",
            "Key": "Completion Mode",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Formula bar": {
            "Name": "",
            "Key": "Formula bar",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Horiz ScrollBar": {
            "Name": "",
            "Key": "Horiz ScrollBar",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Indent": {
            "Name": "",
            "Key": "Indent",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Method of Calc": {
            "Name": "",
            "Key": "Method of Calc",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Move": {
            "Name": "",
            "Key": "Move",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Msg error": {
            "Name": "",
            "Key": "Msg error",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "NbPage": {
            "Name": "",
            "Key": "NbPage",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "NbRecentFile": {
            "Name": "",
            "Key": "NbRecentFile",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Other list": {
            "Name": "",
            "Key": "Other list",
            "HasKey": true,
            "TypeValue": "(either str (listOf str))",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "StringList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Row Header": {
            "Name": "",
            "Key": "Row Header",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Status bar": {
            "Name": "",
            "Key": "Status bar",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Tabbar": {
            "Name": "",
            "Key": "Tabbar",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Vert ScrollBar": {
            "Name": "",
            "Key": "Vert ScrollBar",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Zoom": {
            "Name": "",
            "Key": "Zoom",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Parameters",
        "Name": "Parameters"
      },
      "Sheet-Style": {
        "Options": {
          "Image": {
            "Name": "",
            "Key": "Image",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Name": {
            "Name": "",
            "Key": "Name",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "XML": {
            "Name": "",
            "Key": "XML",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Sheet-Style",
        "Name": "Sheet-Style"
      },
      "TTS": {
        "Options": {
          "AcceleratorPrefixWord": {
            "Name": "",
            "Key": "AcceleratorPrefixWord",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "PollingInterval": {
            "Name": "",
            "Key": "PollingInterval",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SpeakAccelerators": {
            "Name": "",
            "Key": "SpeakAccelerators",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SpeakDisabled": {
            "Name": "",
            "Key": "SpeakDisabled",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SpeakFocusWidget": {
            "Name": "",
            "Key": "SpeakFocusWidget",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SpeakPointerWidget": {
            "Name": "",
            "Key": "SpeakPointerWidget",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SpeakTooltips": {
            "Name": "",
            "Key": "SpeakTooltips",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SpeakWhatsThis": {
            "Name": "",
            "Key": "SpeakWhatsThis",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "TTS",
        "Name": "TTS"
      }
    }
  },
  "kstars": {
    "RCName": "kstarsrc",
    "Name": "kstars",
    "Groups": {
      "ASTAP": {
        "Options": {
          "ASTAPDownSample": {
            "Name": "ASTAPDownSample",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Down sample prior to solving. Also called binning. A value 0 will result in auto selection downsampling.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ASTAPDownSampleValue": {
            "Name": "ASTAPDownSampleValue",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "0.0",
            "IsDefaultCode": false,
            "Label": "Down sample prior to solving. Also called binning. A value 0 will result in auto selection downsampling.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ASTAPExecutable": {
            "Name": "ASTAPExecutable",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "''KSUtils::getDefaultPath(\"ASTAP\")''",
            "IsDefaultCode": true,
            "Label": "Full path to the ASTAP executable.",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ASTAPLargeSearchWindow": {
            "Name": "ASTAPLargeSearchWindow",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Increase search window size.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ASTAPSearchRadius": {
            "Name": "ASTAPSearchRadius",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "The program will search in a square spiral around the start position up to this radius.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ASTAPSearchRadiusValue": {
            "Name": "ASTAPSearchRadiusValue",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "30.0",
            "IsDefaultCode": false,
            "Label": "The program will search in a square spiral around the start position up to this radius.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ASTAPUpdateFITS": {
            "Name": "ASTAPUpdateFITS",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Update the fits header with the found solution.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "ASTAP",
        "Name": "ASTAP"
      },
      "Align": {
        "Options": {
          "AlignAccuracyThreshold": {
            "Name": "AlignAccuracyThreshold",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "30",
            "IsDefaultCode": false,
            "Label": "Accuracy threshold in arcseconds between solution and target coordinates.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AlignBinning": {
            "Name": "AlignBinning",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"2x2\"",
            "IsDefaultCode": false,
            "Label": "Default camera binning in alignment mode",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AlignDarkFrame": {
            "Name": "AlignDarkFrame",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Take a dark frame and subtract it before running astrometry operation.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AlignExposure": {
            "Name": "AlignExposure",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "5.0",
            "IsDefaultCode": false,
            "Label": "Default alignment exposure value",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AlignFilter": {
            "Name": "AlignFilter",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "Default filter wheel filter in alignment mode",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AlignGain": {
            "Name": "AlignGain",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "0.0",
            "IsDefaultCode": false,
            "Label": "Default camera gain in alignment mode",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AlignISO": {
            "Name": "AlignISO",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "0.0",
            "IsDefaultCode": false,
            "Label": "Default camera ISO in alignment mode",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AlignSettlingTime": {
            "Name": "AlignSettlingTime",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "1500",
            "IsDefaultCode": false,
            "Label": "Time to wait in milliseconds after telescope slewing is complete before starting the next capture.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AstrometryAPIKey": {
            "Name": "AstrometryAPIKey",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"iczikaqstszeptgs\"",
            "IsDefaultCode": false,
            "Label": "astrometry.net API Key",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AstrometryAPIURL": {
            "Name": "AstrometryAPIURL",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"http://nova.astrometry.net\"",
            "IsDefaultCode": false,
            "Label": "astrometry.net API URL",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AstrometryAutoDownsample": {
            "Name": "AstrometryAutoDownsample",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Automatically downsample based on image size.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AstrometryAutoUpdateImageScale": {
            "Name": "AstrometryAutoUpdateImageScale",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Automatically update image scale when CCD or Mount parameters are updated.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AstrometryAutoUpdatePosition": {
            "Name": "AstrometryAutoUpdatePosition",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Automatically update position coordinates when mounts completes slewing.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AstrometryConfFile": {
            "Name": "AstrometryConfFile",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "''KSUtils::getDefaultPath(\"AstrometryConfFile\")''",
            "IsDefaultCode": true,
            "Label": "astrometry.net configuration file",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AstrometryCustomOptions": {
            "Name": "AstrometryCustomOptions",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "Additional optional astrometry.net options",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AstrometryDetectParity": {
            "Name": "AstrometryDetectParity",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Detect parity and reuse it to speed up solver.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AstrometryDifferentialSlewing": {
            "Name": "AstrometryDifferentialSlewing",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Do not use Sync when Slew to Target is selected. Use differential slewing to correct for discrepancies.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AstrometryDownsample": {
            "Name": "AstrometryDownsample",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "2",
            "IsDefaultCode": false,
            "Label": "Downsample factor",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AstrometryImageScaleHigh": {
            "Name": "AstrometryImageScaleHigh",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "Upper image scale.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AstrometryImageScaleLow": {
            "Name": "AstrometryImageScaleLow",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "Lower image scale.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AstrometryImageScaleUnits": {
            "Name": "AstrometryImageScaleUnits",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "1",
            "IsDefaultCode": false,
            "Label": "Image scale units in arcminutes (aw), degrees (dw), or arcsec per pixel (app)",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AstrometryPositionDE": {
            "Name": "AstrometryPositionDE",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "User supplied declination value in degrees to be passed to the solver.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AstrometryPositionRA": {
            "Name": "AstrometryPositionRA",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "User supplied Right Ascension value in degrees to be passed to the solver.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AstrometryRadius": {
            "Name": "AstrometryRadius",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "30.0",
            "IsDefaultCode": false,
            "Label": "The Search Radius for the Estimated Telescope/Image Field Position in degrees.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AstrometryRotatorThreshold": {
            "Name": "AstrometryRotatorThreshold",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "30.0",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AstrometrySolverBinary": {
            "Name": "AstrometrySolverBinary",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "''KSUtils::getDefaultPath(\"AstrometrySolverBinary\")''",
            "IsDefaultCode": true,
            "Label": "astrometry.net solve-field binary",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AstrometrySolverOverlay": {
            "Name": "AstrometrySolverOverlay",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Display received FITS images unto solver FOV rectangle in the sky map.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AstrometrySolverWCS": {
            "Name": "AstrometrySolverWCS",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "World Coordinate System (WCS). WCS is used to encode RA/DEC coordinates in captured CCD images.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AstrometryTimeout": {
            "Name": "AstrometryTimeout",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "180",
            "IsDefaultCode": false,
            "Label": "Timeout in seconds to wait for astrometry solver to complete.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AstrometryUseDownsample": {
            "Name": "AstrometryUseDownsample",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Downsample the image to shrink its size and speed up the solver.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AstrometryUseImageScale": {
            "Name": "AstrometryUseImageScale",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Set image scale to speed up solver as it does not have to search index files of different image scales.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AstrometryUseJPEG": {
            "Name": "AstrometryUseJPEG",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Use JPEG format, instead of FITS, to upload images to the astrometry.net online service.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AstrometryUseNoFITS2FITS": {
            "Name": "AstrometryUseNoFITS2FITS",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Do not sanitize FITS. This option should only be checked if astrometry.net version is 0.67 or earlier. Uncheck for any versions greater than 0.67.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AstrometryUseNoVerify": {
            "Name": "AstrometryUseNoVerify",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "This will prevent the solver from looking at an already existing WCS Header before blindly trying to solve the image. It is recommended to keep it checked.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AstrometryUsePosition": {
            "Name": "AstrometryUsePosition",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Set estimated position to speed up astrometry solver as it does not have to search in other areas of the sky.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AstrometryUseResort": {
            "Name": "AstrometryUseResort",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Check this option if your image does not have much nebulosity. If it does have strong nebulosity, uncheck it.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AstrometryUseRotator": {
            "Name": "AstrometryUseRotator",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AstrometryWCSInfo": {
            "Name": "AstrometryWCSInfo",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "''KSUtils::getDefaultPath(\"AstrometryWCSInfo\")''",
            "IsDefaultCode": true,
            "Label": "astrometry.net wcsinfo binary",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "PAHAutoPark": {
            "Name": "PAHAutoPark",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Automatically park the mount after Polar Alignment Assistant Tool is complete.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "PAHDirection": {
            "Name": "PAHDirection",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "Mount rotation direction during polar alignment.",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "PAHExposure": {
            "Name": "PAHExposure",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "2.0",
            "IsDefaultCode": false,
            "Label": "Polar Alignment Assistant exposure duration in seconds.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "PAHManualSlew": {
            "Name": "PAHManualSlew",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "User should manually rotate the mount about its axis during polar alignment.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "PAHMountSpeed": {
            "Name": "PAHMountSpeed",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "Speed to set mount in Polar Alignment Assistant Tool.",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "PAHRefreshAlgorithm": {
            "Name": "PAHRefreshAlgorithm",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "The algorithm used for polar-align refresh.",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "PAHRotaion": {
            "Name": "PAHRotaion",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "30.0",
            "IsDefaultCode": false,
            "Label": "Rotate mount by this many degrees during polar alignment.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SextractorBinary": {
            "Name": "SextractorBinary",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "''KSUtils::getDefaultPath(\"SextractorBinary\")''",
            "IsDefaultCode": true,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SolverGotoOption": {
            "Name": "SolverGotoOption",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "1",
            "IsDefaultCode": false,
            "Label": "Action to take if solver if successful (Sync, Slew to Target, or None)",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "WatneyBinary": {
            "Name": "WatneyBinary",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "''KSUtils::getDefaultPath(\"WatneyBinary\")''",
            "IsDefaultCode": true,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Align",
        "Name": "Align"
      },
      "Analyze": {
        "Options": {
          "AnalyzeAlt": {
            "Name": "AnalyzeAlt",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AnalyzeAz": {
            "Name": "AnalyzeAz",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AnalyzeDEC": {
            "Name": "AnalyzeDEC",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AnalyzeDECp": {
            "Name": "AnalyzeDECp",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AnalyzeDrift": {
            "Name": "AnalyzeDrift",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AnalyzeEccentricity": {
            "Name": "AnalyzeEccentricity",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AnalyzeHFR": {
            "Name": "AnalyzeHFR",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AnalyzeMedian": {
            "Name": "AnalyzeMedian",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AnalyzeMountDEC": {
            "Name": "AnalyzeMountDEC",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AnalyzeMountHA": {
            "Name": "AnalyzeMountHA",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AnalyzeMountRA": {
            "Name": "AnalyzeMountRA",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AnalyzeNumCaptureStars": {
            "Name": "AnalyzeNumCaptureStars",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AnalyzeNumStars": {
            "Name": "AnalyzeNumStars",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AnalyzePierSide": {
            "Name": "AnalyzePierSide",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AnalyzeRA": {
            "Name": "AnalyzeRA",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AnalyzeRAp": {
            "Name": "AnalyzeRAp",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AnalyzeRMS": {
            "Name": "AnalyzeRMS",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AnalyzeRMSC": {
            "Name": "AnalyzeRMSC",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AnalyzeSNR": {
            "Name": "AnalyzeSNR",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AnalyzeSkyBg": {
            "Name": "AnalyzeSkyBg",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AnalyzeTargetDistance": {
            "Name": "AnalyzeTargetDistance",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AnalyzeTemperature": {
            "Name": "AnalyzeTemperature",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Analyze",
        "Name": "Analyze"
      },
      "Capture": {
        "Options": {
          "AdaptiveSampling": {
            "Name": "AdaptiveSampling",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Automatically down sample images based on available resources.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AlwaysResetSequenceWhenStarting": {
            "Name": "AlwaysResetSequenceWhenStarting",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "\u003chtml\u003e\u003chead/\u003e\u003cbody\u003e\u003cp\u003eWhen starting to process a sequence list, reset all capture counts to zero. Scheduler overrides this option when Remember Job Progress is enabled.\u003c/p\u003e\u003c/body\u003e\u003c/html\u003e",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AutoDark": {
            "Name": "AutoDark",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Automatically apply dark subtraction if a suitable dark frame is available.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AutoStretch": {
            "Name": "AutoStretch",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Perform auto stretch on captured images in FITS Viewer.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "CalibrationADUValue": {
            "Name": "CalibrationADUValue",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "Desired flat field ADU",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "CalibrationADUValueTolerance": {
            "Name": "CalibrationADUValueTolerance",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "1000",
            "IsDefaultCode": false,
            "Label": "ADU Value tolerance",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "CalibrationFlatDurationIndex": {
            "Name": "CalibrationFlatDurationIndex",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "Index of flat duration option.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "CalibrationFlatSourceIndex": {
            "Name": "CalibrationFlatSourceIndex",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "Index of flat source option.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "CalibrationWallAlt": {
            "Name": "CalibrationWallAlt",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "0.0",
            "IsDefaultCode": false,
            "Label": "Altitude of calibration wall location.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "CalibrationWallAz": {
            "Name": "CalibrationWallAz",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "0.0",
            "IsDefaultCode": false,
            "Label": "Azimuth of calibration wall location.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "CaptureDirectory": {
            "Name": "CaptureDirectory",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "Path to capture directory to save images.",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "CapturePosition": {
            "Name": "CapturePosition",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Calculate position after captures.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DarkLibraryDuration": {
            "Name": "DarkLibraryDuration",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "30",
            "IsDefaultCode": false,
            "Label": "Reuse dark frames from the dark library for this many days. If exceeded, a new dark frame shall be captured and stored for future use.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DefaultObserver": {
            "Name": "DefaultObserver",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "Default observer full name.",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "EnforceAutofocus": {
            "Name": "EnforceAutofocus",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Enforce Autofocus HFR limit.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "EnforceAutofocusOnTemperature": {
            "Name": "EnforceAutofocusOnTemperature",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Enforce Autofocus on temperature change.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "EnforceGuideDeviation": {
            "Name": "EnforceGuideDeviation",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Enforce guiding deviation limit.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "EnforceRefocusEveryN": {
            "Name": "EnforceRefocusEveryN",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Enforce Refocus Every N Minutes.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "EnforceStartGuiderDrift": {
            "Name": "EnforceStartGuiderDrift",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Enforce maximum acceptable guider drift allowed before starting capture.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FlatSyncFocus": {
            "Name": "FlatSyncFocus",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Capture flat frames at the same focus position of light frames.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ForceDSLRPresets": {
            "Name": "ForceDSLRPresets",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Force exposure times to align with DSLR exposure presets. This insures accurate exposure times for sub-second exposures.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GuideDeviation": {
            "Name": "GuideDeviation",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "2.0",
            "IsDefaultCode": false,
            "Label": "Default maximum permittable guide deviation",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GuidingSettle": {
            "Name": "GuidingSettle",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "0.0",
            "IsDefaultCode": false,
            "Label": "Wait this many seconds after guiding is resumed before starting capture.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HFRDeviation": {
            "Name": "HFRDeviation",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "0.5",
            "IsDefaultCode": false,
            "Label": "Default maximum permittable HFR deviation",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HFRThresholdPercentage": {
            "Name": "HFRThresholdPercentage",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "2.5",
            "IsDefaultCode": false,
            "Label": "Increase autofocus HFR value by this percentage gain and store it in Capture Module.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "InSequenceCheckFrames": {
            "Name": "InSequenceCheckFrames",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "1",
            "IsDefaultCode": false,
            "Label": "Run In-Sequence HFR check after this many frames.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ManualCoverTimeout": {
            "Name": "ManualCoverTimeout",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "60",
            "IsDefaultCode": false,
            "Label": "Cover or uncover telescope dialog timeout in seconds.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "MaxFocusTemperatureDelta": {
            "Name": "MaxFocusTemperatureDelta",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "1.0",
            "IsDefaultCode": false,
            "Label": "Default maximum focus temperature delta",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "MaxStartGuiderDrift": {
            "Name": "MaxStartGuiderDrift",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "2.0",
            "IsDefaultCode": false,
            "Label": "Maximum acceptable guider drift allowed before starting capture.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "MaxTemperatureDiff": {
            "Name": "MaxTemperatureDiff",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "1.0",
            "IsDefaultCode": false,
            "Label": "Maximum acceptable difference between requested and measured temperature set point.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "PAMultiplier": {
            "Name": "PAMultiplier",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "1.0",
            "IsDefaultCode": false,
            "Label": "Position angle multiplier",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "PAOffset": {
            "Name": "PAOffset",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "0.0",
            "IsDefaultCode": false,
            "Label": "Position angle offset",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "PAPierSide": {
            "Name": "PAPierSide",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "Position angle calibration pier side",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "PlaceholderFomat": {
            "Name": "PlaceholderFomat",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "''KSUtils::getDefaultPath(\"placeholderFormat\")''",
            "IsDefaultCode": true,
            "Label": "How to format captured image filename.",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "RefocusAfterMeridianFlip": {
            "Name": "RefocusAfterMeridianFlip",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Refocus after meridian flip is done",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "RefocusEveryN": {
            "Name": "RefocusEveryN",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "60",
            "IsDefaultCode": false,
            "Label": "Number of minute between forced refocus attempts",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "RemoteCaptureDirectory": {
            "Name": "RemoteCaptureDirectory",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "Path to remote capture directory to save images.",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ResetMountModelAfterMeridian": {
            "Name": "ResetMountModelAfterMeridian",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Reset mount model after meridian flip.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SaveHFRToFile": {
            "Name": "SaveHFRToFile",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "When saving a sequence file, save current HFR threshold value. By default, zero value is used.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "StretchPreviewSampling": {
            "Name": "StretchPreviewSampling",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "4",
            "IsDefaultCode": false,
            "Label": "Set the coarseness of the preview shown when sliding the fitsviewer's stretch parameter sliders. 1 is full resolution, but can be slow, 4 would be coarse resolution and fast.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SyncFOVPA": {
            "Name": "SyncFOVPA",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Sync FOV indicator Position Angle with Rotator Settings Position Angle",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "UseMedianFocus": {
            "Name": "UseMedianFocus",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Calculate median focus value after each autofocus operation is complete.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "fileSettingsUseDuration": {
            "Name": "fileSettingsUseDuration",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Add the capture duration to the capture file name.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "fileSettingsUseFilter": {
            "Name": "fileSettingsUseFilter",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Add the filter name to the capture file name.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "fileSettingsUseTimestamp": {
            "Name": "fileSettingsUseTimestamp",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Add the capture timestamp to the capture file name.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "useDSLRImageViewer": {
            "Name": "useDSLRImageViewer",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "\"!KSUtils::isHardwareLimited()\"",
            "IsDefaultCode": false,
            "Label": "Display every captured DSLR image in the Image Viewer window.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "useSummaryPreview": {
            "Name": "useSummaryPreview",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "\"!KSUtils::isHardwareLimited()\"",
            "IsDefaultCode": false,
            "Label": "Display every image captured sequence image in the Ekos summary screen preview window.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Capture",
        "Name": "Capture"
      },
      "Catalogs": {
        "Options": {
          "CatalogFile": {
            "Name": "CatalogFile",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (listOf str))",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "Filenames of defined custom object catalogs.",
            "Type": "StringList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DSOCachePercentage": {
            "Name": "DSOCachePercentage",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "100",
            "IsDefaultCode": false,
            "Label": "Percentage of the sky to cache DSOs for.",
            "Type": "UInt",
            "Min": "5",
            "HasMin": true,
            "Max": "100",
            "HasMax": true,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DSOCatalogFilename": {
            "Name": "DSOCatalogFilename",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"dso_main.kscat\"",
            "IsDefaultCode": false,
            "Label": "The filename of the DSO catalog.",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DSODefaultCatalogFilename": {
            "Name": "DSODefaultCatalogFilename",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"OpenNGC.kscat\"",
            "IsDefaultCode": false,
            "Label": "The filename of the default DSO catalog (OpenNGC).",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DSOMinZoomFactor": {
            "Name": "DSOMinZoomFactor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "400",
            "IsDefaultCode": false,
            "Label": "Minimum zoom level to render DeepSkyObjects.",
            "Type": "UInt",
            "Min": "250",
            "HasMin": true,
            "Max": "4000",
            "HasMax": true,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ResolveNamesOnline": {
            "Name": "ResolveNamesOnline",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Resolve names using online services.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowCatalog": {
            "Name": "ShowCatalog",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (listOf int))",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "List of toggles for displaying custom object catalogs.",
            "Type": "IntList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowCatalogNames": {
            "Name": "ShowCatalogNames",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (listOf str))",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "List for displaying custom object catalogs.",
            "Type": "StringList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Catalogs",
        "Name": "Catalogs"
      },
      "Colors": {
        "Options": {
          "AngularRulerColor": {
            "Name": "AngularRulerColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#FFF\"",
            "IsDefaultCode": false,
            "Label": "Color of angular distance ruler",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ArtificialHorizonColor": {
            "Name": "ArtificialHorizonColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#C82828\"",
            "IsDefaultCode": false,
            "Label": "Color Artificial Horizon",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "BoxBGColor": {
            "Name": "BoxBGColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#000\"",
            "IsDefaultCode": false,
            "Label": "Background color of InfoBoxes",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "BoxGrabColor": {
            "Name": "BoxGrabColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#F00\"",
            "IsDefaultCode": false,
            "Label": "Text color of InfoBoxes when grabbed with mouse",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "BoxTextColor": {
            "Name": "BoxTextColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#FFF\"",
            "IsDefaultCode": false,
            "Label": "Text color of InfoBoxes",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "CBoundColor": {
            "Name": "CBoundColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#222\"",
            "IsDefaultCode": false,
            "Label": "Color of constellation boundaries",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "CBoundHighColor": {
            "Name": "CBoundHighColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#222\"",
            "IsDefaultCode": false,
            "Label": "Color of highlighted constellation boundary",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "CLineColor": {
            "Name": "CLineColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#555\"",
            "IsDefaultCode": false,
            "Label": "Color of constellation lines",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "CNameColor": {
            "Name": "CNameColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#AA7\"",
            "IsDefaultCode": false,
            "Label": "Color of constellation names",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ColorSchemeFile": {
            "Name": "ColorSchemeFile",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"moonless-night.colors\"",
            "IsDefaultCode": false,
            "Label": "The name of the color scheme",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "CompassColor": {
            "Name": "CompassColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#002\"",
            "IsDefaultCode": false,
            "Label": "Color of cardinal compass labels along horizon",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DEGuideColor": {
            "Name": "DEGuideColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#00A5FF\"",
            "IsDefaultCode": false,
            "Label": "Color of DEC Guide Error",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DeepSkyNameColor": {
            "Name": "DeepSkyNameColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#7AA\"",
            "IsDefaultCode": false,
            "Label": "Color of deep-sky object name labels",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "EclipticColor": {
            "Name": "EclipticColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#663\"",
            "IsDefaultCode": false,
            "Label": "Color of ecliptic line",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "EquatorColor": {
            "Name": "EquatorColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#FFF\"",
            "IsDefaultCode": false,
            "Label": "Color of equator line",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "EquatorialGridColor": {
            "Name": "EquatorialGridColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#456\"",
            "IsDefaultCode": false,
            "Label": "Color of equatorial coordinate grid lines",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HorizonColor": {
            "Name": "HorizonColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#5A3\"",
            "IsDefaultCode": false,
            "Label": "Color of horizon line",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HorizontalGridColor": {
            "Name": "HorizontalGridColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#5A3\"",
            "IsDefaultCode": false,
            "Label": "Color of horizontal coordinate grid lines",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LocalMeridianColor": {
            "Name": "LocalMeridianColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#0059b3\"",
            "IsDefaultCode": false,
            "Label": "Color of local meridian line",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "MilkyWayWColor": {
            "Name": "MilkyWayWColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#123\"",
            "IsDefaultCode": false,
            "Label": "Color of Milky Way contour",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "PlanetNameColor": {
            "Name": "PlanetNameColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#439\"",
            "IsDefaultCode": false,
            "Label": "Color of planet name labels",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "PlanetTrailColor": {
            "Name": "PlanetTrailColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#963\"",
            "IsDefaultCode": false,
            "Label": "Color of planet trails",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "RAGuideColor": {
            "Name": "RAGuideColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#00FF00\"",
            "IsDefaultCode": false,
            "Label": "Color of RA Guide Error",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SatColor": {
            "Name": "SatColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#FF0000\"",
            "IsDefaultCode": false,
            "Label": "Color of invisible satellites",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SatLabelColor": {
            "Name": "SatLabelColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#640000\"",
            "IsDefaultCode": false,
            "Label": "Color of satellites labels",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SkyColor": {
            "Name": "SkyColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#002\"",
            "IsDefaultCode": false,
            "Label": "Color of sky",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SolverFOVColor": {
            "Name": "SolverFOVColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#FFFF00\"",
            "IsDefaultCode": false,
            "Label": "Color of solver FOV box",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SpecialObjectColor": {
            "Name": "SpecialObjectColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#A00\"",
            "IsDefaultCode": false,
            "Label": "Color of objects with extra links available",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "StarColorIntensity": {
            "Name": "StarColorIntensity",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "6",
            "IsDefaultCode": false,
            "Label": "Saturation level of star colors",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "10",
            "HasMax": true,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "StarColorMode": {
            "Name": "StarColorMode",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "Mode for rendering stars",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "4",
            "HasMax": true,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "StarNameColor": {
            "Name": "StarNameColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#7AA\"",
            "IsDefaultCode": false,
            "Label": "Color of star name labels",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SupernovaColor": {
            "Name": "SupernovaColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#FFA500\"",
            "IsDefaultCode": false,
            "Label": "Color of supernovae",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TelescopeTargetColor": {
            "Name": "TelescopeTargetColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#8B8\"",
            "IsDefaultCode": false,
            "Label": "Color of telescope symbols",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "UserLabelColor": {
            "Name": "UserLabelColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#439\"",
            "IsDefaultCode": false,
            "Label": "Color of user-added labels",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "VisibleSatColor": {
            "Name": "VisibleSatColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#00FF00\"",
            "IsDefaultCode": false,
            "Label": "Color of visible satellites",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Colors",
        "Name": "Colors"
      },
      "DarkLibrary": {
        "Options": {
          "MaxDarkTemperatureDiff": {
            "Name": "MaxDarkTemperatureDiff",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "1.0",
            "IsDefaultCode": false,
            "Label": "Maximum acceptable difference between current and recorded dark frame temperature set point. When the difference exceeds this value, a new dark frame shall be captured for this set point.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "shutterfulCCDs": {
            "Name": "shutterfulCCDs",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (listOf str))",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "List of CCDs with mechanical or electronic shutters.",
            "Type": "StringList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "shutterlessCCDs": {
            "Name": "shutterlessCCDs",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (listOf str))",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "List of CCDs without mechanical or electronic shutters.",
            "Type": "StringList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "DarkLibrary",
        "Name": "DarkLibrary"
      },
      "Ekos": {
        "Options": {
          "AutoStartEkosLive": {
            "Name": "AutoStartEkosLive",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Start Ekos Live on KStars startup.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "EkosLeftIcons": {
            "Name": "EkosLeftIcons",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Ekos modules icons are placed to the left of pages",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "EkosLiveOnline": {
            "Name": "EkosLiveOnline",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Whether EkosLive connection mode is online.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "EkosLiveUsername": {
            "Name": "EkosLiveUsername",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "EkosLive username",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "EkosTopIcons": {
            "Name": "EkosTopIcons",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Ekos modules icons are placed on the top of pages",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "EkosWindowHeight": {
            "Name": "EkosWindowHeight",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "600",
            "IsDefaultCode": false,
            "Label": "Ekos window height",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "EkosWindowWidth": {
            "Name": "EkosWindowWidth",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "600",
            "IsDefaultCode": false,
            "Label": "Ekos window width",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "RememberCredentials": {
            "Name": "RememberCredentials",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Remember Ekos Live credentials.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "autoLoadSerialAssistant": {
            "Name": "autoLoadSerialAssistant",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Automatically load Serial Port Assistant tool when detecting unmapped serial ports?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "independentWindowEkos": {
            "Name": "independentWindowEkos",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Make Ekos window independent of KStars main window",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "loadConfigOnConnection": {
            "Name": "loadConfigOnConnection",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Load device configuration upon successful connection?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "loadDefaultConfig": {
            "Name": "loadDefaultConfig",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Always load device default configuration upon successful connection?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "neverLoadConfig": {
            "Name": "neverLoadConfig",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Never load device configuration?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "profile": {
            "Name": "profile",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"Simulators\"",
            "IsDefaultCode": false,
            "Label": "Ekos drivers profile",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Ekos",
        "Name": "Ekos"
      },
      "FITSViewer": {
        "Options": {
          "Auto3DCube": {
            "Name": "Auto3DCube",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "\"!KSUtils::isHardwareLimited()\"",
            "IsDefaultCode": false,
            "Label": "Process 3D FITS Cube (RGB). If false, only first channel is processed.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AutoDebayer": {
            "Name": "AutoDebayer",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "\"!KSUtils::isHardwareLimited()\"",
            "IsDefaultCode": false,
            "Label": "Automatically debayer a FITS image if it is contains a bayer pattern",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AutoHFR": {
            "Name": "AutoHFR",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Automatically compute HFRs of fits images",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AutoWCS": {
            "Name": "AutoWCS",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "\"!KSUtils::isHardwareLimited()\"",
            "IsDefaultCode": false,
            "Label": "Automatically process World-Coordinate-System (WCS) data when loading a FITS file.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LimitedResourcesMode": {
            "Name": "LimitedResourcesMode",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "\"KSUtils::isHardwareLimited()\"",
            "IsDefaultCode": false,
            "Label": "Conserve CPU and memory by disabling all resource-intensive features in FITS Viewer",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "NonLinearHistogram": {
            "Name": "NonLinearHistogram",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Create histogram from non-linear auto-stretched image rather than linear raw image data.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "QuickHFR": {
            "Name": "QuickHFR",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Compute the HFRs of normal images quickly by looking at the center 25% only.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "StellarSolverPartition": {
            "Name": "StellarSolverPartition",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Enable StellarSolver partition. Partitions the image in multiple threads to speed up detecting stars. This may significantly speed up source extraction but may result in unstable operation.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "focusFITSOnNewImage": {
            "Name": "focusFITSOnNewImage",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "independentWindowFITS": {
            "Name": "independentWindowFITS",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Make FITS Viewer window independent of KStars main window",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "singlePreviewFITS": {
            "Name": "singlePreviewFITS",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Preview FITS in a single tab?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "singleWindowCapturedFITS": {
            "Name": "singleWindowCapturedFITS",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Display all captured FITS in one window?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "singleWindowOpenedFITS": {
            "Name": "singleWindowOpenedFITS",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Display all opened FITS in one window?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "useFITSViewer": {
            "Name": "useFITSViewer",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Display every image captured in a FITS Viewer window.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "FITSViewer",
        "Name": "FITSViewer"
      },
      "Focus": {
        "Options": {
          "DefaultFocusTemperatureSource": {
            "Name": "DefaultFocusTemperatureSource",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "Default focus module temperature source.",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FocusAlgorithm": {
            "Name": "FocusAlgorithm",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"Linear 1 Pass\"",
            "IsDefaultCode": false,
            "Label": "Focus process algorithm",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FocusAutoStarEnabled": {
            "Name": "FocusAutoStarEnabled",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Automatically select a star to focus.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FocusBacklash": {
            "Name": "FocusBacklash",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"0\"",
            "IsDefaultCode": false,
            "Label": "Focus backlash in steps. Zero disables backlash compensation.",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FocusBinning": {
            "Name": "FocusBinning",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"1x1\"",
            "IsDefaultCode": false,
            "Label": "Default Camera binning",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FocusBoxSize": {
            "Name": "FocusBoxSize",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "64",
            "IsDefaultCode": false,
            "Label": "Default Focuser star selection box size",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FocusCaptureTimeout": {
            "Name": "FocusCaptureTimeout",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "120",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FocusCurveFit": {
            "Name": "FocusCurveFit",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "Curve Type.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FocusDetection": {
            "Name": "FocusDetection",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"SEP\"",
            "IsDefaultCode": false,
            "Label": "Star detection algorithm",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FocusExposure": {
            "Name": "FocusExposure",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "2.0",
            "IsDefaultCode": false,
            "Label": "Default focus exposure time when no filters are used.",
            "Type": "double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FocusFilter": {
            "Name": "FocusFilter",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "Default Filter Wheel filter",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FocusFramesCount": {
            "Name": "FocusFramesCount",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "1",
            "IsDefaultCode": false,
            "Label": "Number of focus frames to average for HFR calculations.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FocusFullFieldInnerRadius": {
            "Name": "FocusFullFieldInnerRadius",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "0.0",
            "IsDefaultCode": false,
            "Label": "Full field inner radius.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FocusFullFieldOuterRadius": {
            "Name": "FocusFullFieldOuterRadius",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "100.0",
            "IsDefaultCode": false,
            "Label": "Full field outer radius.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FocusGain": {
            "Name": "FocusGain",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "0.0",
            "IsDefaultCode": false,
            "Label": "Default Focuser gain value",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FocusGaussianKernelSize": {
            "Name": "FocusGaussianKernelSize",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "5",
            "IsDefaultCode": false,
            "Label": "Gaussian blur kernel size.",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FocusGaussianSigma": {
            "Name": "FocusGaussianSigma",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "1.5",
            "IsDefaultCode": false,
            "Label": "Gaussian blur sigma value.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FocusISO": {
            "Name": "FocusISO",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "Default Focuser Camera ISO value",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FocusMaxSingleStep": {
            "Name": "FocusMaxSingleStep",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "2000",
            "IsDefaultCode": false,
            "Label": "Maximum single step the focus algorithm is permitted to command.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FocusMaxTravel": {
            "Name": "FocusMaxTravel",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "5000",
            "IsDefaultCode": false,
            "Label": "Maximum Focus Travel Distance",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FocusMotionTimeout": {
            "Name": "FocusMotionTimeout",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "30",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FocusMultiRowAverage": {
            "Name": "FocusMultiRowAverage",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "3",
            "IsDefaultCode": false,
            "Label": "Number of rows to combine in the Bahtinov average calculation.",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FocusOutSteps": {
            "Name": "FocusOutSteps",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "5.0",
            "IsDefaultCode": false,
            "Label": "Initial Focus Out Steps",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FocusR2Limit": {
            "Name": "FocusR2Limit",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "0.0",
            "IsDefaultCode": false,
            "Label": "Acceptable limit on R2 from curve fit.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FocusSEPProfile": {
            "Name": "FocusSEPProfile",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "Focus source extraction profile",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FocusSettleTime": {
            "Name": "FocusSettleTime",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "0.0",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FocusSubFrame": {
            "Name": "FocusSubFrame",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Subframe the focus star during the autofocus procedure.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FocusSuspendGuiding": {
            "Name": "FocusSuspendGuiding",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Suspend guiding while autofocus in progress.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FocusThreshold": {
            "Name": "FocusThreshold",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "150.0",
            "IsDefaultCode": false,
            "Label": "Relative percentage strength of centroid edge pixel strength to average pixel value.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FocusTicks": {
            "Name": "FocusTicks",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "500",
            "IsDefaultCode": false,
            "Label": "Default Focuser step ticks",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FocusTolerance": {
            "Name": "FocusTolerance",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "1.0",
            "IsDefaultCode": false,
            "Label": "Default Focuser tolerance value",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FocusUseFullField": {
            "Name": "FocusUseFullField",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Measure average HFR from all stars combined in a full frame. This method defaults to the Centroid detection, but can use SEP detection too. Its performance decreases as the number of stars increases.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FocusUseWeights": {
            "Name": "FocusUseWeights",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Use weights in the curve fitting process.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GuideSettleTime": {
            "Name": "GuideSettleTime",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "0.0",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "UseFocusDarkFrame": {
            "Name": "UseFocusDarkFrame",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Take a dark frame and subtract it before running autofocus operation.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Focus",
        "Name": "Focus"
      },
      "GUI": {
        "Options": {
          "CurrentTheme": {
            "Name": "CurrentTheme",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"Default\"",
            "IsDefaultCode": false,
            "Label": "Current application theme",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "PositionFocusBox": {
            "Name": "PositionFocusBox",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"QPoint(600,0)\"",
            "IsDefaultCode": true,
            "Label": "Position of the focus InfoBox.",
            "Type": "Point",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "PositionGeoBox": {
            "Name": "PositionGeoBox",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"QPoint(0,600)\"",
            "IsDefaultCode": true,
            "Label": "Position of the geographic InfoBox.",
            "Type": "Point",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "PositionTimeBox": {
            "Name": "PositionTimeBox",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"QPoint(0,0)\"",
            "IsDefaultCode": true,
            "Label": "Position of the time InfoBox.",
            "Type": "Point",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "RunStartupWizard": {
            "Name": "RunStartupWizard",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Run Startup Wizard when KStars launches?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShadeFocusBox": {
            "Name": "ShadeFocusBox",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Is the focus InfoBox in the \"shaded\" state?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShadeGeoBox": {
            "Name": "ShadeGeoBox",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Is the geographic InfoBox in the \"shaded\" state?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShadeTimeBox": {
            "Name": "ShadeTimeBox",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Is the time InfoBox in the \"shaded\" state?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowAltAzField": {
            "Name": "ShowAltAzField",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Display Alt/Az coordinates in the statusbar?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowFocusBox": {
            "Name": "ShowFocusBox",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Display the focus InfoBox?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowGeoBox": {
            "Name": "ShowGeoBox",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Display the geographic InfoBox?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowInfoBoxes": {
            "Name": "ShowInfoBoxes",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Meta-option to toggle display of all InfoBoxes",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowJ2000RADecField": {
            "Name": "ShowJ2000RADecField",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Display J2000.0 RA/Dec coordinates in the statusbar?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowRADecField": {
            "Name": "ShowRADecField",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Display RA/Dec coordinates in the statusbar?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowSensorFOV": {
            "Name": "ShowSensorFOV",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Display CCD sensor angular size on the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowStatusBar": {
            "Name": "ShowStatusBar",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Display the statusbar?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowTimeBox": {
            "Name": "ShowTimeBox",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Display the time InfoBox?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "StickyFocusBox": {
            "Name": "StickyFocusBox",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "1",
            "IsDefaultCode": false,
            "Label": "Time InfoBox anchor flag",
            "Type": "Int",
            "Min": "0",
            "HasMin": true,
            "Max": "3",
            "HasMax": true,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "StickyGeoBox": {
            "Name": "StickyGeoBox",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "2",
            "IsDefaultCode": false,
            "Label": "Geographic InfoBox anchor flag",
            "Type": "Int",
            "Min": "0",
            "HasMin": true,
            "Max": "3",
            "HasMax": true,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "StickyTimeBox": {
            "Name": "StickyTimeBox",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "Time InfoBox anchor flag",
            "Type": "Int",
            "Min": "0",
            "HasMin": true,
            "Max": "3",
            "HasMax": true,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "WindowHeight": {
            "Name": "WindowHeight",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "768",
            "IsDefaultCode": false,
            "Label": "Height of main window, in pixels",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "WindowWidth": {
            "Name": "WindowWidth",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "1024",
            "IsDefaultCode": false,
            "Label": "Width of main window, in pixels",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "GUI",
        "Name": "GUI"
      },
      "General": {
        "Options": {
          "AlignmentLogging": {
            "Name": "AlignmentLogging",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AlwaysRecomputeCoordinates": {
            "Name": "AlwaysRecomputeCoordinates",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Always recompute coordinates",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "CaptureLogging": {
            "Name": "CaptureLogging",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DSSPadding": {
            "Name": "DSSPadding",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "10.0",
            "IsDefaultCode": false,
            "Label": "Additional padding around DSS Images of deep-sky objects",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DefaultDSSImageSize": {
            "Name": "DefaultDSSImageSize",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "15.0",
            "IsDefaultCode": false,
            "Label": "Default size for DSS images",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DisableLogging": {
            "Name": "DisableLogging",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Disable Verbose Logging",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FITSLogging": {
            "Name": "FITSLogging",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FocusLogging": {
            "Name": "FocusLogging",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GuideLogging": {
            "Name": "GuideLogging",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "INDILogging": {
            "Name": "INDILogging",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "KStarsFirstRun": {
            "Name": "KStarsFirstRun",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Is this the first time running KStars?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LogToDefault": {
            "Name": "LogToDefault",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Log debug message to default output",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LogToFile": {
            "Name": "LogToFile",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Log debug message to a log file",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "MountLogging": {
            "Name": "MountLogging",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ObservatoryLogging": {
            "Name": "ObservatoryLogging",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "RegularLogging": {
            "Name": "RegularLogging",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Enable Regular Logging",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SaveGuideImages": {
            "Name": "SaveGuideImages",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Save Internal Guider images on disk?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "VerboseLogging": {
            "Name": "VerboseLogging",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Enable Verbose Logging",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "General",
        "Name": "General"
      },
      "Guide": {
        "Options": {
          "AutoModeIterations": {
            "Name": "AutoModeIterations",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "3",
            "IsDefaultCode": false,
            "Label": "Number of automode iterations for calibration process.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "CalibrationMaxMove": {
            "Name": "CalibrationMaxMove",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "15",
            "IsDefaultCode": false,
            "Label": "Maximum number of pixels the calibration should move (approximate).",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "CalibrationPulseDuration": {
            "Name": "CalibrationPulseDuration",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "1000",
            "IsDefaultCode": false,
            "Label": "Pulse duration in milliseconds used for guiding pulses during calibration stage.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DECGuideEnabled": {
            "Name": "DECGuideEnabled",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Enable autoguiding in the DEC axis.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DECIntegralGain": {
            "Name": "DECIntegralGain",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "0.0",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DECMaximumPulseArcSec": {
            "Name": "DECMaximumPulseArcSec",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "25",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DECMinimumPulseArcSec": {
            "Name": "DECMinimumPulseArcSec",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "0.2",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DECProportionalGain": {
            "Name": "DECProportionalGain",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "133.33",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DECorrDisplayedOnGuideGraph": {
            "Name": "DECorrDisplayedOnGuideGraph",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Display the DEC Corrections Plot on the Guide Drift Graphics.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DEDisplayedOnGuideGraph": {
            "Name": "DEDisplayedOnGuideGraph",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Display the DEC Plot on the Guide Drift Graphics.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DitherEnabled": {
            "Name": "DitherEnabled",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Use Auto Dithering when guiding.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DitherFailAbortsAutoGuide": {
            "Name": "DitherFailAbortsAutoGuide",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "If dithering fails then abort autoguide.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DitherFrames": {
            "Name": "DitherFrames",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "1",
            "IsDefaultCode": false,
            "Label": "Dither after this many frames.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DitherMaxIterations": {
            "Name": "DitherMaxIterations",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "10",
            "IsDefaultCode": false,
            "Label": "How many dithering attempts to undertake before giving up.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DitherNoGuiding": {
            "Name": "DitherNoGuiding",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Perform dithering even when not guiding.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DitherNoGuidingPulse": {
            "Name": "DitherNoGuidingPulse",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "500",
            "IsDefaultCode": false,
            "Label": "Pulse length in milliseconds used for non-guiding dither.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DitherPixels": {
            "Name": "DitherPixels",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "2.0",
            "IsDefaultCode": false,
            "Label": "How many pixels to move between subsequent exposures under auto dithering mode.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DitherSettle": {
            "Name": "DitherSettle",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "After dither is successful, wait for this many seconds before proceeding.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DitherThreshold": {
            "Name": "DitherThreshold",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "1.0",
            "IsDefaultCode": false,
            "Label": "Maximum distance (pixels) for guiding to be considered settled.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DitherTimeout": {
            "Name": "DitherTimeout",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "45",
            "IsDefaultCode": false,
            "Label": "Time limit (seconds) on dithering to settle down.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DitherWithOnePulse": {
            "Name": "DitherWithOnePulse",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Dithering amount is randomly generated, pulses are sent, but the resultant pixel dithering amount is not enforced, so only the one dither pulse is sent. This is quicker, and recommended as dither amount is random anyway. It is necessary when 2-D dither is required but guiding is only done in one axis.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "EastRAGuideEnabled": {
            "Name": "EastRAGuideEnabled",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Enable East autoguiding in the RA axis.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GPGDarkGuiding": {
            "Name": "GPGDarkGuiding",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GPGDarkGuidingInterval": {
            "Name": "GPGDarkGuidingInterval",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "1.0",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GPGEnabled": {
            "Name": "GPGEnabled",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GPGEstimatePeriod": {
            "Name": "GPGEstimatePeriod",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GPGMinMove": {
            "Name": "GPGMinMove",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "0.2",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GPGMinPeriodsForInference": {
            "Name": "GPGMinPeriodsForInference",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "4",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GPGMinPeriodsForPeriodEstimate": {
            "Name": "GPGMinPeriodsForPeriodEstimate",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "4",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GPGPKLengthScale": {
            "Name": "GPGPKLengthScale",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "10.0",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GPGPKSignalVariance": {
            "Name": "GPGPKSignalVariance",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "20.0",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GPGPeriod": {
            "Name": "GPGPeriod",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "480.0",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GPGPointsForApproximation": {
            "Name": "GPGPointsForApproximation",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "100",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GPGSE0KLengthScale": {
            "Name": "GPGSE0KLengthScale",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "700",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GPGSE0KSignalVariance": {
            "Name": "GPGSE0KSignalVariance",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "20.0",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GPGSE1KLengthScale": {
            "Name": "GPGSE1KLengthScale",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "25.0",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GPGSE1KSignalVariance": {
            "Name": "GPGSE1KSignalVariance",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "10.0",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GPGcWeight": {
            "Name": "GPGcWeight",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "0.6",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GPGpWeight": {
            "Name": "GPGpWeight",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "0.5",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GuideAlgorithm": {
            "Name": "GuideAlgorithm",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "5",
            "IsDefaultCode": false,
            "Label": "Which Algorithm to use track guide square (0 smart, 1 SEP, 2 fast, 3 threshold, 4 no threshold, 5 SEP multistar).",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GuideAutoSquareSizeEnabled": {
            "Name": "GuideAutoSquareSizeEnabled",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Automatically select the square size based on the selected star width.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GuideAutoStar": {
            "Name": "GuideAutoStar",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Automatically select calibration star and perform calibration.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GuideBinning": {
            "Name": "GuideBinning",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"2x2\"",
            "IsDefaultCode": false,
            "Label": "Guide binning.",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GuideCalibrationTimeout": {
            "Name": "GuideCalibrationTimeout",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "600",
            "IsDefaultCode": false,
            "Label": "When calibration starts, wait this many seconds before aborting.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GuideDarkFrame": {
            "Name": "GuideDarkFrame",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Take dark frame for autoguider images.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GuideDelay": {
            "Name": "GuideDelay",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "0.0",
            "IsDefaultCode": false,
            "Label": "Delay next exposure by this many seconds.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GuideExposure": {
            "Name": "GuideExposure",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "2.0",
            "IsDefaultCode": false,
            "Label": "Guider exposure duration in seconds.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GuideLostStarTimeout": {
            "Name": "GuideLostStarTimeout",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "60",
            "IsDefaultCode": false,
            "Label": "When star tracking is lost, wait this many seconds before aborting.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GuideMaxDeltaRMS": {
            "Name": "GuideMaxDeltaRMS",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "10.0",
            "IsDefaultCode": false,
            "Label": "Maximum delta RMS permitted while guiding before aborting.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GuideMaxHFR": {
            "Name": "GuideMaxHFR",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "4.5",
            "IsDefaultCode": false,
            "Label": "Maximum HFR permitted for SEP MultiStar guide star.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GuideSquareSize": {
            "Name": "GuideSquareSize",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"32\"",
            "IsDefaultCode": false,
            "Label": "Guide square size selection in pixels.",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GuideSubframe": {
            "Name": "GuideSubframe",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Subframe guide image around selected region",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GuiderAccuracyThreshold": {
            "Name": "GuiderAccuracyThreshold",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "2",
            "IsDefaultCode": false,
            "Label": "Accuracy threshold for the Guide Graphs.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GuiderType": {
            "Name": "GuiderType",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "Which guider process to utilize for guiding (0 Internal Guider, 1 PHD2, 2 lin_guider)",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LinGuiderHost": {
            "Name": "LinGuiderHost",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"localhost\"",
            "IsDefaultCode": false,
            "Label": "Host name of external lin_guider service",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LinGuiderPort": {
            "Name": "LinGuiderPort",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "5656",
            "IsDefaultCode": false,
            "Label": "Lin_guider Event Monitoring Port",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "MaxMultistarReferenceStars": {
            "Name": "MaxMultistarReferenceStars",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "10",
            "IsDefaultCode": false,
            "Label": "Maximum number of SEP MultiStar number of stars used as references.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "MinDetectionsSEPMultistar": {
            "Name": "MinDetectionsSEPMultistar",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "1",
            "IsDefaultCode": false,
            "Label": "Minimum number of stars detected for SEP MultiStar to initialize.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "NorthDECGuideEnabled": {
            "Name": "NorthDECGuideEnabled",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Enable North autoguiding in the DEC axis.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "PHD2Host": {
            "Name": "PHD2Host",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"localhost\"",
            "IsDefaultCode": false,
            "Label": "Host name of external PHD2 service",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "PHD2Port": {
            "Name": "PHD2Port",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "4400",
            "IsDefaultCode": false,
            "Label": "PHD2 Event Monitoring Port",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "RACorrDisplayedOnGuideGraph": {
            "Name": "RACorrDisplayedOnGuideGraph",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Display the RA Corrections Plot on the Guide Drift Graphics.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "RADisplayedOnGuideGraph": {
            "Name": "RADisplayedOnGuideGraph",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Display the RA Plot on the Guide Drift Graphics.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "RAGuideEnabled": {
            "Name": "RAGuideEnabled",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Enable autoguiding in the RA axis.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "RAIntegralGain": {
            "Name": "RAIntegralGain",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "0.0",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "RAMaximumPulseArcSec": {
            "Name": "RAMaximumPulseArcSec",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "25",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "RAMinimumPulseArcSec": {
            "Name": "RAMinimumPulseArcSec",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "0.2",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "RAProportionalGain": {
            "Name": "RAProportionalGain",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "133.33",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "RMSDisplayedOnGuideGraph": {
            "Name": "RMSDisplayedOnGuideGraph",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Display the RMS Error Plot on the Guide Drift Graphics.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SNRDisplayedOnGuideGraph": {
            "Name": "SNRDisplayedOnGuideGraph",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Display the SNR Plot on the Guide Drift Graphics.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SaveGuideLog": {
            "Name": "SaveGuideLog",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Automatically save internal guider user logs.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SouthDECGuideEnabled": {
            "Name": "SouthDECGuideEnabled",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Enable South autoguiding in the DEC axis.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TwoAxisEnabled": {
            "Name": "TwoAxisEnabled",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Use both axes to perform calibration.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "UseGuideHead": {
            "Name": "UseGuideHead",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Use the guider chip for guiding from cameras that have a dedicated guider chip.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "WestRAGuideEnabled": {
            "Name": "WestRAGuideEnabled",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Enable West autoguiding in the RA axis.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Guide",
        "Name": "Guide"
      },
      "HIPS": {
        "Options": {
          "HIPSBiLinearInterpolation": {
            "Name": "HIPSBiLinearInterpolation",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Use Bilinear interpolation when rendering HiPS images?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HIPSMemoryCache": {
            "Name": "HIPSMemoryCache",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "300",
            "IsDefaultCode": false,
            "Label": "RAM cache size in MB used to store cached HIPS images.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HIPSNetCache": {
            "Name": "HIPSNetCache",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "1000",
            "IsDefaultCode": false,
            "Label": "Hard disk cache size in MB used to store cached HIPS images.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HIPSOfflinePath": {
            "Name": "HIPSOfflinePath",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "HIPS offline full path.",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HIPSPanning": {
            "Name": "HIPSPanning",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Redraw HiPS while panning.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HIPSShowGrid": {
            "Name": "HIPSShowGrid",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Show HiPS grid on the sky map.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HIPSSource": {
            "Name": "HIPSSource",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"None\"",
            "IsDefaultCode": false,
            "Label": "HIPS source catalog title.",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HIPSUseOfflineSource": {
            "Name": "HIPSUseOfflineSource",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Use offline storage to load HiPS?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowHIPS": {
            "Name": "ShowHIPS",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Draw HiPS sources in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "HIPS",
        "Name": "HIPS"
      },
      "INDI Lite": {
        "Options": {
          "LastServer": {
            "Name": "LastServer",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "The address of last used server",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LastServerPort": {
            "Name": "LastServerPort",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "7624",
            "IsDefaultCode": false,
            "Label": "The port of last used server",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LastWebManagerPort": {
            "Name": "LastWebManagerPort",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "8624",
            "IsDefaultCode": false,
            "Label": "The port of last used Web Manager",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "INDI Lite",
        "Name": "INDI Lite"
      },
      "Location": {
        "Options": {
          "CityName": {
            "Name": "CityName",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"Greenwich\"",
            "IsDefaultCode": false,
            "Label": "City name of geographic location.",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "CountryName": {
            "Name": "CountryName",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"United Kingdom\"",
            "IsDefaultCode": false,
            "Label": "Country name of geographic location.",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DST": {
            "Name": "DST",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"--\"",
            "IsDefaultCode": false,
            "Label": "Two-letter code for daylight savings time rule used by geographic location.",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Elevation": {
            "Name": "Elevation",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "-10.0",
            "IsDefaultCode": false,
            "Label": "Elevation above sea level of geographic location, in meters.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Latitude": {
            "Name": "Latitude",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "51.468",
            "IsDefaultCode": false,
            "Label": "Geographic Latitude, in degrees.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Longitude": {
            "Name": "Longitude",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "0.0",
            "IsDefaultCode": false,
            "Label": "Geographic Longitude, in degrees.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ProvinceName": {
            "Name": "ProvinceName",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\" \"",
            "IsDefaultCode": false,
            "Label": "Province name of geographic location.",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TimeZone": {
            "Name": "TimeZone",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "0.0",
            "IsDefaultCode": false,
            "Label": "Time Zone offset of geographic location, in hours.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Location",
        "Name": "Location"
      },
      "Manager": {
        "Options": {
          "UseGraphicalCountsDisplay": {
            "Name": "UseGraphicalCountsDisplay",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Use the graphical version for capture/sequence/total counting using round progress bars.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Manager",
        "Name": "Manager"
      },
      "Mosaic": {
        "Options": {
          "MosaicTransparencyAuto": {
            "Name": "MosaicTransparencyAuto",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "MosaicTransparencyLevel": {
            "Name": "MosaicTransparencyLevel",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "50.0",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Mosaic",
        "Name": "Mosaic"
      },
      "Mount": {
        "Options": {
          "ConfirmBelowHorizon": {
            "Name": "ConfirmBelowHorizon",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Warn user before command mount to go to a target below horizon.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "EnableAltitudeLimits": {
            "Name": "EnableAltitudeLimits",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Enable mount altitude limits.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "EnableHaLimit": {
            "Name": "EnableHaLimit",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Enable mount hour angle limit.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ExecuteMeridianFlip": {
            "Name": "ExecuteMeridianFlip",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Flips the mount when reaching the meridian, if supported.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LeftRightReversed": {
            "Name": "LeftRightReversed",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Reverse the direction of right and left buttons in mount control.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "MaximumAltLimit": {
            "Name": "MaximumAltLimit",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "90.0",
            "IsDefaultCode": false,
            "Label": "Default maximum mount altitude limit.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "MaximumHaLimit": {
            "Name": "MaximumHaLimit",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "90.0",
            "IsDefaultCode": false,
            "Label": "Default maximum limit for the hour angle.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "MeridianFlipOffsetDegrees": {
            "Name": "MeridianFlipOffsetDegrees",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "5.0",
            "IsDefaultCode": false,
            "Label": "Default hour angle to perform meridian flip in degrees.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "MinimumAltLimit": {
            "Name": "MinimumAltLimit",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "0.0",
            "IsDefaultCode": false,
            "Label": "Default minimum mount altitude limit",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ParkEveryDay": {
            "Name": "ParkEveryDay",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Automatically start parking timer on startup.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ParkTime": {
            "Name": "ParkTime",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"3:00 AM\"",
            "IsDefaultCode": false,
            "Label": "Park mount at this time in 12 hour format.",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "UpDownReversed": {
            "Name": "UpDownReversed",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Reverse the direction of up and down buttons in mount control.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Mount",
        "Name": "Mount"
      },
      "Observatory": {
        "Options": {
          "DefaultObservatoryWeatherSource": {
            "Name": "DefaultObservatoryWeatherSource",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "Default observatory module weather source.",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "alertActionsActive": {
            "Name": "alertActionsActive",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Will be reacted upon alerts?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "observatoryStatusUseDome": {
            "Name": "observatoryStatusUseDome",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Dome status relevant for the Observatory status.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "observatoryStatusUseShutter": {
            "Name": "observatoryStatusUseShutter",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Shutter status relevant for the Observatory status.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "observatoryStatusUseWeather": {
            "Name": "observatoryStatusUseWeather",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Weather status relevant for the Observatory status.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "warningActionsActive": {
            "Name": "warningActionsActive",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Will be reacted upon warnings?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "weatherAlertCloseDome": {
            "Name": "weatherAlertCloseDome",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Shall the dome being closed when a weather alert occurs?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "weatherAlertCloseShutter": {
            "Name": "weatherAlertCloseShutter",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Shall the shutter being closed when a weather alert occurs?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "weatherAlertDelay": {
            "Name": "weatherAlertDelay",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "30",
            "IsDefaultCode": false,
            "Label": "Delay for reacting upon a weather alert.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "weatherAlertStopScheduler": {
            "Name": "weatherAlertStopScheduler",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Shall the shutter being closed when a weather alert occurs?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "weatherAutoScaleValues": {
            "Name": "weatherAutoScaleValues",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Scale the sensor graph value axis to the values range.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "weatherWarningCloseDome": {
            "Name": "weatherWarningCloseDome",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Shall the dome being closed when a weather warning occurs?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "weatherWarningCloseShutter": {
            "Name": "weatherWarningCloseShutter",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Shall the shutter being closed when a weather warning occurs?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "weatherWarningDelay": {
            "Name": "weatherWarningDelay",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "600",
            "IsDefaultCode": false,
            "Label": "Delay for reacting upon a weather warning.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "weatherWarningStopScheduler": {
            "Name": "weatherWarningStopScheduler",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Shall the shutter being closed when a weather alert occurs?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Observatory",
        "Name": "Observatory"
      },
      "ObservingList": {
        "Options": {
          "ObsListCoverage": {
            "Name": "ObsListCoverage",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "40.00",
            "IsDefaultCode": false,
            "Label": "The object must obey the minimum and maximum altitudes at least this much percentage of the indicated time range.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ObsListDemoteHole": {
            "Name": "ObsListDemoteHole",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "While sorting by percentage altitude in the observing list, demote objects present in the Dobsonian hole",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ObsListHoleSize": {
            "Name": "ObsListHoleSize",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "15.00",
            "IsDefaultCode": false,
            "Label": "This is the angular distance from the zenith, in degrees, below which you can easily point your telescope.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ObsListPreferDSS": {
            "Name": "ObsListPreferDSS",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Prefer Digitized Sky Survey imagery in the observing list",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ObsListPreferSDSS": {
            "Name": "ObsListPreferSDSS",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Prefer Sloan Digital Sky Survey imagery in the observing list",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ObsListSymbol": {
            "Name": "ObsListSymbol",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Use symbols to label observing list objects",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ObsListText": {
            "Name": "ObsListText",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Use text to label observing list objects",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "ObservingList",
        "Name": "ObservingList"
      },
      "Satellites": {
        "Options": {
          "DrawSatellitesLikeStars": {
            "Name": "DrawSatellitesLikeStars",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "If selected, satellites will be draw like stars, otherwise, draw satellites as small colored square.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SelectedSatellites": {
            "Name": "SelectedSatellites",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (listOf str))",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "Selected satellites.",
            "Type": "StringList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowSatellites": {
            "Name": "ShowSatellites",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Draw satellites in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowSatellitesLabels": {
            "Name": "ShowSatellitesLabels",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Draw satellite labels?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowVisibleSatellites": {
            "Name": "ShowVisibleSatellites",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Draw only visible satellites in the sky map",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Satellites",
        "Name": "Satellites"
      },
      "Scheduler": {
        "Options": {
          "AlignCheckFrequency": {
            "Name": "AlignCheckFrequency",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "When calculating position after captures, compute it every Nth capture. Set to 0 to disable.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AlignCheckThreshold": {
            "Name": "AlignCheckThreshold",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "30.0",
            "IsDefaultCode": false,
            "Label": "If captured position exceeds target position by more this many arcminutes, abort capture and reschedule the pipeline.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "CameraHeight": {
            "Name": "CameraHeight",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "Camera Height in pixels.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "CameraPixelHeight": {
            "Name": "CameraPixelHeight",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "0.0",
            "IsDefaultCode": false,
            "Label": "Camera pixel size height in micrometers.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "CameraPixelWidth": {
            "Name": "CameraPixelWidth",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "0.0",
            "IsDefaultCode": false,
            "Label": "Camera pixel size width in micrometers.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "CameraRotation": {
            "Name": "CameraRotation",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "0.0",
            "IsDefaultCode": false,
            "Label": "Position angle of the camera with respect to north.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "CameraWidth": {
            "Name": "CameraWidth",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "Camera Width in pixels.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DawnOffset": {
            "Name": "DawnOffset",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "0.0",
            "IsDefaultCode": false,
            "Label": "Offset astronomical dawn by this many hours to relax twilight restriction when using narrowband filters.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DuskOffset": {
            "Name": "DuskOffset",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "0.0",
            "IsDefaultCode": false,
            "Label": "Offset astronomical dusk by this many hours to relax twilight restriction when using narrowband filters.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ErrorHandlingStrategy": {
            "Name": "ErrorHandlingStrategy",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "1",
            "IsDefaultCode": false,
            "Label": "Strategy how to react, when a job aborts or steps into an error.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ErrorHandlingStrategyDelay": {
            "Name": "ErrorHandlingStrategyDelay",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "Delay in minutes how long the scheduler should pause before restarting an aborted job or a job that ran into an error.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ForceAlignmentBeforeJob": {
            "Name": "ForceAlignmentBeforeJob",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Force alignment before starting or restarting each job.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GuideCalibrationBacklash": {
            "Name": "GuideCalibrationBacklash",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Remove DEC backlash when calibrating guider.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LeadTime": {
            "Name": "LeadTime",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "5.0",
            "IsDefaultCode": false,
            "Label": "Minimum time between jobs in minutes.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "PreDawnTime": {
            "Name": "PreDawnTime",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "30.0",
            "IsDefaultCode": false,
            "Label": "Do not permit jobs to be scheduled or executed past this many minutes before dawn.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "PreemptiveShutdown": {
            "Name": "PreemptiveShutdown",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Perform pre-emptive shutdown if no jobs are due for a number of hours.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "PreemptiveShutdownTime": {
            "Name": "PreemptiveShutdownTime",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "2.0",
            "IsDefaultCode": false,
            "Label": "Maximum number of hours before the next job is due to trigger a pre-emptive shutdown.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "RealignAfterCalibrationFailure": {
            "Name": "RealignAfterCalibrationFailure",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "If guiding calibration fails, run alignment process again before proceeding to recalibration.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "RememberJobProgress": {
            "Name": "RememberJobProgress",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "When processing a scheduled job, resume the sequence starting from the last image present in storage.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "RescheduleErrors": {
            "Name": "RescheduleErrors",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Re-schedule jobs that ran into errors.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ResetGuideCalibration": {
            "Name": "ResetGuideCalibration",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Always Reset guiding calibration before starting each job.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ResetMountModelBeforeJob": {
            "Name": "ResetMountModelBeforeJob",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Reset mount model before starting each job.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ResetMountModelOnAlignFail": {
            "Name": "ResetMountModelOnAlignFail",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Reset mount model in case of alignment failure.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ReuseGuideCalibration": {
            "Name": "ReuseGuideCalibration",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Guider may re-use guiding calibration if one is available.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ReverseDecOnPierSideChange": {
            "Name": "ReverseDecOnPierSideChange",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Reverse DEC on pier-side change when reusing calibration.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SchedulerAlgorithm": {
            "Name": "SchedulerAlgorithm",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "Scheduler algorithm",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SchedulerAlignStep": {
            "Name": "SchedulerAlignStep",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Default scheduler checkbox for aligning on job startup.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SchedulerAltitude": {
            "Name": "SchedulerAltitude",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Default scheduler checkbox for job altitude constraints.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SchedulerAltitudeValue": {
            "Name": "SchedulerAltitudeValue",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "0.0",
            "IsDefaultCode": false,
            "Label": "Default scheduler job altitude constraint.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SchedulerCloseDustCover": {
            "Name": "SchedulerCloseDustCover",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Default scheduler checkbox for closing dust cover on shutdown.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SchedulerFocusStep": {
            "Name": "SchedulerFocusStep",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Default scheduler checkbox for running autofocus on job startup.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SchedulerGuideStep": {
            "Name": "SchedulerGuideStep",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Default scheduler checkbox for starting guiding on job startup.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SchedulerHorizon": {
            "Name": "SchedulerHorizon",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Default scheduler checkbox for job artificial horizon constraints.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SchedulerLogging": {
            "Name": "SchedulerLogging",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SchedulerMoonSeparation": {
            "Name": "SchedulerMoonSeparation",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Default scheduler checkbox for job moon separation constraints.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SchedulerMoonSeparationValue": {
            "Name": "SchedulerMoonSeparationValue",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "0.0",
            "IsDefaultCode": false,
            "Label": "Default scheduler job moon separation constraint.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SchedulerOpenDustCover": {
            "Name": "SchedulerOpenDustCover",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Default scheduler checkbox for opening dust cover on startup.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SchedulerParkDome": {
            "Name": "SchedulerParkDome",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Default scheduler checkbox for parking dome on shutdown.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SchedulerParkMount": {
            "Name": "SchedulerParkMount",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Default scheduler checkbox for parking mount on shutdown.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SchedulerTrackStep": {
            "Name": "SchedulerTrackStep",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Default scheduler checkbox for starting mount tracking on job startup.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SchedulerTwilight": {
            "Name": "SchedulerTwilight",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Default scheduler checkbox for job twilight constraints.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SchedulerUnparkDome": {
            "Name": "SchedulerUnparkDome",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Default scheduler checkbox for unparking dome on startup.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SchedulerUnparkMount": {
            "Name": "SchedulerUnparkMount",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Default scheduler checkbox for unparking mount on startup.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SchedulerWarmCCD": {
            "Name": "SchedulerWarmCCD",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Default scheduler checkbox for warming the CCD on shutdown.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SchedulerWeather": {
            "Name": "SchedulerWeather",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Default scheduler checkbox for job weather constraints.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SerializedCalibration": {
            "Name": "SerializedCalibration",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "Last Calibration serialized.",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SettingAltitudeCutoff": {
            "Name": "SettingAltitudeCutoff",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "3.0",
            "IsDefaultCode": false,
            "Label": "Do not permit jobs to be scheduled less than this many degrees before the altitude restriction. Actual execution proceeds until the altitude limit.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShutdownScriptTerminatesINDI": {
            "Name": "ShutdownScriptTerminatesINDI",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Whether shutdown script, if exists, terminates INDI server in the process.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "StopEkosAfterShutdown": {
            "Name": "StopEkosAfterShutdown",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "After shutdown procedure is successfully executed, shutdown INDI and Ekos.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TelescopeFocalLength": {
            "Name": "TelescopeFocalLength",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "0.0",
            "IsDefaultCode": false,
            "Label": "Telescope focal length in millimeters.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Scheduler",
        "Name": "Scheduler"
      },
      "StellarSolver": {
        "Options": {
          "AstrometryIndexFolderList": {
            "Name": "AstrometryIndexFolderList",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (listOf str))",
            "DefaultValue": "\"KSUtils::getAstrometryDefaultIndexFolderPaths()\"",
            "IsDefaultCode": true,
            "Label": "List of index folder paths.",
            "Type": "StringList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AstrometryLogFilepath": {
            "Name": "AstrometryLogFilepath",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "''KSUtils::getDefaultPath(\"AstrometryLogFilepath\")''",
            "IsDefaultCode": true,
            "Label": "Path of the log file to save astrometry logging to.",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AstrometryLogToFile": {
            "Name": "AstrometryLogToFile",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Whether to log to a file instead.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FocusOptionsProfile": {
            "Name": "FocusOptionsProfile",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "Options Profile for Sextraction when Focusing.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FocusSextractorType": {
            "Name": "FocusSextractorType",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "Internal or External Sextractor for Focusing.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GuideOptionsProfile": {
            "Name": "GuideOptionsProfile",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "Options Profile for Sextraction when Guiding.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GuideSextractorType": {
            "Name": "GuideSextractorType",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "Internal or External Sextractor for Guiding.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HFROptionsProfile": {
            "Name": "HFROptionsProfile",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "Options Profile for Sextraction to compute subs HFR",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HFRSextractorType": {
            "Name": "HFRSextractorType",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "Internal or External Sextractor to compute subs HFR.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LoggerLevel": {
            "Name": "LoggerLevel",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "Level of verbosity in the log.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SolveOptionsProfile": {
            "Name": "SolveOptionsProfile",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "3",
            "IsDefaultCode": false,
            "Label": "Options Profile for Solving.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SolveSextractorType": {
            "Name": "SolveSextractorType",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "Internal, External, or BuiltIn Sextractor for Solving.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SolverMode": {
            "Name": "SolverMode",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "Local (0) or Remote (1) solver.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SolverType": {
            "Name": "SolverType",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "Local solving method. 0 for Internal Solver. 1 for Local Astrometry. 2 for Local ASTAP. 3 for Online Astrometry.",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "StellarSolver",
        "Name": "StellarSolver"
      },
      "Terrain": {
        "Options": {
          "ShowTerrain": {
            "Name": "ShowTerrain",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Draw terrain",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TerrainDownsampling": {
            "Name": "TerrainDownsampling",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "4",
            "IsDefaultCode": false,
            "Label": "Terrain Downsampling",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TerrainPanning": {
            "Name": "TerrainPanning",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Terrain While panning.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TerrainSkipSpeedup": {
            "Name": "TerrainSkipSpeedup",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Terrain Skip Speedup",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TerrainSmoothPixels": {
            "Name": "TerrainSmoothPixels",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Terrain Smooth Pixels.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TerrainSource": {
            "Name": "TerrainSource",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"None\"",
            "IsDefaultCode": false,
            "Label": "Terrain Filename.",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TerrainSourceCorrectAlt": {
            "Name": "TerrainSourceCorrectAlt",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "Terrain Altitude Correction.",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TerrainSourceCorrectAz": {
            "Name": "TerrainSourceCorrectAz",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "Terrain Azimuth Correction.",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TerrainTransparencySpeedup": {
            "Name": "TerrainTransparencySpeedup",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Terrain Transparency Speedup.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Terrain",
        "Name": "Terrain"
      },
      "View": {
        "Options": {
          "AsteroidLabelDensity": {
            "Name": "AsteroidLabelDensity",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "4.0",
            "IsDefaultCode": false,
            "Label": "Label density for asteroid names",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AutoSelectGrid": {
            "Name": "AutoSelectGrid",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Draw grids according to active coordinate system?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "BoxBGMode": {
            "Name": "BoxBGMode",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "1",
            "IsDefaultCode": false,
            "Label": "InfoBoxes Background fill mode",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DeepSkyLabelDensity": {
            "Name": "DeepSkyLabelDensity",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "5.0",
            "IsDefaultCode": false,
            "Label": "Relative density for deep-sky object name labels and/or magnitudes",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DeepSkyLongLabels": {
            "Name": "DeepSkyLongLabels",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Show long names in deep-sky object name labels?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DefaultCursor": {
            "Name": "DefaultCursor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "1",
            "IsDefaultCode": false,
            "Label": "Select default Skymap cursor?",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FOVNames": {
            "Name": "FOVNames",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (listOf str))",
            "DefaultValue": "\"Telrad\"",
            "IsDefaultCode": false,
            "Label": "Name of selected FOV indicators",
            "Type": "StringList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FadePlanetTrails": {
            "Name": "FadePlanetTrails",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Fade planet trails to background color?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FillMilkyWay": {
            "Name": "FillMilkyWay",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Fill Milky Way contour? (false means use outline only)",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FocusDec": {
            "Name": "FocusDec",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "45.0",
            "IsDefaultCode": false,
            "Label": "Declination of focus position",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FocusObject": {
            "Name": "FocusObject",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"nothing\"",
            "IsDefaultCode": false,
            "Label": "Name of focused object",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FocusRA": {
            "Name": "FocusRA",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "180.0",
            "IsDefaultCode": false,
            "Label": "Right Ascension of focus position",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HideCBounds": {
            "Name": "HideCBounds",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Hide constellation boundaries while moving?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HideCLines": {
            "Name": "HideCLines",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Hide constellation lines while moving?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HideCNames": {
            "Name": "HideCNames",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Hide constellation names while moving?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HideGrids": {
            "Name": "HideGrids",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Hide coordinate grids while moving?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HideLabels": {
            "Name": "HideLabels",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Hide object name labels while moving?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HideMilkyWay": {
            "Name": "HideMilkyWay",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Hide Milky Way contour while moving?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HideOnSlew": {
            "Name": "HideOnSlew",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Hide objects while moving?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HideOther": {
            "Name": "HideOther",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Hide extra objects while moving?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HidePlanets": {
            "Name": "HidePlanets",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Hide solar system objects while moving?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HideStars": {
            "Name": "HideStars",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Hide faint stars while moving?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "IsTracking": {
            "Name": "IsTracking",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Is tracking engaged?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LabelFontScaling": {
            "Name": "LabelFontScaling",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "Label font size",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LeftClickSelectsObject": {
            "Name": "LeftClickSelectsObject",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Select objects on left click?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "MagLimitAsteroid": {
            "Name": "MagLimitAsteroid",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "15.0",
            "IsDefaultCode": false,
            "Label": "Faint limit for asteroids",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "MagLimitAsteroidDownload": {
            "Name": "MagLimitAsteroidDownload",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "12.000",
            "IsDefaultCode": false,
            "Label": "Maximum magnitude for asteroids to be downloaded from JPL.",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "MagLimitDrawDeepSky": {
            "Name": "MagLimitDrawDeepSky",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "36.0",
            "IsDefaultCode": false,
            "Label": "Faint limit for deep-sky objects",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "MagLimitDrawDeepSkyZoomOut": {
            "Name": "MagLimitDrawDeepSkyZoomOut",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "1.0",
            "IsDefaultCode": false,
            "Label": "Faint limit for deep-sky objects when zoomed out",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "MagLimitHideStar": {
            "Name": "MagLimitHideStar",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "5.0",
            "IsDefaultCode": false,
            "Label": "Faint limit for stars when slewing",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "MagnitudeLimitAlertSupernovae": {
            "Name": "MagnitudeLimitAlertSupernovae",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "13.0",
            "IsDefaultCode": false,
            "Label": "Set magnitude limit for supernovae to be alerted",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "MagnitudeLimitShowSupernovae": {
            "Name": "MagnitudeLimitShowSupernovae",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "16.0",
            "IsDefaultCode": false,
            "Label": "Set magnitude limit for supernovae to be shown on the skymap",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "MaxRadCometName": {
            "Name": "MaxRadCometName",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "1.0",
            "IsDefaultCode": false,
            "Label": "Maximum distance from Sun for labeling comets, in AU",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "OrbitalElementsAutoUpdate": {
            "Name": "OrbitalElementsAutoUpdate",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Update orbital elements for comets and asteroids from online sources on startup.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Projection": {
            "Name": "Projection",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "Mapping projection algorithm",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "RunClock": {
            "Name": "RunClock",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Run clock",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowAsteroidNames": {
            "Name": "ShowAsteroidNames",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Label asteroid names in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowAsteroids": {
            "Name": "ShowAsteroids",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Draw asteroids in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowCBounds": {
            "Name": "ShowCBounds",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Draw constellation boundaries in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowCLines": {
            "Name": "ShowCLines",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Draw constellation lines in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowCNames": {
            "Name": "ShowCNames",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Draw constellation names in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowCometComas": {
            "Name": "ShowCometComas",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Draw comet comas in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowCometNames": {
            "Name": "ShowCometNames",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Label comet names in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowComets": {
            "Name": "ShowComets",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Draw comets in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowConstellationArt": {
            "Name": "ShowConstellationArt",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Draw constellation art in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowDeepSky": {
            "Name": "ShowDeepSky",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Draw \"deep sky\" objects in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowDeepSkyMagnitudes": {
            "Name": "ShowDeepSkyMagnitudes",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Label deep-sky object magnitudes in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowDeepSkyNames": {
            "Name": "ShowDeepSkyNames",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Label deep-sky objects in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowEcliptic": {
            "Name": "ShowEcliptic",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Draw ecliptic line in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowEquator": {
            "Name": "ShowEquator",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Draw equator line in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowEquatorialGrid": {
            "Name": "ShowEquatorialGrid",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Draw equatorial coordinate grid in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowFlags": {
            "Name": "ShowFlags",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Draw flags in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowGround": {
            "Name": "ShowGround",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Draw opaque ground in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowHighlightedCBound": {
            "Name": "ShowHighlightedCBound",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Highlight the central constellation boundary in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowHorizon": {
            "Name": "ShowHorizon",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Draw horizon line in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowHorizontalGrid": {
            "Name": "ShowHorizontalGrid",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Draw horizontal coordinate grid in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowInlineImages": {
            "Name": "ShowInlineImages",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Draw inline images for some objects on the sky?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowJupiter": {
            "Name": "ShowJupiter",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Draw Jupiter in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowLocalMeridian": {
            "Name": "ShowLocalMeridian",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Draw local meridian line in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowMars": {
            "Name": "ShowMars",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Draw Mars in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowMercury": {
            "Name": "ShowMercury",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Draw Mercury in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowMilkyWay": {
            "Name": "ShowMilkyWay",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Draw Milky Way contour in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowMoon": {
            "Name": "ShowMoon",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Draw Moon in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowMosaicPanel": {
            "Name": "ShowMosaicPanel",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Draw Mosaic Panel in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowNeptune": {
            "Name": "ShowNeptune",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Draw Neptune in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowOther": {
            "Name": "ShowOther",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Draw extra deep-sky objects in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowPlanetImages": {
            "Name": "ShowPlanetImages",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Draw planets as images in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowPlanetNames": {
            "Name": "ShowPlanetNames",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Label planet names in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowPluto": {
            "Name": "ShowPluto",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Draw Pluto in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowSaturn": {
            "Name": "ShowSaturn",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Draw Saturn in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowSolarSystem": {
            "Name": "ShowSolarSystem",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Meta-option for all planets in the sky map.",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowStarMagnitudes": {
            "Name": "ShowStarMagnitudes",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Label star magnitudes in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowStarNames": {
            "Name": "ShowStarNames",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Label star names in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowStars": {
            "Name": "ShowStars",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Draw stars in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowSun": {
            "Name": "ShowSun",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Draw Sun in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowSupernovaAlerts": {
            "Name": "ShowSupernovaAlerts",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Show supernova alerts?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowSupernovaNames": {
            "Name": "ShowSupernovaNames",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Label Supernova Names in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowSupernovae": {
            "Name": "ShowSupernovae",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Draw supernovae in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowUnknownMagObjects": {
            "Name": "ShowUnknownMagObjects",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Show deep-sky objects of unknown magnitude",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowUranus": {
            "Name": "ShowUranus",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Draw Uranus in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowVenus": {
            "Name": "ShowVenus",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Draw Venus in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SkyCulture": {
            "Name": "SkyCulture",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"Western\"",
            "IsDefaultCode": false,
            "Label": "Sky culture",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SlewTimeScale": {
            "Name": "SlewTimeScale",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "60.0",
            "IsDefaultCode": false,
            "Label": "Minimum timescale for forced-slewing mode",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "StarDensity": {
            "Name": "StarDensity",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "5",
            "IsDefaultCode": false,
            "Label": "Density of stars in the field of view",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "StarLabelDensity": {
            "Name": "StarLabelDensity",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "2.0",
            "IsDefaultCode": false,
            "Label": "Relative density for star name labels and/or magnitudes",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "UseAbbrevConstellNames": {
            "Name": "UseAbbrevConstellNames",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Use abbreviated constellation names?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "UseAltAz": {
            "Name": "UseAltAz",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Use horizontal coordinate system?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "UseAnimatedSlewing": {
            "Name": "UseAnimatedSlewing",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Use animated slewing effects when changing focus position?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "UseAntialias": {
            "Name": "UseAntialias",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Use antialiasing when drawing the screen?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "UseAutoLabel": {
            "Name": "UseAutoLabel",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Automatically label focused object?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "UseAutoTrail": {
            "Name": "UseAutoTrail",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Automatically add trail to centered solar system body?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "UseGL": {
            "Name": "UseGL",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Switch to OpenGL backend",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "UseHoverLabel": {
            "Name": "UseHoverLabel",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Add temporary label on mouse hover?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "UseLatinConstellNames": {
            "Name": "UseLatinConstellNames",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Use Latin constellation names?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "UseLocalConstellNames": {
            "Name": "UseLocalConstellNames",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Use localized constellation names?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "UseRefraction": {
            "Name": "UseRefraction",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Correct positions for atmospheric refraction?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "UseRelativistic": {
            "Name": "UseRelativistic",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Apply relativistic corrections due to the bending of light in sun's gravitational field",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ZoomFactor": {
            "Name": "ZoomFactor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "250.0",
            "IsDefaultCode": false,
            "Label": "Zoom Factor, in pixels per radian",
            "Type": "Double",
            "Min": "250.",
            "HasMin": true,
            "Max": "5000000.",
            "HasMax": true,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ZoomScrollFactor": {
            "Name": "ZoomScrollFactor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "0.2",
            "IsDefaultCode": false,
            "Label": "Zoom scroll sensitivity.",
            "Type": "Double",
            "Min": "0.01",
            "HasMin": true,
            "Max": "1.0",
            "HasMax": true,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "View",
        "Name": "View"
      },
      "WISettings": {
        "Options": {
          "BinocularsAperture": {
            "Name": "BinocularsAperture",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "40.0",
            "IsDefaultCode": false,
            "Label": "Aperture of available binocular",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "BinocularsCheck": {
            "Name": "BinocularsCheck",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Availability of binoculars",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "BortleClass": {
            "Name": "BortleClass",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "4",
            "IsDefaultCode": false,
            "Label": "Bortle dark-sky rating",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ScopeListIndex": {
            "Name": "ScopeListIndex",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "Index of selected scope from list of scopes",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TelescopeCheck": {
            "Name": "TelescopeCheck",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Availability of telescope",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "WISettings",
        "Name": "WISettings"
      },
      "Xplanet": {
        "Options": {
          "XplanetAnimationDelay": {
            "Name": "XplanetAnimationDelay",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "100",
            "IsDefaultCode": false,
            "Label": "XPlanet animation delay",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "XplanetArcFile": {
            "Name": "XplanetArcFile",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Arc file",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "XplanetArcFilePath": {
            "Name": "XplanetArcFilePath",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "Path to arc file",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "XplanetBackground": {
            "Name": "XplanetBackground",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Use background",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "XplanetBackgroundColor": {
            "Name": "XplanetBackgroundColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Use background color",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "XplanetBackgroundColorValue": {
            "Name": "XplanetBackgroundColorValue",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#000\"",
            "IsDefaultCode": false,
            "Label": "Background color",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "XplanetBackgroundImage": {
            "Name": "XplanetBackgroundImage",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Use background image",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "XplanetBackgroundImagePath": {
            "Name": "XplanetBackgroundImagePath",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "Background image path",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "XplanetColor": {
            "Name": "XplanetColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"#F00\"",
            "IsDefaultCode": false,
            "Label": "Label color",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "XplanetConfigFile": {
            "Name": "XplanetConfigFile",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Config file",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "XplanetConfigFilePath": {
            "Name": "XplanetConfigFilePath",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "Path to config file",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "XplanetDateFormat": {
            "Name": "XplanetDateFormat",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"%c %Z\"",
            "IsDefaultCode": false,
            "Label": "Date format",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "XplanetFOV": {
            "Name": "XplanetFOV",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Use KStars's FOV",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "XplanetFontSize": {
            "Name": "XplanetFontSize",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"12\"",
            "IsDefaultCode": false,
            "Label": "Font Size",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "XplanetGlare": {
            "Name": "XplanetGlare",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"28\"",
            "IsDefaultCode": false,
            "Label": "Sun Glare",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "XplanetHeight": {
            "Name": "XplanetHeight",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "480",
            "IsDefaultCode": false,
            "Label": "Height of xplanet window",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "XplanetLabel": {
            "Name": "XplanetLabel",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Show label",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "XplanetLabelBL": {
            "Name": "XplanetLabelBL",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Bottom left",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "XplanetLabelBR": {
            "Name": "XplanetLabelBR",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Bottom right",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "XplanetLabelGMT": {
            "Name": "XplanetLabelGMT",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Show GMT label",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "XplanetLabelLocalTime": {
            "Name": "XplanetLabelLocalTime",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Show GMT label",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "XplanetLabelString": {
            "Name": "XplanetLabelString",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "Planet string",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "XplanetLabelTL": {
            "Name": "XplanetLabelTL",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Top left",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "XplanetLabelTR": {
            "Name": "XplanetLabelTR",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Top right",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "XplanetLatLong": {
            "Name": "XplanetLatLong",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Latitude-Longitude",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "XplanetLatitude": {
            "Name": "XplanetLatitude",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"0\"",
            "IsDefaultCode": false,
            "Label": "Latitude in degrees",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "XplanetLongitude": {
            "Name": "XplanetLongitude",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"0\"",
            "IsDefaultCode": false,
            "Label": "Longitude in degrees",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "XplanetMagnitude": {
            "Name": "XplanetMagnitude",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"10\"",
            "IsDefaultCode": false,
            "Label": "Base magnitude",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "XplanetMarkerBounds": {
            "Name": "XplanetMarkerBounds",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Write marker bounds",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "XplanetMarkerBoundsPath": {
            "Name": "XplanetMarkerBoundsPath",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "Marker bounds file path",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "XplanetMarkerFile": {
            "Name": "XplanetMarkerFile",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Use marker file",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "XplanetMarkerFilePath": {
            "Name": "XplanetMarkerFilePath",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "Marker file path",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "XplanetPath": {
            "Name": "XplanetPath",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "''KSUtils::getDefaultPath(\"XplanetPath\")''",
            "IsDefaultCode": true,
            "Label": "Path to xplanet binary",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "XplanetProjection": {
            "Name": "XplanetProjection",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "Projection",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "XplanetQuality": {
            "Name": "XplanetQuality",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"80\"",
            "IsDefaultCode": false,
            "Label": "Output file quality",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "XplanetRandom": {
            "Name": "XplanetRandom",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Random latitude and longitude",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "XplanetStarmap": {
            "Name": "XplanetStarmap",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Star map",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "XplanetStarmapPath": {
            "Name": "XplanetStarmapPath",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "Star map file path",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "XplanetTimeout": {
            "Name": "XplanetTimeout",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "1000",
            "IsDefaultCode": false,
            "Label": "XPlanet timeout",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "XplanetUseFIFO": {
            "Name": "XplanetUseFIFO",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Use FIFO file",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "XplanetWidth": {
            "Name": "XplanetWidth",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "640",
            "IsDefaultCode": false,
            "Label": "Width of xplanet window",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "xplanetIsInternal": {
            "Name": "xplanetIsInternal",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Internal or External XPlanet?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Xplanet",
        "Name": "Xplanet"
      },
      "indi": {
        "Options": {
          "INDIAOLogging": {
            "Name": "INDIAOLogging",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Enable INDI Adaptive Optics logging",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "INDIAuxiliaryLogging": {
            "Name": "INDIAuxiliaryLogging",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Enable INDI Auxiliary logging",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "INDICCDLogging": {
            "Name": "INDICCDLogging",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Enable INDI CCD logging",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "INDIDetectorLogging": {
            "Name": "INDIDetectorLogging",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Enable INDI Detector logging",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "INDIDomeLogging": {
            "Name": "INDIDomeLogging",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Enable INDI Dome logging",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "INDIFilterWheelLogging": {
            "Name": "INDIFilterWheelLogging",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Enable INDI Filter Wheel logging",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "INDIFocuserLogging": {
            "Name": "INDIFocuserLogging",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Enable INDI Focuser logging",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "INDIGPSLogging": {
            "Name": "INDIGPSLogging",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Enable INDI GPS logging",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "INDIHubAgent": {
            "Name": "INDIHubAgent",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "''KSUtils::getDefaultPath(\"INDIHubAgent\")''",
            "IsDefaultCode": true,
            "Label": "PATH to indihub-agent binary",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "INDIMountLogging": {
            "Name": "INDIMountLogging",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Enable INDI Mount logging",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "INDIRotatorLogging": {
            "Name": "INDIRotatorLogging",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Enable INDI Rotator logging",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "INDIWeatherLogging": {
            "Name": "INDIWeatherLogging",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Enable INDI Weather logging",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "INDIWindowHeight": {
            "Name": "INDIWindowHeight",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "600",
            "IsDefaultCode": false,
            "Label": "INDI window height",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "INDIWindowWidth": {
            "Name": "INDIWindowWidth",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "800",
            "IsDefaultCode": false,
            "Label": "INDI window width",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SaveFocusImages": {
            "Name": "SaveFocusImages",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Save autofocus images on disk?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "fitsDir": {
            "Name": "fitsDir",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "''KSUtils::getDefaultPath(\"fitsDir\")''",
            "IsDefaultCode": true,
            "Label": "FITS Default directory",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "independentWindowINDI": {
            "Name": "independentWindowINDI",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Make INDI Control Panel window independent of KStars main window",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "indiDriversAreInternal": {
            "Name": "indiDriversAreInternal",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Internal or External Astrometry Solver?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "indiDriversDir": {
            "Name": "indiDriversDir",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "''KSUtils::getDefaultPath(\"indiDriversDir\")''",
            "IsDefaultCode": true,
            "Label": "PATH to indi drivers directory",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "indiServer": {
            "Name": "indiServer",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "''KSUtils::getDefaultPath(\"indiServer\")''",
            "IsDefaultCode": true,
            "Label": "PATH to indiserver binary",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "indiServerIsInternal": {
            "Name": "indiServerIsInternal",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Internal or External INDI Server?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "messageNotificationINDI": {
            "Name": "messageNotificationINDI",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "INDI message notifications",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "serverPortEnd": {
            "Name": "serverPortEnd",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "8623",
            "IsDefaultCode": false,
            "Label": "INDI Server Final Port",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "serverPortStart": {
            "Name": "serverPortStart",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "7624",
            "IsDefaultCode": false,
            "Label": "INDI Server Start Port",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "serverTransferBufferSize": {
            "Name": "serverTransferBufferSize",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "1024",
            "IsDefaultCode": false,
            "Label": "INDI Server Transfer Buffer",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "showINDIMessages": {
            "Name": "showINDIMessages",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Display INDI messages in the statusbar?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "showTargetCrosshair": {
            "Name": "showTargetCrosshair",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Draw crosshairs at telescope position in the sky map?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "streamWindowHeight": {
            "Name": "streamWindowHeight",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "240",
            "IsDefaultCode": false,
            "Label": "Video streaming window height",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "streamWindowWidth": {
            "Name": "streamWindowWidth",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "320",
            "IsDefaultCode": false,
            "Label": "Video streaming window width",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "useGPSSource": {
            "Name": "useGPSSource",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Use GPS time and location for synchronization?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "useGeographicUpdate": {
            "Name": "useGeographicUpdate",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Automatically updates geographic location?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "useKStarsSource": {
            "Name": "useKStarsSource",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Use KStars time and location for synchronization?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "useMountSource": {
            "Name": "useMountSource",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Use mount time and location for synchronization?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "useTimeUpdate": {
            "Name": "useTimeUpdate",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Automatically updates time and date?",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "indi",
        "Name": "indi"
      }
    }
  },
  "kwin": {
    "RCName": "kwinrc",
    "Name": "kwin",
    "Groups": {
      "$(EffectGroup)": {
        "Options": {
          "TabBox": {
            "Name": "",
            "Key": "TabBox",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TabBoxAlternative": {
            "Name": "",
            "Key": "TabBoxAlternative",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "$(EffectGroup)",
        "Name": "$(EffectGroup)"
      },
      "$(TabBoxGroup)": {
        "Options": {
          "ActivitiesMode": {
            "Name": "",
            "Key": "ActivitiesMode",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"TabBoxConfig::defaultActivitiesMode()\"",
            "IsDefaultCode": true,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ApplicationsMode": {
            "Name": "",
            "Key": "ApplicationsMode",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"TabBoxConfig::defaultApplicationsMode()\"",
            "IsDefaultCode": true,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DesktopMode": {
            "Name": "",
            "Key": "DesktopMode",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"TabBoxConfig::defaultDesktopMode()\"",
            "IsDefaultCode": true,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HighlightWindows": {
            "Name": "",
            "Key": "HighlightWindows",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "\"TabBoxConfig::defaultHighlightWindow()\"",
            "IsDefaultCode": true,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LayoutName": {
            "Name": "",
            "Key": "LayoutName",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"TabBoxConfig::defaultLayoutName()\"",
            "IsDefaultCode": true,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "MinimizedMode": {
            "Name": "",
            "Key": "MinimizedMode",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"TabBoxConfig::defaultMinimizedMode()\"",
            "IsDefaultCode": true,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "MultiScreenMode": {
            "Name": "",
            "Key": "MultiScreenMode",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"TabBoxConfig::defaultMultiScreenMode()\"",
            "IsDefaultCode": true,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "OrderMinimizedMode": {
            "Name": "",
            "Key": "OrderMinimizedMode",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"TabBoxConfig::defaultOrderMinimizedMode()\"",
            "IsDefaultCode": true,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowDesktopMode": {
            "Name": "",
            "Key": "ShowDesktopMode",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"TabBoxConfig::defaultShowDesktopMode()\"",
            "IsDefaultCode": true,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowTabBox": {
            "Name": "",
            "Key": "ShowTabBox",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "\"TabBoxConfig::defaultShowTabBox()\"",
            "IsDefaultCode": true,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SwitchingMode": {
            "Name": "",
            "Key": "SwitchingMode",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"TabBoxConfig::defaultSwitchingMode()\"",
            "IsDefaultCode": true,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "$(TabBoxGroup)",
        "Name": "$(TabBoxGroup)"
      },
      "Compositing": {
        "Options": {
          "AllowTearing": {
            "Name": "AllowTearing",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Backend": {
            "Name": "Backend",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"OpenGL\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Enabled": {
            "Name": "Enabled",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GLLegacy": {
            "Name": "GLLegacy",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GLPlatformInterface": {
            "Name": "GLPlatformInterface",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"glx\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GLStrictBinding": {
            "Name": "GLStrictBinding",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GLTextureFilter": {
            "Name": "GLTextureFilter",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "2",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "-1",
            "HasMin": true,
            "Max": "2",
            "HasMax": true,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HiddenPreviews": {
            "Name": "HiddenPreviews",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "5",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "4",
            "HasMin": true,
            "Max": "6",
            "HasMax": true,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LastFailureTimestamp": {
            "Name": "LastFailureTimestamp",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LatencyPolicy": {
            "Name": "LatencyPolicy",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (enum [ \n              \"LatencyExtremelyLow\"\n              \"LatencyLow\"\n              \"LatencyMedium\"\n              \"LatencyHigh\"\n              \"LatencyExtremelyHigh\"\n            ]))",
            "DefaultValue": "\"LatencyMedium\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "LatencyExtremelyLow",
                "Label": ""
              },
              {
                "Name": "LatencyLow",
                "Label": ""
              },
              {
                "Name": "LatencyMedium",
                "Label": ""
              },
              {
                "Name": "LatencyHigh",
                "Label": ""
              },
              {
                "Name": "LatencyExtremelyHigh",
                "Label": ""
              }
            ]
          },
          "RenderTimeEstimator": {
            "Name": "RenderTimeEstimator",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (enum [ \n              \"RenderTimeEstimatorMinimum\"\n              \"RenderTimeEstimatorMaximum\"\n              \"RenderTimeEstimatorAverage\"\n            ]))",
            "DefaultValue": "\"RenderTimeEstimatorMaximum\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "RenderTimeEstimatorMinimum",
                "Label": ""
              },
              {
                "Name": "RenderTimeEstimatorMaximum",
                "Label": ""
              },
              {
                "Name": "RenderTimeEstimatorAverage",
                "Label": ""
              }
            ]
          },
          "WindowsBlockCompositing": {
            "Name": "WindowsBlockCompositing",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Compositing",
        "Name": "Compositing"
      },
      "Effect-$(EffectName)": {
        "Options": {
          "BorderActivate": {
            "Name": "",
            "Key": "BorderActivate",
            "HasKey": true,
            "TypeValue": "(either str (listOf int))",
            "DefaultValue": "\"ElectricNone\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "IntList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TouchBorderActivate": {
            "Name": "",
            "Key": "TouchBorderActivate",
            "HasKey": true,
            "TypeValue": "(either str (listOf int))",
            "DefaultValue": "\"ElectricNone\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "IntList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Effect-$(EffectName)",
        "Name": "Effect-$(EffectName)"
      },
      "Effect-DesktopGrid": {
        "Options": {
          "BorderActivate": {
            "Name": "BorderActivateDesktopGrid",
            "Key": "BorderActivate",
            "HasKey": true,
            "TypeValue": "(either str (listOf int))",
            "DefaultValue": "\"ElectricNone\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "IntList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Effect-DesktopGrid",
        "Name": "Effect-DesktopGrid"
      },
      "Effect-Overview": {
        "Options": {
          "BorderActivate": {
            "Name": "BorderActivateOverview",
            "Key": "BorderActivate",
            "HasKey": true,
            "TypeValue": "(either str (listOf int))",
            "DefaultValue": "\"ElectricNone\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "IntList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Effect-Overview",
        "Name": "Effect-Overview"
      },
      "Effect-windowview": {
        "Options": {
          "BorderActivate": {
            "Name": "BorderActivatePresentWindows",
            "Key": "BorderActivate",
            "HasKey": true,
            "TypeValue": "(either str (listOf int))",
            "DefaultValue": "\"ElectricNone\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "IntList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "BorderActivateAll": {
            "Name": "",
            "Key": "BorderActivateAll",
            "HasKey": true,
            "TypeValue": "(either str (listOf int))",
            "DefaultValue": "\"ElectricTopLeft\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "IntList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "BorderActivateClass": {
            "Name": "",
            "Key": "BorderActivateClass",
            "HasKey": true,
            "TypeValue": "(either str (listOf int))",
            "DefaultValue": "\"ElectricNone\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "IntList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TouchBorderActivate": {
            "Name": "TouchBorderActivatePresentWindows",
            "Key": "TouchBorderActivate",
            "HasKey": true,
            "TypeValue": "(either str (listOf int))",
            "DefaultValue": "\"ElectricNone\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "IntList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TouchBorderActivateAll": {
            "Name": "",
            "Key": "TouchBorderActivateAll",
            "HasKey": true,
            "TypeValue": "(either str (listOf int))",
            "DefaultValue": "\"ElectricNone\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "IntList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TouchBorderActivateClass": {
            "Name": "",
            "Key": "TouchBorderActivateClass",
            "HasKey": true,
            "TypeValue": "(either str (listOf int))",
            "DefaultValue": "\"ElectricNone\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "IntList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Effect-windowview",
        "Name": "Effect-windowview"
      },
      "ElectricBorders": {
        "Options": {
          "Bottom": {
            "Name": "",
            "Key": "Bottom",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"None\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "BottomLeft": {
            "Name": "",
            "Key": "BottomLeft",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"None\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "BottomRight": {
            "Name": "",
            "Key": "BottomRight",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"None\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Left": {
            "Name": "",
            "Key": "Left",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"None\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Right": {
            "Name": "",
            "Key": "Right",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"None\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Top": {
            "Name": "",
            "Key": "Top",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"None\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TopLeft": {
            "Name": "",
            "Key": "TopLeft",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"None\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TopRight": {
            "Name": "",
            "Key": "TopRight",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"None\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "ElectricBorders",
        "Name": "ElectricBorders"
      },
      "Input": {
        "Options": {
          "TabletMode": {
            "Name": "tabletMode",
            "Key": "TabletMode",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"auto\"",
            "IsDefaultCode": false,
            "Label": "Automatically switch to touch-optimized mode",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Input",
        "Name": "Input"
      },
      "KDE": {
        "Options": {
          "AnimationDurationFactor": {
            "Name": "AnimationDurationFactor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "1.0",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Double",
            "Min": "0",
            "HasMin": true,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "KDE",
        "Name": "KDE"
      },
      "MouseBindings": {
        "Options": {
          "CommandActiveTitlebar1": {
            "Name": "",
            "Key": "CommandActiveTitlebar1",
            "HasKey": true,
            "TypeValue": "(either str (enum [ \n              \"Raise\"\n              \"Lower\"\n              \"ToggleRaiseAndLower\"\n              \"Minimize\"\n              \"Shade\"\n              \"Close\"\n              \"OperationsMenu\"\n              \"Nothing\"\n            ]))",
            "DefaultValue": "\"Raise\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "Raise",
                "Label": ""
              },
              {
                "Name": "Lower",
                "Label": ""
              },
              {
                "Name": "ToggleRaiseAndLower",
                "Label": ""
              },
              {
                "Name": "Minimize",
                "Label": ""
              },
              {
                "Name": "Shade",
                "Label": ""
              },
              {
                "Name": "Close",
                "Label": ""
              },
              {
                "Name": "OperationsMenu",
                "Label": ""
              },
              {
                "Name": "Nothing",
                "Label": ""
              }
            ]
          },
          "CommandActiveTitlebar2": {
            "Name": "",
            "Key": "CommandActiveTitlebar2",
            "HasKey": true,
            "TypeValue": "(either str (enum [ \n              \"Raise\"\n              \"Lower\"\n              \"ToggleRaiseAndLower\"\n              \"Minimize\"\n              \"Shade\"\n              \"Close\"\n              \"OperationsMenu\"\n              \"Nothing\"\n            ]))",
            "DefaultValue": "\"Nothing\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "Raise",
                "Label": ""
              },
              {
                "Name": "Lower",
                "Label": ""
              },
              {
                "Name": "ToggleRaiseAndLower",
                "Label": ""
              },
              {
                "Name": "Minimize",
                "Label": ""
              },
              {
                "Name": "Shade",
                "Label": ""
              },
              {
                "Name": "Close",
                "Label": ""
              },
              {
                "Name": "OperationsMenu",
                "Label": ""
              },
              {
                "Name": "Nothing",
                "Label": ""
              }
            ]
          },
          "CommandActiveTitlebar3": {
            "Name": "",
            "Key": "CommandActiveTitlebar3",
            "HasKey": true,
            "TypeValue": "(either str (enum [ \n              \"Raise\"\n              \"Lower\"\n              \"ToggleRaiseAndLower\"\n              \"Minimize\"\n              \"Shade\"\n              \"Close\"\n              \"OperationsMenu\"\n              \"Nothing\"\n            ]))",
            "DefaultValue": "\"OperationsMenu\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "Raise",
                "Label": ""
              },
              {
                "Name": "Lower",
                "Label": ""
              },
              {
                "Name": "ToggleRaiseAndLower",
                "Label": ""
              },
              {
                "Name": "Minimize",
                "Label": ""
              },
              {
                "Name": "Shade",
                "Label": ""
              },
              {
                "Name": "Close",
                "Label": ""
              },
              {
                "Name": "OperationsMenu",
                "Label": ""
              },
              {
                "Name": "Nothing",
                "Label": ""
              }
            ]
          },
          "CommandAll1": {
            "Name": "",
            "Key": "CommandAll1",
            "HasKey": true,
            "TypeValue": "(either str (enum [ \n              \"Move\"\n              \"ActivateRaiseAndMove\"\n              \"ToggleRaiseAndLower\"\n              \"Resize\"\n              \"Raise\"\n              \"Lower\"\n              \"Minimize\"\n              \"DecreaseOpacity\"\n              \"IncreaseOpactiy\"\n              \"Nothing\"\n            ]))",
            "DefaultValue": "\"Move\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "Move",
                "Label": ""
              },
              {
                "Name": "ActivateRaiseAndMove",
                "Label": ""
              },
              {
                "Name": "ToggleRaiseAndLower",
                "Label": ""
              },
              {
                "Name": "Resize",
                "Label": ""
              },
              {
                "Name": "Raise",
                "Label": ""
              },
              {
                "Name": "Lower",
                "Label": ""
              },
              {
                "Name": "Minimize",
                "Label": ""
              },
              {
                "Name": "DecreaseOpacity",
                "Label": ""
              },
              {
                "Name": "IncreaseOpactiy",
                "Label": ""
              },
              {
                "Name": "Nothing",
                "Label": ""
              }
            ]
          },
          "CommandAll2": {
            "Name": "",
            "Key": "CommandAll2",
            "HasKey": true,
            "TypeValue": "(either str (enum [ \n              \"Move\"\n              \"ActivateRaiseAndMove\"\n              \"ToggleRaiseAndLower\"\n              \"Resize\"\n              \"Raise\"\n              \"Lower\"\n              \"Minimize\"\n              \"DecreaseOpacity\"\n              \"IncreaseOpactiy\"\n              \"Nothing\"\n            ]))",
            "DefaultValue": "\"ToggleRaiseAndLower\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "Move",
                "Label": ""
              },
              {
                "Name": "ActivateRaiseAndMove",
                "Label": ""
              },
              {
                "Name": "ToggleRaiseAndLower",
                "Label": ""
              },
              {
                "Name": "Resize",
                "Label": ""
              },
              {
                "Name": "Raise",
                "Label": ""
              },
              {
                "Name": "Lower",
                "Label": ""
              },
              {
                "Name": "Minimize",
                "Label": ""
              },
              {
                "Name": "DecreaseOpacity",
                "Label": ""
              },
              {
                "Name": "IncreaseOpactiy",
                "Label": ""
              },
              {
                "Name": "Nothing",
                "Label": ""
              }
            ]
          },
          "CommandAll3": {
            "Name": "",
            "Key": "CommandAll3",
            "HasKey": true,
            "TypeValue": "(either str (enum [ \n              \"Move\"\n              \"ActivateRaiseAndMove\"\n              \"ToggleRaiseAndLower\"\n              \"Resize\"\n              \"Raise\"\n              \"Lower\"\n              \"Minimize\"\n              \"DecreaseOpacity\"\n              \"IncreaseOpactiy\"\n              \"Nothing\"\n            ]))",
            "DefaultValue": "\"Resize\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "Move",
                "Label": ""
              },
              {
                "Name": "ActivateRaiseAndMove",
                "Label": ""
              },
              {
                "Name": "ToggleRaiseAndLower",
                "Label": ""
              },
              {
                "Name": "Resize",
                "Label": ""
              },
              {
                "Name": "Raise",
                "Label": ""
              },
              {
                "Name": "Lower",
                "Label": ""
              },
              {
                "Name": "Minimize",
                "Label": ""
              },
              {
                "Name": "DecreaseOpacity",
                "Label": ""
              },
              {
                "Name": "IncreaseOpactiy",
                "Label": ""
              },
              {
                "Name": "Nothing",
                "Label": ""
              }
            ]
          },
          "CommandAllKey": {
            "Name": "",
            "Key": "CommandAllKey",
            "HasKey": true,
            "TypeValue": "(either str (enum [ \n              \"Meta\"\n              \"Alt\"\n            ]))",
            "DefaultValue": "\"Meta\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "Meta",
                "Label": ""
              },
              {
                "Name": "Alt",
                "Label": ""
              }
            ]
          },
          "CommandAllWheel": {
            "Name": "",
            "Key": "CommandAllWheel",
            "HasKey": true,
            "TypeValue": "(either str (enum [ \n              \"RaiseLower\"\n              \"ShadeUnshade\"\n              \"MaxmizeRestore\"\n              \"AboveBelow\"\n              \"PreviousNextDesktop\"\n              \"ChangeOpacity\"\n              \"Nothing\"\n            ]))",
            "DefaultValue": "\"Nothing\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "RaiseLower",
                "Label": ""
              },
              {
                "Name": "ShadeUnshade",
                "Label": ""
              },
              {
                "Name": "MaxmizeRestore",
                "Label": ""
              },
              {
                "Name": "AboveBelow",
                "Label": ""
              },
              {
                "Name": "PreviousNextDesktop",
                "Label": ""
              },
              {
                "Name": "ChangeOpacity",
                "Label": ""
              },
              {
                "Name": "Nothing",
                "Label": ""
              }
            ]
          },
          "CommandInactiveTitlebar1": {
            "Name": "",
            "Key": "CommandInactiveTitlebar1",
            "HasKey": true,
            "TypeValue": "(either str (enum [ \n              \"ActivateAndRaise\"\n              \"ActivateAndLower\"\n              \"Activate\"\n              \"Raise\"\n              \"Lower\"\n              \"ToggleRaiseAndLower\"\n              \"Minimize\"\n              \"Shade\"\n              \"Close\"\n              \"OperationsMenu\"\n              \"Nothing\"\n            ]))",
            "DefaultValue": "\"ActivateAndRaise\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "ActivateAndRaise",
                "Label": ""
              },
              {
                "Name": "ActivateAndLower",
                "Label": ""
              },
              {
                "Name": "Activate",
                "Label": ""
              },
              {
                "Name": "Raise",
                "Label": ""
              },
              {
                "Name": "Lower",
                "Label": ""
              },
              {
                "Name": "ToggleRaiseAndLower",
                "Label": ""
              },
              {
                "Name": "Minimize",
                "Label": ""
              },
              {
                "Name": "Shade",
                "Label": ""
              },
              {
                "Name": "Close",
                "Label": ""
              },
              {
                "Name": "OperationsMenu",
                "Label": ""
              },
              {
                "Name": "Nothing",
                "Label": ""
              }
            ]
          },
          "CommandInactiveTitlebar2": {
            "Name": "",
            "Key": "CommandInactiveTitlebar2",
            "HasKey": true,
            "TypeValue": "(either str (enum [ \n              \"ActivateAndRaise\"\n              \"ActivateAndLower\"\n              \"Activate\"\n              \"Raise\"\n              \"Lower\"\n              \"ToggleRaiseAndLower\"\n              \"Minimize\"\n              \"Shade\"\n              \"Close\"\n              \"OperationsMenu\"\n              \"Nothing\"\n            ]))",
            "DefaultValue": "\"Nothing\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "ActivateAndRaise",
                "Label": ""
              },
              {
                "Name": "ActivateAndLower",
                "Label": ""
              },
              {
                "Name": "Activate",
                "Label": ""
              },
              {
                "Name": "Raise",
                "Label": ""
              },
              {
                "Name": "Lower",
                "Label": ""
              },
              {
                "Name": "ToggleRaiseAndLower",
                "Label": ""
              },
              {
                "Name": "Minimize",
                "Label": ""
              },
              {
                "Name": "Shade",
                "Label": ""
              },
              {
                "Name": "Close",
                "Label": ""
              },
              {
                "Name": "OperationsMenu",
                "Label": ""
              },
              {
                "Name": "Nothing",
                "Label": ""
              }
            ]
          },
          "CommandInactiveTitlebar3": {
            "Name": "",
            "Key": "CommandInactiveTitlebar3",
            "HasKey": true,
            "TypeValue": "(either str (enum [ \n              \"ActivateAndRaise\"\n              \"ActivateAndLower\"\n              \"Activate\"\n              \"Raise\"\n              \"Lower\"\n              \"ToggleRaiseAndLower\"\n              \"Minimize\"\n              \"Shade\"\n              \"Close\"\n              \"OperationsMenu\"\n              \"Nothing\"\n            ]))",
            "DefaultValue": "\"OperationsMenu\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "ActivateAndRaise",
                "Label": ""
              },
              {
                "Name": "ActivateAndLower",
                "Label": ""
              },
              {
                "Name": "Activate",
                "Label": ""
              },
              {
                "Name": "Raise",
                "Label": ""
              },
              {
                "Name": "Lower",
                "Label": ""
              },
              {
                "Name": "ToggleRaiseAndLower",
                "Label": ""
              },
              {
                "Name": "Minimize",
                "Label": ""
              },
              {
                "Name": "Shade",
                "Label": ""
              },
              {
                "Name": "Close",
                "Label": ""
              },
              {
                "Name": "OperationsMenu",
                "Label": ""
              },
              {
                "Name": "Nothing",
                "Label": ""
              }
            ]
          },
          "CommandTitlebarWheel": {
            "Name": "",
            "Key": "CommandTitlebarWheel",
            "HasKey": true,
            "TypeValue": "(either str (enum [ \n              \"RaiseLower\"\n              \"ShadeUnshade\"\n              \"MaxmizeRestore\"\n              \"AboveBelow\"\n              \"PreviousNextDesktop\"\n              \"ChangeOpacity\"\n              \"Nothing\"\n            ]))",
            "DefaultValue": "\"Nothing\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "RaiseLower",
                "Label": ""
              },
              {
                "Name": "ShadeUnshade",
                "Label": ""
              },
              {
                "Name": "MaxmizeRestore",
                "Label": ""
              },
              {
                "Name": "AboveBelow",
                "Label": ""
              },
              {
                "Name": "PreviousNextDesktop",
                "Label": ""
              },
              {
                "Name": "ChangeOpacity",
                "Label": ""
              },
              {
                "Name": "Nothing",
                "Label": ""
              }
            ]
          },
          "CommandWindow1": {
            "Name": "",
            "Key": "CommandWindow1",
            "HasKey": true,
            "TypeValue": "(either str (enum [ \n              \"ActivateRaisePassClick\"\n              \"ActivatePassClick\"\n              \"Activate\"\n              \"ActivateRaise\"\n            ]))",
            "DefaultValue": "\"ActivateRaisePassClick\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "ActivateRaisePassClick",
                "Label": ""
              },
              {
                "Name": "ActivatePassClick",
                "Label": ""
              },
              {
                "Name": "Activate",
                "Label": ""
              },
              {
                "Name": "ActivateRaise",
                "Label": ""
              }
            ]
          },
          "CommandWindow2": {
            "Name": "",
            "Key": "CommandWindow2",
            "HasKey": true,
            "TypeValue": "(either str (enum [ \n              \"ActivateRaisePassClick\"\n              \"ActivatePassClick\"\n              \"Activate\"\n              \"ActivateRaise\"\n            ]))",
            "DefaultValue": "\"ActivatePassClick\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "ActivateRaisePassClick",
                "Label": ""
              },
              {
                "Name": "ActivatePassClick",
                "Label": ""
              },
              {
                "Name": "Activate",
                "Label": ""
              },
              {
                "Name": "ActivateRaise",
                "Label": ""
              }
            ]
          },
          "CommandWindow3": {
            "Name": "",
            "Key": "CommandWindow3",
            "HasKey": true,
            "TypeValue": "(either str (enum [ \n              \"ActivateRaisePassClick\"\n              \"ActivatePassClick\"\n              \"Activate\"\n              \"ActivateRaise\"\n            ]))",
            "DefaultValue": "\"ActivatePassClick\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "ActivateRaisePassClick",
                "Label": ""
              },
              {
                "Name": "ActivatePassClick",
                "Label": ""
              },
              {
                "Name": "Activate",
                "Label": ""
              },
              {
                "Name": "ActivateRaise",
                "Label": ""
              }
            ]
          },
          "CommandWindowWheel": {
            "Name": "",
            "Key": "CommandWindowWheel",
            "HasKey": true,
            "TypeValue": "(either str (enum [ \n              \"Scroll\"\n              \"ActivateScroll\"\n              \"ActivateRaiseAndScroll\"\n            ]))",
            "DefaultValue": "\"Scroll\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "Scroll",
                "Label": ""
              },
              {
                "Name": "ActivateScroll",
                "Label": ""
              },
              {
                "Name": "ActivateRaiseAndScroll",
                "Label": ""
              }
            ]
          }
        },
        "Description": "MouseBindings",
        "Name": "MouseBindings"
      },
      "NightColor": {
        "Options": {
          "Active": {
            "Name": "Active",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DayTemperature": {
            "Name": "DayTemperature",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "6500",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "EveningBeginFixed": {
            "Name": "EveningBeginFixed",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"1800\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LatitudeAuto": {
            "Name": "LatitudeAuto",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "0.0",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LatitudeFixed": {
            "Name": "LatitudeFixed",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "0.0",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LongitudeAuto": {
            "Name": "LongitudeAuto",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "0.0",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LongitudeFixed": {
            "Name": "LongitudeFixed",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "0.0",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Mode": {
            "Name": "Mode",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (enum [ \n              \"Automatic\"\n              \"Location\"\n              \"Times\"\n              \"Constant\"\n            ]))",
            "DefaultValue": "\"Automatic\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "Automatic",
                "Label": ""
              },
              {
                "Name": "Location",
                "Label": ""
              },
              {
                "Name": "Times",
                "Label": ""
              },
              {
                "Name": "Constant",
                "Label": ""
              }
            ]
          },
          "MorningBeginFixed": {
            "Name": "MorningBeginFixed",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"0600\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "NightTemperature": {
            "Name": "NightTemperature",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "4500",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TransitionTime": {
            "Name": "TransitionTime",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "30",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "NightColor",
        "Name": "NightColor"
      },
      "Plugins": {
        "Options": {
          "desktopchangeosdEnabled": {
            "Name": "desktopChangeOsdEnabled",
            "Key": "desktopchangeosdEnabled",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Display in an OSD the virtual desktop name when switching between virtual desktops",
            "Type": "bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "highlightwindowEnabled": {
            "Name": "",
            "Key": "highlightwindowEnabled",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Plugins",
        "Name": "Plugins"
      },
      "ScreenEdges": {
        "Options": {
          "RemainActiveOnFullscreen": {
            "Name": "RemainActiveOnFullscreen",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "ScreenEdges",
        "Name": "ScreenEdges"
      },
      "Script-$(ScriptName)": {
        "Options": {
          "BorderActivate": {
            "Name": "",
            "Key": "BorderActivate",
            "HasKey": true,
            "TypeValue": "(either str (listOf int))",
            "DefaultValue": "\"ElectricNone\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "IntList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TouchBorderActivate": {
            "Name": "",
            "Key": "TouchBorderActivate",
            "HasKey": true,
            "TypeValue": "(either str (listOf int))",
            "DefaultValue": "\"ElectricNone\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "IntList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Script-$(ScriptName)",
        "Name": "Script-$(ScriptName)"
      },
      "Script-desktopchangeosd": {
        "Options": {
          "PopupHideDelay": {
            "Name": "popupHideDelay",
            "Key": "PopupHideDelay",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "1000",
            "IsDefaultCode": false,
            "Label": "Duraton of the OSD",
            "Type": "int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TextOnly": {
            "Name": "textOnly",
            "Key": "TextOnly",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Whether or not to display desktop layout in the OSD",
            "Type": "bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Script-desktopchangeosd",
        "Name": "Script-desktopchangeosd"
      },
      "TabBox": {
        "Options": {
          "ActivitiesMode": {
            "Name": "ActivitiesMode",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "1",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ApplicationsMode": {
            "Name": "ApplicationsMode",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "BorderActivate": {
            "Name": "BorderActivateTabBox",
            "Key": "BorderActivate",
            "HasKey": true,
            "TypeValue": "(either str (listOf int))",
            "DefaultValue": "\"ElectricNone\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "IntList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "BorderAlternativeActivate": {
            "Name": "",
            "Key": "BorderAlternativeActivate",
            "HasKey": true,
            "TypeValue": "(either str (listOf int))",
            "DefaultValue": "\"ElectricNone\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "IntList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DelayTime": {
            "Name": "DelayTime",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "90",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DesktopMode": {
            "Name": "DesktopMode",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "1",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HighlightWindows": {
            "Name": "HighlightWindows",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LayoutName": {
            "Name": "LayoutName",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"thumbnails\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "MinimizedMode": {
            "Name": "MinimizedMode",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "MoveMinimizedWindowsToEndOfTabBoxFocusChain": {
            "Name": "MoveMinimizedWindowsToEndOfTabBoxFocusChain",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "MultiScreenMode": {
            "Name": "MultiScreenMode",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowDelay": {
            "Name": "ShowDelay",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowDesktopMode": {
            "Name": "ShowDesktopMode",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowOutline": {
            "Name": "ShowOutline",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowTabBox": {
            "Name": "ShowTabBox",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SwitchingMode": {
            "Name": "SwitchingMode",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TouchBorderActivate": {
            "Name": "TouchBorderActivateTabBox",
            "Key": "TouchBorderActivate",
            "HasKey": true,
            "TypeValue": "(either str (listOf int))",
            "DefaultValue": "\"ElectricNone\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "IntList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TouchBorderAlternativeActivate": {
            "Name": "",
            "Key": "TouchBorderAlternativeActivate",
            "HasKey": true,
            "TypeValue": "(either str (listOf int))",
            "DefaultValue": "\"ElectricNone\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "IntList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "TabBox",
        "Name": "TabBox"
      },
      "TouchEdges": {
        "Options": {
          "Bottom": {
            "Name": "",
            "Key": "Bottom",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"None\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Left": {
            "Name": "",
            "Key": "Left",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"None\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Right": {
            "Name": "",
            "Key": "Right",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"None\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Top": {
            "Name": "",
            "Key": "Top",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"None\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "TouchEdges",
        "Name": "TouchEdges"
      },
      "Wayland": {
        "Options": {
          "DoubleTapWakeup": {
            "Name": "DoubleTapWakeup",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "EnablePrimarySelection": {
            "Name": "primarySelection",
            "Key": "EnablePrimarySelection",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Enable middle click selection pasting",
            "Type": "bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "InputMethod": {
            "Name": "InputMethod",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Path",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Wayland",
        "Name": "Wayland"
      },
      "Windows": {
        "Options": {
          "ActivationDesktopPolicy": {
            "Name": "ActivationDesktopPolicy",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (enum [ \n              \"SwitchToOtherDesktop\"\n              \"BringToCurrentDesktop\"\n            ]))",
            "DefaultValue": "\"KWin::Options::ActivationDesktopPolicy::SwitchToOtherDesktop\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "SwitchToOtherDesktop",
                "Label": ""
              },
              {
                "Name": "BringToCurrentDesktop",
                "Label": ""
              }
            ]
          },
          "ActiveMouseScreen": {
            "Name": "",
            "Key": "ActiveMouseScreen",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AutoRaise": {
            "Name": "",
            "Key": "AutoRaise",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AutoRaiseInterval": {
            "Name": "",
            "Key": "AutoRaiseInterval",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "750",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "0",
            "HasMin": true,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AutogroupInForeground": {
            "Name": "AutogroupInForeground",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AutogroupSimilarWindows": {
            "Name": "AutogroupSimilarWindows",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "BorderSnapZone": {
            "Name": "",
            "Key": "BorderSnapZone",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "10",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "0",
            "HasMin": true,
            "Max": "100",
            "HasMax": true,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "BorderlessMaximizedWindows": {
            "Name": "BorderlessMaximizedWindows",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "CenterSnapZone": {
            "Name": "",
            "Key": "CenterSnapZone",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "0",
            "HasMin": true,
            "Max": "100",
            "HasMax": true,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ClickRaise": {
            "Name": "",
            "Key": "ClickRaise",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "CondensedTitle": {
            "Name": "CondensedTitle",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DelayFocusInterval": {
            "Name": "",
            "Key": "DelayFocusInterval",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "300",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "0",
            "HasMin": true,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ElectricBorderCooldown": {
            "Name": "",
            "Key": "ElectricBorderCooldown",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "350",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ElectricBorderCornerRatio": {
            "Name": "",
            "Key": "ElectricBorderCornerRatio",
            "HasKey": true,
            "TypeValue": "(either str float)",
            "DefaultValue": "0.25",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ElectricBorderDelay": {
            "Name": "",
            "Key": "ElectricBorderDelay",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "150",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ElectricBorderMaximize": {
            "Name": "",
            "Key": "ElectricBorderMaximize",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ElectricBorderPushbackPixels": {
            "Name": "ElectricBorderPushbackPixels",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "1",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ElectricBorderTiling": {
            "Name": "",
            "Key": "ElectricBorderTiling",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ElectricBorders": {
            "Name": "",
            "Key": "ElectricBorders",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FocusPolicy": {
            "Name": "",
            "Key": "FocusPolicy",
            "HasKey": true,
            "TypeValue": "(either str (enum [ \n              \"ClickToFocus\"\n              \"FocusFollowsMouse\"\n              \"FocusUnderMouse\"\n              \"FocusStrictlyUnderMouse\"\n            ]))",
            "DefaultValue": "\"ClickToFocus\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "ClickToFocus",
                "Label": ""
              },
              {
                "Name": "FocusFollowsMouse",
                "Label": ""
              },
              {
                "Name": "FocusUnderMouse",
                "Label": ""
              },
              {
                "Name": "FocusStrictlyUnderMouse",
                "Label": ""
              }
            ]
          },
          "FocusStealingPreventionLevel": {
            "Name": "",
            "Key": "FocusStealingPreventionLevel",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "1",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "0",
            "HasMin": true,
            "Max": "4",
            "HasMax": true,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HideUtilityWindowsForInactive": {
            "Name": "",
            "Key": "HideUtilityWindowsForInactive",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "InactiveTabsSkipTaskbar": {
            "Name": "InactiveTabsSkipTaskbar",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "KillPingTimeout": {
            "Name": "KillPingTimeout",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "5000",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "MaximizeButtonLeftClickCommand": {
            "Name": "",
            "Key": "MaximizeButtonLeftClickCommand",
            "HasKey": true,
            "TypeValue": "(either str (enum [ \n              \"Maximize\"\n              \"MaximizeVerticalOnly\"\n              \"MaximizeHorizontalOnly\"\n            ]))",
            "DefaultValue": "\"Maximize\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "Maximize",
                "Label": ""
              },
              {
                "Name": "MaximizeVerticalOnly",
                "Label": ""
              },
              {
                "Name": "MaximizeHorizontalOnly",
                "Label": ""
              }
            ]
          },
          "MaximizeButtonMiddleClickCommand": {
            "Name": "",
            "Key": "MaximizeButtonMiddleClickCommand",
            "HasKey": true,
            "TypeValue": "(either str (enum [ \n              \"Maximize\"\n              \"MaximizeVerticalOnly\"\n              \"MaximizeHorizontalOnly\"\n            ]))",
            "DefaultValue": "\"MaximizeVerticalOnly\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "Maximize",
                "Label": ""
              },
              {
                "Name": "MaximizeVerticalOnly",
                "Label": ""
              },
              {
                "Name": "MaximizeHorizontalOnly",
                "Label": ""
              }
            ]
          },
          "MaximizeButtonRightClickCommand": {
            "Name": "",
            "Key": "MaximizeButtonRightClickCommand",
            "HasKey": true,
            "TypeValue": "(either str (enum [ \n              \"Maximize\"\n              \"MaximizeVerticalOnly\"\n              \"MaximizeHorizontalOnly\"\n            ]))",
            "DefaultValue": "\"MaximizeHorizontalOnly\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "Maximize",
                "Label": ""
              },
              {
                "Name": "MaximizeVerticalOnly",
                "Label": ""
              },
              {
                "Name": "MaximizeHorizontalOnly",
                "Label": ""
              }
            ]
          },
          "NextFocusPrefersMouse": {
            "Name": "",
            "Key": "NextFocusPrefersMouse",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Placement": {
            "Name": "Placement",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (enum [ \n              \"PlacementNone\"\n              \"PlacementDefault\"\n              \"PlacementUnknown\"\n              \"PlacementRandom\"\n              \"PlacementSmart\"\n              \"PlacementCentered\"\n              \"PlacementZeroCornered\"\n              \"PlacementUnderMouse\"\n              \"PlacementOnMainWindow\"\n              \"PlacementMaximizing\"\n            ]))",
            "DefaultValue": "\"[] {\n                #if KWIN_BUILD_DECORATIONS\n                    return PlacementCentered;\n                #else\n                    return PlacementMaximizing;\n                #endif\n            }()\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "PlacementNone",
                "Label": ""
              },
              {
                "Name": "PlacementDefault",
                "Label": ""
              },
              {
                "Name": "PlacementUnknown",
                "Label": ""
              },
              {
                "Name": "PlacementRandom",
                "Label": ""
              },
              {
                "Name": "PlacementSmart",
                "Label": ""
              },
              {
                "Name": "PlacementCentered",
                "Label": ""
              },
              {
                "Name": "PlacementZeroCornered",
                "Label": ""
              },
              {
                "Name": "PlacementUnderMouse",
                "Label": ""
              },
              {
                "Name": "PlacementOnMainWindow",
                "Label": ""
              },
              {
                "Name": "PlacementMaximizing",
                "Label": ""
              }
            ]
          },
          "RollOverDesktops": {
            "Name": "rollOverDesktops",
            "Key": "RollOverDesktops",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Whether or not, we circle through the virtual desktop when moving from one to the next",
            "Type": "bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SeparateScreenFocus": {
            "Name": "",
            "Key": "SeparateScreenFocus",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShadeHover": {
            "Name": "",
            "Key": "ShadeHover",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShadeHoverInterval": {
            "Name": "",
            "Key": "ShadeHoverInterval",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "250",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "0",
            "HasMin": true,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SnapOnlyWhenOverlapping": {
            "Name": "",
            "Key": "SnapOnlyWhenOverlapping",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TitlebarDoubleClickCommand": {
            "Name": "",
            "Key": "TitlebarDoubleClickCommand",
            "HasKey": true,
            "TypeValue": "(either str (enum [ \n              \"Maximize\"\n              \"MaximizeVerticalOnly\"\n              \"MaximizeHorizontalOnly\"\n              \"Minimize\"\n              \"Shade\"\n              \"Lower\"\n              \"Close\"\n              \"OnAllDesktops\"\n              \"Nothing\"\n            ]))",
            "DefaultValue": "\"Maximize\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "Maximize",
                "Label": ""
              },
              {
                "Name": "MaximizeVerticalOnly",
                "Label": ""
              },
              {
                "Name": "MaximizeHorizontalOnly",
                "Label": ""
              },
              {
                "Name": "Minimize",
                "Label": ""
              },
              {
                "Name": "Shade",
                "Label": ""
              },
              {
                "Name": "Lower",
                "Label": ""
              },
              {
                "Name": "Close",
                "Label": ""
              },
              {
                "Name": "OnAllDesktops",
                "Label": ""
              },
              {
                "Name": "Nothing",
                "Label": ""
              }
            ]
          },
          "WindowSnapZone": {
            "Name": "",
            "Key": "WindowSnapZone",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "10",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "0",
            "HasMin": true,
            "Max": "100",
            "HasMax": true,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Windows",
        "Name": "Windows"
      },
      "Xwayland": {
        "Options": {
          "XwaylandCrashPolicy": {
            "Name": "XwaylandCrashPolicy",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (enum [ \n              \"Stop\"\n              \"Restart\"\n            ]))",
            "DefaultValue": "\"XwaylandCrashPolicy::Restart\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "Stop",
                "Label": ""
              },
              {
                "Name": "Restart",
                "Label": ""
              }
            ]
          },
          "XwaylandEavesdrops": {
            "Name": "XwaylandEavesdrops",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (enum [ \n              \"None\"\n              \"Modifiers\"\n              \"Combinations\"\n              \"All\"\n            ]))",
            "DefaultValue": "\"None\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "None",
                "Label": ""
              },
              {
                "Name": "Modifiers",
                "Label": ""
              },
              {
                "Name": "Combinations",
                "Label": ""
              },
              {
                "Name": "All",
                "Label": ""
              }
            ]
          },
          "XwaylandMaxCrashCount": {
            "Name": "XwaylandMaxCrashCount",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "3",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Xwayland",
        "Name": "Xwayland"
      },
      "org.kde.kdecoration2": {
        "Options": {
          "BorderSize": {
            "Name": "borderSize",
            "Key": "BorderSize",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"Normal\"",
            "IsDefaultCode": false,
            "Label": "Window border size",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "BorderSizeAuto": {
            "Name": "borderSizeAuto",
            "Key": "BorderSizeAuto",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Use theme's default window border size",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ButtonsOnLeft": {
            "Name": "buttonsOnLeft",
            "Key": "ButtonsOnLeft",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"MS\"",
            "IsDefaultCode": false,
            "Label": "Titlebar left buttons",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ButtonsOnRight": {
            "Name": "buttonsOnRight",
            "Key": "ButtonsOnRight",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"HIAX\"",
            "IsDefaultCode": false,
            "Label": "Titlebar right buttons",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "CloseOnDoubleClickOnMenu": {
            "Name": "closeOnDoubleClickOnMenu",
            "Key": "CloseOnDoubleClickOnMenu",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Close windows by double clicking the menu button",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowToolTips": {
            "Name": "showToolTips",
            "Key": "ShowToolTips",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Show titlebar button tooltips",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "library": {
            "Name": "pluginName",
            "Key": "library",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"s_defaultPlugin\"",
            "IsDefaultCode": true,
            "Label": "Plugin name",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "#if HAVE_BREEZE_DECO\n              const QString s_defaultPlugin { QStringLiteral(BREEZE_KDECORATION_PLUGIN_ID) };\n          #else\n              const QString s_defaultPlugin { QStringLiteral(\"org.kde.kwin.aurorae\") };\n          #endif\n      ",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "theme": {
            "Name": "theme",
            "Key": "theme",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"s_defaultTheme\"",
            "IsDefaultCode": true,
            "Label": "Theme name",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "#if HAVE_BREEZE_DECO\n                const QString s_defaultTheme { QStringLiteral(\"Breeze\") };\n            #else\n                const QString s_defaultTheme { QStringLiteral(\"kwin4_decoration_qml_plastik\") };\n            #endif\n      ",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "org.kde.kdecoration2",
        "Name": "org.kde.kdecoration2"
      }
    }
  },
  "neochat": {
    "RCName": "neochatrc",
    "Name": "neochat",
    "Groups": {
      "General": {
        "Options": {
          "ActiveConnection": {
            "Name": "ActiveConnection",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "Latest active connection",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AllowQuickEdit": {
            "Name": "AllowQuickEdit",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Use s/text/replacement syntax to edit your last message.",
            "Type": "bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "AutoRoomInfoDrawer": {
            "Name": "AutoRoomInfoDrawer",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Automatic Hide/Unhide Room Information",
            "Type": "bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Blur": {
            "Name": "Blur",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Make NeoChat blurry",
            "Type": "bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "CollapsedSections": {
            "Name": "CollapsedSections",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (listOf int))",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "Collapsed sections in the room list",
            "Type": "IntList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ColorScheme": {
            "Name": "ColorScheme",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "Color scheme",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DeveloperTools": {
            "Name": "DeveloperTools",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Enable developer tools",
            "Type": "bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LastSaveDirectory": {
            "Name": "LastSaveDirectory",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "Directory last used for saving a file",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "MergeRoomList": {
            "Name": "MergeRoomList",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Merge Room Lists",
            "Type": "bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "OpenRoom": {
            "Name": "OpenRoom",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "Latest opened room",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "RoomDrawerWidth": {
            "Name": "RoomDrawerWidth",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "-1",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "RoomListPageWidth": {
            "Name": "RoomListPageWidth",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "-1",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowLeaveJoinEvent": {
            "Name": "ShowLeaveJoinEvent",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Show leave and join events in the timeline",
            "Type": "bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowLocalMessagesOnRight": {
            "Name": "ShowLocalMessagesOnRight",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "\"Show your messages on the right",
            "Type": "bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowNotifications": {
            "Name": "ShowNotifications",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Show notifications",
            "Type": "bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "Transparency": {
            "Name": "Transparency",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "0.3",
            "IsDefaultCode": false,
            "Label": "Background transparency value",
            "Type": "Double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TypingNotifications": {
            "Name": "TypingNotifications",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "General",
        "Name": "General"
      },
      "NetworkProxy": {
        "Options": {
          "ProxyHost": {
            "Name": "ProxyHost",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"127.0.0.1\"",
            "IsDefaultCode": false,
            "Label": "IP or hostname of the proxy",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ProxyPassword": {
            "Name": "ProxyPassword",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "The password of the proxy",
            "Type": "Password",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ProxyPort": {
            "Name": "ProxyPort",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "1080",
            "IsDefaultCode": false,
            "Label": "The port number of the proxy",
            "Type": "int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ProxyType": {
            "Name": "ProxyType",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (enum [ \n              \"System\"\n              \"HTTP\"\n              \"Socks5\"\n            ]))",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "The type of proxy used by the application.",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "System",
                "Label": "System Default"
              },
              {
                "Name": "HTTP",
                "Label": "HTTP"
              },
              {
                "Name": "Socks5",
                "Label": "Socks5"
              }
            ]
          },
          "ProxyUser": {
            "Name": "ProxyUser",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "The user of the proxy",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "NetworkProxy",
        "Name": "NetworkProxy"
      },
      "RoomDrawer": {
        "Options": {
          "ShowAvatarInRoomDrawer": {
            "Name": "ShowAvatarInRoomDrawer",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Show avatar in the room drawer",
            "Type": "bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "RoomDrawer",
        "Name": "RoomDrawer"
      },
      "Timeline": {
        "Options": {
          "CompactLayout": {
            "Name": "CompactLayout",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Use a compact layout",
            "Type": "bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "MinimizeToSystemTrayOnStartup": {
            "Name": "MinimizeToSystemTrayOnStartup",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Minimize to system tray on startup",
            "Type": "bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowAvatarInTimeline": {
            "Name": "ShowAvatarInTimeline",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Show avatar in the timeline",
            "Type": "bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowAvatarUpdate": {
            "Name": "ShowAvatarUpdate",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Show avatar update events in the timeline",
            "Type": "bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowDeletedMessages": {
            "Name": "ShowDeletedMessages",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Show deleted messages in the timeline",
            "Type": "bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowFancyEffects": {
            "Name": "ShowFancyEffects",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Show Fancy Effects",
            "Type": "bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowLinkPreview": {
            "Name": "ShowLinkPreview",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "Show preview of the links in the chat messages",
            "Type": "bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowRename": {
            "Name": "ShowRename",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Show rename events in the timeline",
            "Type": "bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SystemTray": {
            "Name": "SystemTray",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Close NeoChat to system tray",
            "Type": "bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Timeline",
        "Name": "Timeline"
      }
    }
  },
  "okular": {
    "RCName": "okularrc",
    "Name": "okular",
    "Groups": {
      "Contents": {
        "Options": {
          "ContentsSearchCaseSensitive": {
            "Name": "",
            "Key": "ContentsSearchCaseSensitive",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ContentsSearchRegularExpression": {
            "Name": "",
            "Key": "ContentsSearchRegularExpression",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Contents",
        "Name": "Contents"
      },
      "Debugging Options": {
        "Options": {
          "DebugDrawAnnotationRect": {
            "Name": "",
            "Key": "DebugDrawAnnotationRect",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DebugDrawBoundaries": {
            "Name": "",
            "Key": "DebugDrawBoundaries",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Debugging Options",
        "Name": "Debugging Options"
      },
      "Dlg Accessibility": {
        "Options": {
          "BWContrast": {
            "Name": "",
            "Key": "BWContrast",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "2",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "UInt",
            "Min": "2",
            "HasMin": true,
            "Max": "6",
            "HasMax": true,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "BWThreshold": {
            "Name": "",
            "Key": "BWThreshold",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "127",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "UInt",
            "Min": "2",
            "HasMin": true,
            "Max": "253",
            "HasMax": true,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HighlightImages": {
            "Name": "",
            "Key": "HighlightImages",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "HighlightLinks": {
            "Name": "",
            "Key": "HighlightLinks",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "RecolorBackground": {
            "Name": "",
            "Key": "RecolorBackground",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"0xF0F0F0\"",
            "IsDefaultCode": true,
            "Label": "",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "RecolorForeground": {
            "Name": "",
            "Key": "RecolorForeground",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"0x600000\"",
            "IsDefaultCode": true,
            "Label": "",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Dlg Accessibility",
        "Name": "Dlg Accessibility"
      },
      "Dlg Performance": {
        "Options": {
          "EnableCompositing": {
            "Name": "",
            "Key": "EnableCompositing",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Dlg Performance",
        "Name": "Dlg Performance"
      },
      "Dlg Presentation": {
        "Options": {
          "SlidesBackgroundColor": {
            "Name": "",
            "Key": "SlidesBackgroundColor",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"Qt::black\"",
            "IsDefaultCode": true,
            "Label": "",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SlidesCursor": {
            "Name": "",
            "Key": "SlidesCursor",
            "HasKey": true,
            "TypeValue": "(either str (enum [ \n              \"HiddenDelay\"\n              \"Visible\"\n              \"Hidden\"\n            ]))",
            "DefaultValue": "\"HiddenDelay\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "HiddenDelay",
                "Label": ""
              },
              {
                "Name": "Visible",
                "Label": ""
              },
              {
                "Name": "Hidden",
                "Label": ""
              }
            ]
          },
          "SlidesScreen": {
            "Name": "",
            "Key": "SlidesScreen",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "-2",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "-2",
            "HasMin": true,
            "Max": "20",
            "HasMax": true,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SlidesShowProgress": {
            "Name": "",
            "Key": "SlidesShowProgress",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SlidesShowSummary": {
            "Name": "",
            "Key": "SlidesShowSummary",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SlidesTransition": {
            "Name": "",
            "Key": "SlidesTransition",
            "HasKey": true,
            "TypeValue": "(either str (enum [ \n              \"NoTransitions\"\n              \"Replace\"\n              \"Random\"\n              \"BlindsHorizontal\"\n              \"BlindsVertical\"\n              \"BoxIn\"\n              \"BoxOut\"\n              \"Dissolve\"\n              \"Fade\"\n              \"GlitterDown\"\n              \"GlitterRight\"\n              \"GlitterRightDown\"\n              \"SplitHorizontalIn\"\n              \"SplitHorizontalOut\"\n              \"SplitVerticalIn\"\n              \"SplitVerticalOut\"\n              \"WipeDown\"\n              \"WipeRight\"\n              \"WipeLeft\"\n              \"WipeUp\"\n            ]))",
            "DefaultValue": "\"Replace\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "NoTransitions",
                "Label": ""
              },
              {
                "Name": "Replace",
                "Label": ""
              },
              {
                "Name": "Random",
                "Label": ""
              },
              {
                "Name": "BlindsHorizontal",
                "Label": ""
              },
              {
                "Name": "BlindsVertical",
                "Label": ""
              },
              {
                "Name": "BoxIn",
                "Label": ""
              },
              {
                "Name": "BoxOut",
                "Label": ""
              },
              {
                "Name": "Dissolve",
                "Label": ""
              },
              {
                "Name": "Fade",
                "Label": ""
              },
              {
                "Name": "GlitterDown",
                "Label": ""
              },
              {
                "Name": "GlitterRight",
                "Label": ""
              },
              {
                "Name": "GlitterRightDown",
                "Label": ""
              },
              {
                "Name": "SplitHorizontalIn",
                "Label": ""
              },
              {
                "Name": "SplitHorizontalOut",
                "Label": ""
              },
              {
                "Name": "SplitVerticalIn",
                "Label": ""
              },
              {
                "Name": "SplitVerticalOut",
                "Label": ""
              },
              {
                "Name": "WipeDown",
                "Label": ""
              },
              {
                "Name": "WipeRight",
                "Label": ""
              },
              {
                "Name": "WipeLeft",
                "Label": ""
              },
              {
                "Name": "WipeUp",
                "Label": ""
              }
            ]
          }
        },
        "Description": "Dlg Presentation",
        "Name": "Dlg Presentation"
      },
      "General": {
        "Options": {
          "DisplayDocumentNameOrPath": {
            "Name": "",
            "Key": "DisplayDocumentNameOrPath",
            "HasKey": true,
            "TypeValue": "(either str (enum [ \n              \"Name\"\n              \"Path\"\n            ]))",
            "DefaultValue": "\"Name\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "Name",
                "Label": ""
              },
              {
                "Name": "Path",
                "Label": ""
              }
            ]
          },
          "DisplayDocumentTitle": {
            "Name": "",
            "Key": "DisplayDocumentTitle",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShellOpenFileInTabs": {
            "Name": "",
            "Key": "ShellOpenFileInTabs",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowEmbeddedContentMessages": {
            "Name": "",
            "Key": "ShowEmbeddedContentMessages",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowOSD": {
            "Name": "",
            "Key": "ShowOSD",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SwitchToTabIfOpen": {
            "Name": "",
            "Key": "SwitchToTabIfOpen",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "UseTTS": {
            "Name": "",
            "Key": "UseTTS",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "WatchFile": {
            "Name": "",
            "Key": "WatchFile",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "rtlReadingDirection": {
            "Name": "",
            "Key": "rtlReadingDirection",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ttsEngine": {
            "Name": "",
            "Key": "ttsEngine",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"speechd\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ttsVoice": {
            "Name": "",
            "Key": "ttsVoice",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "General",
        "Name": "General"
      },
      "Identity": {
        "Options": {
          "IdentityAuthor": {
            "Name": "",
            "Key": "IdentityAuthor",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"userString\"",
            "IsDefaultCode": true,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "\n      KUser currentUser;\n      QString userString = currentUser.property( KUser::FullName ).toString();\n      if ( userString.isEmpty() )\n      {\n        userString = currentUser.loginName();\n      }\n    ",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Identity",
        "Name": "Identity"
      },
      "Layers": {
        "Options": {
          "LayersSearchCaseSensitive": {
            "Name": "",
            "Key": "LayersSearchCaseSensitive",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "LayersSearchRegularExpression": {
            "Name": "",
            "Key": "LayersSearchRegularExpression",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Layers",
        "Name": "Layers"
      },
      "Main View": {
        "Options": {
          "ShowBottomBar": {
            "Name": "",
            "Key": "ShowBottomBar",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowLeftPanel": {
            "Name": "",
            "Key": "ShowLeftPanel",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SplitterSizes": {
            "Name": "",
            "Key": "SplitterSizes",
            "HasKey": true,
            "TypeValue": "(either str (listOf int))",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "IntList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Main View",
        "Name": "Main View"
      },
      "Nav Panel": {
        "Options": {
          "CurrentPageOnly": {
            "Name": "",
            "Key": "CurrentPageOnly",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "FilterBookmarks": {
            "Name": "",
            "Key": "FilterBookmarks",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GroupByAuthor": {
            "Name": "",
            "Key": "GroupByAuthor",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "GroupByPage": {
            "Name": "",
            "Key": "GroupByPage",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SidebarIconSize": {
            "Name": "",
            "Key": "SidebarIconSize",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "48",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SidebarShowText": {
            "Name": "",
            "Key": "SidebarShowText",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SyncThumbnailsViewport": {
            "Name": "",
            "Key": "SyncThumbnailsViewport",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TocPageColumn": {
            "Name": "",
            "Key": "TocPageColumn",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Nav Panel",
        "Name": "Nav Panel"
      },
      "PageView": {
        "Options": {
          "BackgroundColor": {
            "Name": "",
            "Key": "BackgroundColor",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DragBeyondScreenEdges": {
            "Name": "",
            "Key": "DragBeyondScreenEdges",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "EditToolBarPlacement": {
            "Name": "",
            "Key": "EditToolBarPlacement",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "MouseMode": {
            "Name": "",
            "Key": "MouseMode",
            "HasKey": true,
            "TypeValue": "(either str (enum [ \n              \"Browse\"\n              \"Zoom\"\n              \"RectSelect\"\n              \"TextSelect\"\n              \"TableSelect\"\n              \"Magnifier\"\n              \"TrimSelect\"\n            ]))",
            "DefaultValue": "\"Browse\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "Browse",
                "Label": ""
              },
              {
                "Name": "Zoom",
                "Label": ""
              },
              {
                "Name": "RectSelect",
                "Label": ""
              },
              {
                "Name": "TextSelect",
                "Label": ""
              },
              {
                "Name": "TableSelect",
                "Label": ""
              },
              {
                "Name": "Magnifier",
                "Label": ""
              },
              {
                "Name": "TrimSelect",
                "Label": ""
              }
            ]
          },
          "PrimaryAnnotationToolBar": {
            "Name": "",
            "Key": "PrimaryAnnotationToolBar",
            "HasKey": true,
            "TypeValue": "(either str (enum [ \n              \"FullAnnotationToolBar\"\n              \"QuickAnnotationToolBar\"\n            ]))",
            "DefaultValue": "\"FullAnnotationToolBar\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "FullAnnotationToolBar",
                "Label": ""
              },
              {
                "Name": "QuickAnnotationToolBar",
                "Label": ""
              }
            ]
          },
          "ScrollOverlap": {
            "Name": "",
            "Key": "ScrollOverlap",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "UInt",
            "Min": "0",
            "HasMin": true,
            "Max": "50",
            "HasMax": true,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowScrollBars": {
            "Name": "",
            "Key": "ShowScrollBars",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ShowSourceLocationsGraphically": {
            "Name": "",
            "Key": "ShowSourceLocationsGraphically",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SmoothScrolling": {
            "Name": "",
            "Key": "SmoothScrolling",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TrimMargins": {
            "Name": "",
            "Key": "TrimMargins",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "TrimMode": {
            "Name": "",
            "Key": "TrimMode",
            "HasKey": true,
            "TypeValue": "(either str (enum [ \n              \"None\"\n              \"Margins\"\n              \"Selection\"\n            ]))",
            "DefaultValue": "\"None\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "None",
                "Label": ""
              },
              {
                "Name": "Margins",
                "Label": ""
              },
              {
                "Name": "Selection",
                "Label": ""
              }
            ]
          },
          "UseCustomBackgroundColor": {
            "Name": "",
            "Key": "UseCustomBackgroundColor",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ViewColumns": {
            "Name": "",
            "Key": "ViewColumns",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "3",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "UInt",
            "Min": "1",
            "HasMin": true,
            "Max": "8",
            "HasMax": true,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ViewContinuous": {
            "Name": "",
            "Key": "ViewContinuous",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ViewMode": {
            "Name": "",
            "Key": "ViewMode",
            "HasKey": true,
            "TypeValue": "(either str (enum [ \n              \"Single\"\n              \"Facing\"\n              \"FacingFirstCentered\"\n              \"Summary\"\n            ]))",
            "DefaultValue": "\"Single\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "Single",
                "Label": ""
              },
              {
                "Name": "Facing",
                "Label": ""
              },
              {
                "Name": "FacingFirstCentered",
                "Label": ""
              },
              {
                "Name": "Summary",
                "Label": ""
              }
            ]
          }
        },
        "Description": "PageView",
        "Name": "PageView"
      },
      "Reviews": {
        "Options": {
          "AnnotationContinuousMode": {
            "Name": "",
            "Key": "AnnotationContinuousMode",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "BuiltinAnnotationTools": {
            "Name": "",
            "Key": "BuiltinAnnotationTools",
            "HasKey": true,
            "TypeValue": "(either str (listOf str))",
            "DefaultValue": "\"builtinAnnotationTools\"",
            "IsDefaultCode": true,
            "Label": "",
            "Type": "StringList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "\n      QStringList builtinAnnotationTools;\n      // load the default tool list from the 'xml tools definition' file\n      QFile infoFile( QStandardPaths::locate(QStandardPaths::GenericDataLocation, QStringLiteral(\"okular/tools.xml\")) );\n      if ( infoFile.exists() \u0026\u0026 infoFile.open( QIODevice::ReadOnly ) )\n      {\n          QDomDocument doc;\n          if ( doc.setContent( \u0026infoFile ) )\n          {\n              QDomElement toolsDefinition = doc.elementsByTagName(QStringLiteral(\"annotatingTools\")).item( 0 ).toElement();\n               // create the builtinAnnotationTools list from the XML dom tree\n              QDomNode toolDescription = toolsDefinition.firstChild();\n              while ( toolDescription.isElement() )\n              {\n                  QDomElement toolElement = toolDescription.toElement();\n                  if ( toolElement.tagName() == QStringLiteral(\"tool\") )\n                  {\n                      QDomDocument temp;\n                      temp.appendChild( temp.importNode( toolElement, true) );\n                      // add each \u003ctool\u003e...\u003c/tool\u003e as XML string\n                      builtinAnnotationTools \u003c\u003c temp.toString(-1);\n                  }\n                  toolDescription = toolDescription.nextSibling();\n              }\n          }\n          else\n          {\n              qWarning() \u003c\u003c \"AnnotatingTools XML file seems to be damaged\";\n          }\n      }\n      else\n      {\n          qWarning() \u003c\u003c \"Unable to open AnnotatingTools XML definition\";\n      }\n    ",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "DrawingTools": {
            "Name": "",
            "Key": "DrawingTools",
            "HasKey": true,
            "TypeValue": "(either str (listOf str))",
            "DefaultValue": "\"drawingTools\"",
            "IsDefaultCode": true,
            "Label": "",
            "Type": "StringList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "\n      QStringList drawingTools;\n      // load the default tool list from the 'xml tools definition' file\n      QFile infoDrawingFile( QStandardPaths::locate(QStandardPaths::GenericDataLocation, QStringLiteral(\"okular/drawingtools.xml\")) );\n      if ( infoDrawingFile.exists() \u0026\u0026 infoDrawingFile.open( QIODevice::ReadOnly ) )\n      {\n          QDomDocument doc;\n          if ( doc.setContent( \u0026infoDrawingFile ) )\n          {\n              const QDomElement toolsDefinition = doc.elementsByTagName(QStringLiteral(\"drawingTools\")).item( 0 ).toElement();\n               // create the annotationTools list from the XML dom tree\n              QDomNode toolDescription = toolsDefinition.firstChild();\n              while ( toolDescription.isElement() )\n              {\n                  const QDomElement toolElement = toolDescription.toElement();\n                  if ( toolElement.tagName() == QStringLiteral(\"tool\") )\n                  {\n                      QDomDocument temp;\n                      temp.appendChild( temp.importNode( toolElement, true) );\n                      // add each \u003ctool\u003e...\u003c/tool\u003e as XML string\n                      drawingTools \u003c\u003c temp.toString(-1);\n                  }\n                  toolDescription = toolDescription.nextSibling();\n              }\n          }\n          else\n          {\n              qWarning() \u003c\u003c \"DrawingTools XML file seems to be damaged\";\n          }\n      }\n      else\n      {\n          qWarning() \u003c\u003c \"Unable to open DrawingTools XML definition\";\n      }\n    ",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "QuickAnnotationDefaultAction": {
            "Name": "",
            "Key": "QuickAnnotationDefaultAction",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "QuickAnnotationTools": {
            "Name": "",
            "Key": "QuickAnnotationTools",
            "HasKey": true,
            "TypeValue": "(either str (listOf str))",
            "DefaultValue": "\"quickAnnotationTools\"",
            "IsDefaultCode": true,
            "Label": "",
            "Type": "StringList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "\n      QStringList quickAnnotationTools;\n      // load the default tool list from the 'xml tools definition' file\n      QFile quickAnnFile( QStandardPaths::locate(QStandardPaths::GenericDataLocation, QStringLiteral(\"okular/toolsQuick.xml\")) );\n      if ( quickAnnFile.exists() \u0026\u0026 quickAnnFile.open( QIODevice::ReadOnly ) )\n      {\n          QDomDocument doc;\n          if ( doc.setContent( \u0026quickAnnFile ) )\n          {\n              QDomElement toolsDefinition = doc.elementsByTagName(QStringLiteral(\"quickAnnotatingTools\")).item( 0 ).toElement();\n               // create the quickAnnotationTools list from the XML dom tree\n              QDomNode toolDescription = toolsDefinition.firstChild();\n              while ( toolDescription.isElement() )\n              {\n                  QDomElement toolElement = toolDescription.toElement();\n                  if ( toolElement.tagName() == QStringLiteral(\"tool\") )\n                  {\n                      QDomDocument temp;\n                      temp.appendChild( temp.importNode( toolElement, true) );\n                      // add each \u003ctool\u003e...\u003c/tool\u003e as XML string\n                      quickAnnotationTools \u003c\u003c temp.toString(-1);\n                  }\n                  toolDescription = toolDescription.nextSibling();\n              }\n          }\n          else\n          {\n              qWarning() \u003c\u003c \"QuickAnnotatingTools XML file seems to be damaged\";\n          }\n      }\n      else\n      {\n          qWarning() \u003c\u003c \"Unable to open QuickAnnotatingTools XML definition\";\n      }\n    ",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ReviewsSearchCaseSensitive": {
            "Name": "",
            "Key": "ReviewsSearchCaseSensitive",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ReviewsSearchRegularExpression": {
            "Name": "",
            "Key": "ReviewsSearchRegularExpression",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Reviews",
        "Name": "Reviews"
      },
      "Search": {
        "Options": {
          "FindAsYouType": {
            "Name": "",
            "Key": "FindAsYouType",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SearchCaseSensitive": {
            "Name": "",
            "Key": "SearchCaseSensitive",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "SearchFromCurrentPage": {
            "Name": "",
            "Key": "SearchFromCurrentPage",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Search",
        "Name": "Search"
      },
      "Zoom": {
        "Options": {
          "ZoomMode": {
            "Name": "",
            "Key": "ZoomMode",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "1",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "3",
            "HasMax": true,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Zoom",
        "Name": "Zoom"
      }
    }
  },
  "org_kde_initialsystemsetup_license": {
    "RCName": "org_kde_initialsystemsetup_licenserc",
    "Name": "org_kde_initialsystemsetup_license",
    "Groups": {
      "General": {
        "Options": {
          "Format": {
            "Name": "Format",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (enum [ \n              \"PlainText\"\n              \"Markdown\"\n              \"HTML\"\n            ]))",
            "DefaultValue": "\"PlainText\"",
            "IsDefaultCode": false,
            "Label": "\n\t\t\t\tThis tells KISS what format the license file is in, which will affect rendering.\n\t\t\t",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "PlainText",
                "Label": ""
              },
              {
                "Name": "Markdown",
                "Label": ""
              },
              {
                "Name": "HTML",
                "Label": ""
              }
            ]
          },
          "LicenseTextFile": {
            "Name": "LicenseTextFile",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"/dev/null\"",
            "IsDefaultCode": false,
            "Label": "\n\t\t\t\tThis tells KISS which file contains the license text to display.\n\t\t\t",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "General",
        "Name": "General"
      }
    }
  },
  "pimcommon": {
    "RCName": "pimcommonrc",
    "Name": "pimcommon",
    "Groups": {
      "Autocorrect": {
        "Options": {
          "add-non-breaking-space": {
            "Name": "AddNonBreakingSpaceInFrench",
            "Key": "add-non-breaking-space",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "advanced-autocorrect": {
            "Name": "AdvancedAutocorrect",
            "Key": "advanced-autocorrect",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "auto-bold-underline": {
            "Name": "AutoBoldUnderline",
            "Key": "auto-bold-underline",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "auto-fractions": {
            "Name": "AutoFractions",
            "Key": "auto-fractions",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "autoformat-url": {
            "Name": "AutoFormatUrl",
            "Key": "autoformat-url",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "capitalize-week-days": {
            "Name": "CapitalizeWeekDays",
            "Key": "capitalize-week-days",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "custom-system-path": {
            "Name": "CustomSystemPath",
            "Key": "custom-system-path",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "custom-writable-path": {
            "Name": "CustomWritablePath",
            "Key": "custom-writable-path",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "enabled": {
            "Name": "Enabled",
            "Key": "enabled",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "fix-two-upper-case-chars": {
            "Name": "FixTwoUppercaseChars",
            "Key": "fix-two-upper-case-chars",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "replace-double-quotes": {
            "Name": "ReplaceDoubleQuotes",
            "Key": "replace-double-quotes",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "replace-double-quotes-by-french-quotes": {
            "Name": "ReplaceDoubleQuotesByFrenchQuotes",
            "Key": "replace-double-quotes-by-french-quotes",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "replace-single-quotes": {
            "Name": "ReplaceSingleQuotes",
            "Key": "replace-single-quotes",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "single-spaces": {
            "Name": "SingleSpaces",
            "Key": "single-spaces",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "super-script": {
            "Name": "SuperScript",
            "Key": "super-script",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "typographic-double-quotes": {
            "Name": "TypographicDoubleQuotes",
            "Key": "typographic-double-quotes",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "typographic-single-quotes": {
            "Name": "TypographicSingleQuotes",
            "Key": "typographic-single-quotes",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "upper-case-first-char-of-sentence": {
            "Name": "UppercaseFirstCharOfSentence",
            "Key": "upper-case-first-char-of-sentence",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Autocorrect",
        "Name": "Autocorrect"
      }
    }
  },
  "plasmacamera": {
    "RCName": "plasmacamerarc",
    "Name": "plasmacamera",
    "Groups": {
      "General": {
        "Options": {
          "cameraDeviceId": {
            "Name": "",
            "Key": "cameraDeviceId",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "string",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "cameraPosition": {
            "Name": "",
            "Key": "cameraPosition",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "resolution": {
            "Name": "",
            "Key": "resolution",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "size",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "whiteBalanceMode": {
            "Name": "",
            "Key": "whiteBalanceMode",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "General",
        "Name": "General"
      }
    }
  },
  "qmlkonsole": {
    "RCName": "qmlkonsolerc",
    "Name": "qmlkonsole",
    "Groups": {
      "General": {
        "Options": {
          "actions": {
            "Name": "",
            "Key": "actions",
            "HasKey": true,
            "TypeValue": "(either str (listOf str))",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "StringList",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "blurWindow": {
            "Name": "",
            "Key": "blurWindow",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "colorScheme": {
            "Name": "",
            "Key": "colorScheme",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "''\"cool-retro-term\"''",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "string",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "fontFamily": {
            "Name": "",
            "Key": "fontFamily",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "''\"Monospace\"''",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "string",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "fontSize": {
            "Name": "",
            "Key": "fontSize",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "12",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "int",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "windowOpacity": {
            "Name": "",
            "Key": "windowOpacity",
            "HasKey": true,
            "TypeValue": "(either str float)",
            "DefaultValue": "1.0",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "double",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "General",
        "Name": "General"
      }
    }
  },
  "skanpage": {
    "RCName": "skanpagerc",
    "Name": "skanpage",
    "Groups": {
      "General": {
        "Options": {
          "defaultFolder": {
            "Name": "",
            "Key": "defaultFolder",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Url",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "defaultNameFilter": {
            "Name": "",
            "Key": "defaultNameFilter",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "deviceModel": {
            "Name": "",
            "Key": "deviceModel",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "deviceName": {
            "Name": "",
            "Key": "deviceName",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "deviceVendor": {
            "Name": "",
            "Key": "deviceVendor",
            "HasKey": true,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "showAllDevices": {
            "Name": "",
            "Key": "showAllDevices",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "General",
        "Name": "General"
      },
      "UiSettings": {
        "Options": {
          "exportHeight": {
            "Name": "",
            "Key": "exportHeight",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"\n      400\n    \"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "exportWidth": {
            "Name": "",
            "Key": "exportWidth",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"\n        600\n    \"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "height": {
            "Name": "",
            "Key": "height",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"\n        550\n    \"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "settingsHeight": {
            "Name": "",
            "Key": "settingsHeight",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"\n        300\n    \"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "settingsWidth": {
            "Name": "",
            "Key": "settingsWidth",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"\n        500\n    \"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "shareHeight": {
            "Name": "",
            "Key": "shareHeight",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"\n        400\n    \"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "shareWidth": {
            "Name": "",
            "Key": "shareWidth",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"\n        600\n    \"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "showAllOptions": {
            "Name": "",
            "Key": "showAllOptions",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "\"\n      false\n    \"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "showOptions": {
            "Name": "",
            "Key": "showOptions",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "\"\n      true\n    \"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "splitViewItemWidth": {
            "Name": "",
            "Key": "splitViewItemWidth",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"\n        300\n    \"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "width": {
            "Name": "",
            "Key": "width",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"\n        950\n    \"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "x": {
            "Name": "",
            "Key": "x",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"\n        0\n    \"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "y": {
            "Name": "",
            "Key": "y",
            "HasKey": true,
            "TypeValue": "(either str int)",
            "DefaultValue": "\"\n        0\n    \"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "UiSettings",
        "Name": "UiSettings"
      }
    }
  },
  "spectacle": {
    "RCName": "spectaclerc",
    "Name": "spectacle",
    "Groups": {
      "Annotations": {
        "Options": {
          "annotationToolType": {
            "Name": "annotationToolType",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (enum [ \n            ]))",
            "DefaultValue": "\"AnnotationDocument::EditActionType::None\"",
            "IsDefaultCode": false,
            "Label": "The last used annotation tool type",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "arrowShadow": {
            "Name": "arrowShadow",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Whether arrow annotation tool has a drop shadow",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "arrowStrokeColor": {
            "Name": "arrowStrokeColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"255,0,0,255\"",
            "IsDefaultCode": false,
            "Label": "Stroke width for arrow annotation tool",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "arrowStrokeWidth": {
            "Name": "arrowStrokeWidth",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "4",
            "IsDefaultCode": false,
            "Label": "Stroke width for arrow annotation tool",
            "Type": "UInt",
            "Min": "1",
            "HasMin": true,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ellipseFillColor": {
            "Name": "ellipseFillColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"255,0,0,255\"",
            "IsDefaultCode": false,
            "Label": "Stroke width for ellipse annotation tool",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ellipseShadow": {
            "Name": "ellipseShadow",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Whether ellipse annotation tool has a drop shadow",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ellipseStrokeColor": {
            "Name": "ellipseStrokeColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"0,0,0,255\"",
            "IsDefaultCode": false,
            "Label": "Stroke width for ellipse annotation tool",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "ellipseStrokeWidth": {
            "Name": "ellipseStrokeWidth",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "Stroke width for ellipse annotation tool",
            "Type": "UInt",
            "Min": "0",
            "HasMin": true,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "freehandShadow": {
            "Name": "freehandShadow",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Whether freehand annotation tool has a drop shadow",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "freehandStrokeColor": {
            "Name": "freehandStrokeColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"255,0,0,255\"",
            "IsDefaultCode": false,
            "Label": "Stroke width for freehand annotation tool",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "freehandStrokeWidth": {
            "Name": "freehandStrokeWidth",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "4",
            "IsDefaultCode": false,
            "Label": "Stroke width for freehand annotation tool",
            "Type": "UInt",
            "Min": "1",
            "HasMin": true,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "highlighterStrokeColor": {
            "Name": "highlighterStrokeColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"255,255,0,255\"",
            "IsDefaultCode": false,
            "Label": "Stroke width for highlighter annotation tool",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "highlighterStrokeWidth": {
            "Name": "highlighterStrokeWidth",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "20",
            "IsDefaultCode": false,
            "Label": "Stroke width for highlighter annotation tool",
            "Type": "UInt",
            "Min": "1",
            "HasMin": true,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "lineShadow": {
            "Name": "lineShadow",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Whether line annotation tool has a drop shadow",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "lineStrokeColor": {
            "Name": "lineStrokeColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"255,0,0,255\"",
            "IsDefaultCode": false,
            "Label": "Stroke width for line annotation tool",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "lineStrokeWidth": {
            "Name": "lineStrokeWidth",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "4",
            "IsDefaultCode": false,
            "Label": "Stroke width for line annotation tool",
            "Type": "UInt",
            "Min": "1",
            "HasMin": true,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "numberFillColor": {
            "Name": "numberFillColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"255,0,0,255\"",
            "IsDefaultCode": false,
            "Label": "Stroke width for ellipse annotation tool",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "numberFont": {
            "Name": "numberFont",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "Font for annotations",
            "Type": "Font",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "numberFontColor": {
            "Name": "numberFontColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"0,0,0,255\"",
            "IsDefaultCode": false,
            "Label": "Font color for annotations",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "numberShadow": {
            "Name": "numberShadow",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Whether number annotation tool has a drop shadow",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "rectangleFillColor": {
            "Name": "rectangleFillColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"255,0,0,255\"",
            "IsDefaultCode": false,
            "Label": "Stroke width for rectangle annotation tool",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "rectangleShadow": {
            "Name": "rectangleShadow",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Whether rectangle annotation tool has a drop shadow",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "rectangleStrokeColor": {
            "Name": "rectangleStrokeColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"0,0,0,255\"",
            "IsDefaultCode": false,
            "Label": "Stroke width for rectangle annotation tool",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "rectangleStrokeWidth": {
            "Name": "rectangleStrokeWidth",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "0",
            "IsDefaultCode": false,
            "Label": "Stroke width for rectangle annotation tool",
            "Type": "UInt",
            "Min": "0",
            "HasMin": true,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "textFont": {
            "Name": "textFont",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "Font for annotations",
            "Type": "Font",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "textFontColor": {
            "Name": "textFontColor",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"0,0,0,255\"",
            "IsDefaultCode": false,
            "Label": "Font color for annotations",
            "Type": "Color",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "textShadow": {
            "Name": "textShadow",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Whether text annotation tool has a drop shadow",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Annotations",
        "Name": "Annotations"
      },
      "General": {
        "Options": {
          "autoSaveImage": {
            "Name": "autoSaveImage",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Save screenshot automatically after it is taken",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "clipboardGroup": {
            "Name": "clipboardGroup",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (enum [ \n              \"PostScreenshotDoNothing\"\n              \"PostScreenshotCopyImage\"\n              \"PostScreenshotCopyLocation\"\n            ]))",
            "DefaultValue": "\"PostScreenshotDoNothing\"",
            "IsDefaultCode": false,
            "Label": "Clipboard action which should be executed after the screenshot is taken",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "PostScreenshotDoNothing",
                "Label": ""
              },
              {
                "Name": "PostScreenshotCopyImage",
                "Label": ""
              },
              {
                "Name": "PostScreenshotCopyLocation",
                "Label": ""
              }
            ]
          },
          "onLaunchAction": {
            "Name": "launchAction",
            "Key": "onLaunchAction",
            "HasKey": true,
            "TypeValue": "(either str (enum [ \n              \"TakeFullscreenScreenshot\"\n              \"UseLastUsedCapturemode\"\n              \"DoNotTakeScreenshot\"\n            ]))",
            "DefaultValue": "\"TakeFullscreenScreenshot\"",
            "IsDefaultCode": false,
            "Label": "What to do when Spectacle is launched",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "TakeFullscreenScreenshot",
                "Label": ""
              },
              {
                "Name": "UseLastUsedCapturemode",
                "Label": ""
              },
              {
                "Name": "DoNotTakeScreenshot",
                "Label": ""
              }
            ]
          },
          "printKeyActionRunning": {
            "Name": "printKeyActionRunning",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (enum [ \n              \"TakeNewScreenshot\"\n              \"StartNewInstance\"\n              \"FocusWindow\"\n            ]))",
            "DefaultValue": "\"TakeNewScreenshot\"",
            "IsDefaultCode": false,
            "Label": "What should happen if print key is pressed when Spectacle is already running",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "TakeNewScreenshot",
                "Label": ""
              },
              {
                "Name": "StartNewInstance",
                "Label": ""
              },
              {
                "Name": "FocusWindow",
                "Label": ""
              }
            ]
          },
          "rememberLastRectangularRegion": {
            "Name": "rememberLastRectangularRegion",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (enum [ \n              \"Never\"\n              \"Always\"\n              \"UntilSpectacleIsClosed\"\n            ]))",
            "DefaultValue": "\"Always\"",
            "IsDefaultCode": false,
            "Label": "Remember the last rectangular region",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "Never",
                "Label": ""
              },
              {
                "Name": "Always",
                "Label": ""
              },
              {
                "Name": "UntilSpectacleIsClosed",
                "Label": ""
              }
            ]
          },
          "showCaptureInstructions": {
            "Name": "showCaptureInstructions",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Whether to show capture instructions in the region selection",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "showMagnifier": {
            "Name": "showMagnifier",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Whether to show a magnifier in the region selection",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "useLightMaskColour": {
            "Name": "useLightMaskColor",
            "Key": "useLightMaskColour",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Whether to use a light color mask in the region selection dialog",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "useReleaseToCapture": {
            "Name": "useReleaseToCapture",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Whether the screenshot should be captured after selecting the region and releasing the mouse",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "General",
        "Name": "General"
      },
      "GuiConfig": {
        "Options": {
          "captureDelay": {
            "Name": "captureDelay",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str float)",
            "DefaultValue": "0.0",
            "IsDefaultCode": false,
            "Label": "Delay",
            "Type": "Double",
            "Min": "0",
            "HasMin": true,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "captureMode": {
            "Name": "captureMode",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (enum [ \n            ]))",
            "DefaultValue": "\"CaptureModeModel::CaptureMode::AllScreens\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "cropRegion": {
            "Name": "cropRegion",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"QRect()\"",
            "IsDefaultCode": false,
            "Label": "The last used region the user selected",
            "Type": "Rect",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "includeDecorations": {
            "Name": "includeDecorations",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "true",
            "IsDefaultCode": false,
            "Label": "Whether the window decorations are included in the screenshot",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "includePointer": {
            "Name": "includePointer",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Whether the mouse cursor is included in the screenshot",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "onClickChecked": {
            "Name": "captureOnClick",
            "Key": "onClickChecked",
            "HasKey": true,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Take screenshot on click",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "quitAfterSaveCopyExport": {
            "Name": "quitAfterSaveCopyExport",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Quit after saving or copying an image",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "transientOnly": {
            "Name": "transientOnly",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str bool)",
            "DefaultValue": "false",
            "IsDefaultCode": false,
            "Label": "Only capture the current pop up menu",
            "Type": "Bool",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "GuiConfig",
        "Name": "GuiConfig"
      },
      "Save": {
        "Options": {
          "compressionQuality": {
            "Name": "compressionQuality",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "90",
            "IsDefaultCode": false,
            "Label": "Compression quality for lossy file formats",
            "Type": "UInt",
            "Min": "0",
            "HasMin": true,
            "Max": "100",
            "HasMax": true,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "defaultSaveImageFormat": {
            "Name": "defaultSaveImageFormat",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"PNG\"",
            "IsDefaultCode": false,
            "Label": "Default save image format",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "defaultSaveLocation": {
            "Name": "defaultSaveLocation",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\n            QUrl::fromLocalFile(QStandardPaths::writableLocation(QStandardPaths::PicturesLocation)+QLatin1Char('/')) \n        \"",
            "IsDefaultCode": true,
            "Label": "Default filename",
            "Type": "Url",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "lastSaveAsLocation": {
            "Name": "lastSaveAsLocation",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"defaultSaveLocation()\"",
            "IsDefaultCode": true,
            "Label": "Last path used for \"save as\" action",
            "Type": "Url",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "lastSaveLocation": {
            "Name": "lastSaveLocation",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"defaultSaveLocation()\"",
            "IsDefaultCode": true,
            "Label": "The path of the file saved last",
            "Type": "Url",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "saveFilenameFormat": {
            "Name": "saveFilenameFormat",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"Screenshot_%Y%M%D_%H%m%S\"",
            "IsDefaultCode": false,
            "Label": "The default filename used when saving",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "Save",
        "Name": "Save"
      }
    }
  },
  "tellyskout": {
    "RCName": "tellyskoutrc",
    "Name": "tellyskout",
    "Groups": {
      "General": {
        "Options": {
          "deleteProgramAfter": {
            "Name": "deleteProgramAfter",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str int)",
            "DefaultValue": "1",
            "IsDefaultCode": false,
            "Label": "Delete program after",
            "Type": "UInt",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          },
          "fetcher": {
            "Name": "fetcher",
            "Key": "",
            "HasKey": false,
            "TypeValue": "(either str (enum [ \n              \"TVSpielfilm\"\n              \"XMLTV\"\n            ]))",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "",
            "Type": "Enum",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": true,
            "Choices": [
              {
                "Name": "TVSpielfilm",
                "Label": ""
              },
              {
                "Name": "XMLTV",
                "Label": ""
              }
            ]
          }
        },
        "Description": "General",
        "Name": "General"
      },
      "XMLTV": {
        "Options": {
          "xmltvFile": {
            "Name": "xmltvFile",
            "Key": "",
            "HasKey": false,
            "TypeValue": "str",
            "DefaultValue": "\"\"",
            "IsDefaultCode": false,
            "Label": "XMLTV file",
            "Type": "String",
            "Min": "",
            "HasMin": false,
            "Max": "",
            "HasMax": false,
            "Code": "",
            "IsCode": false,
            "HasChoices": false,
            "Choices": null
          }
        },
        "Description": "XMLTV",
        "Name": "XMLTV"
      }
    }
  }
}