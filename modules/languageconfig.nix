{ config, lib, ... }:
with lib;
let cfg = config.programs.plasma;
in {
  options.programs.plasma.kdevelop = {
    "Language Support" = with types;
      mkOption {
        type = submodule {
          options = {
            "Automatic Invocation" = mkOption {
              type = nullOr (either str bool);
              default = true;
              description = ''


                Type: Bool
              '';
            };
            "highlightSemanticProblems" = mkOption {
              type = nullOr (either str bool);
              default = true;
              description = ''


                Type: Bool
              '';
            };
            "highlightProblematicLines" = mkOption {
              type = nullOr (either str bool);
              default = false;
              description = ''


                Type: Bool
              '';
            };
            "boldDeclarations" = mkOption {
              type = nullOr (either str bool);
              default = true;
              description = ''


                Type: Bool
              '';
            };
            "showMultiLineSelectionInformation" = mkOption {
              type = nullOr (either str bool);
              default = false;
              description = ''


                Type: Bool
              '';
            };
            "localColorization" = mkOption {
              type = nullOr (either str int);
              default = 170;
              description = ''


                Type: Int
              '';
            };
            "globalColorSource" = mkOption {
              type = nullOr (either str (enum [ "AutoGenerated" "FromTheme" ]));
              default = "";
              description = ''


                Type: Enum
                Choices: 
                  - AutoGenerated
                  - FromTheme
              '';
            };
            "globalColorization" = mkOption {
              type = nullOr (either str int);
              default = 255;
              description = ''


                Type: Int
              '';
            };
            "minFilesForSimplifiedParsing" = mkOption {
              type = nullOr (either str int);
              default = 100000;
              description = ''


                Type: Int
              '';
            };
            "todoMarkerWords" = mkOption {
              type = nullOr (either str str);
              default = "TODO FIXME";
              description = ''


                Type: String
              '';
            };
            "completionDetail" = mkOption {
              type = nullOr (either str
                (enum [ "Minimal" "MinimalWhenAutomatic" "AlwaysFull" ]));
              default = "";
              description = ''


                Type: Enum
                Choices: 
                  - Minimal
                  - MinimalWhenAutomatic
                  - AlwaysFull
              '';
            };
            "problemInlineNotesLevel" = mkOption {
              type = nullOr (either str (enum [ ]));
              default =
                "KDevelop::ICompletionSettings::WarningsAndErrorsProblemInlineNotesLevel";
              description = ''


                Type: Enum
              '';
            };
          };
        };
        default = { };
        description = "Language Support";
      };
  };
  config =
    mkIf cfg.enable { programs.plasma.files."kdeveloprc" = cfg.kdevelop; };
}
